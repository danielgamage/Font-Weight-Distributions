{"version":3,"sources":["webpack:///static/js/main.bb419bbf.js","webpack:///webpack/bootstrap b7b9b8433b7e3f20bbc7","webpack:///./~/promise/lib/core.js","webpack:///./config/polyfills.js","webpack:///./~/asap/browser-raw.js","webpack:///./src/data/fonts.js","webpack:///./src/index.js","webpack:///./~/d3/build/d3.js","webpack:///./~/object-assign/index.js","webpack:///./~/promise/lib/es6-extensions.js","webpack:///./~/promise/lib/rejection-tracking.js","webpack:///./~/whatwg-fetch/fetch.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","i","Object","prototype","hasOwnProperty","_m","args","slice","fn","a","b","apply","this","concat","noop","getThen","obj","then","ex","LAST_ERROR","IS_ERROR","tryCallOne","tryCallTwo","Promise","TypeError","_45","_81","_65","_54","doResolve","safeThen","self","onFulfilled","onRejected","constructor","resolve","reject","res","handle","Handler","deferred","_10","push","handleResolved","asap","cb","promise","ret","newValue","finale","bind","_97","length","done","value","reason","_61","enable","window","assign","global","rawAsap","task","queue","requestFlush","flushing","flush","index","currentIndex","capacity","scan","newLength","makeRequestCallFromMutationObserver","callback","toggle","observer","BrowserMutationObserver","node","document","createTextNode","observe","characterData","data","makeRequestCallFromTimer","handleTimer","clearTimeout","timeoutHandle","clearInterval","intervalHandle","setTimeout","setInterval","scope","MutationObserver","WebKitMutationObserver","name","url","interpolations","style","weight","_interopRequireWildcard","__esModule","newObj","key","default","_interopRequireDefault","_toConsumableArray","arr","Array","isArray","arr2","from","make_x_gridlines","d3","axisBottom","x","ticks","make_y_gridlines","axisLeft","y","_fonts","_fonts2","_d","myFonts","getColor","hue","Math","floor","sat","min","hsl","margin","top","right","bottom","left","width","height","timeParse","scaleLinear","domain","keys","range","map","el","lineChart","select","append","attr","table","drawGraph","valueline","line","curve","curveCatmullRom","d","indexOf","filter","interpolation","interpolationIndex","selectAll","enter","exit","row","pieChart","arcs","pie","arc","arcIndex","arcRendered","innerRadius","outerRadius","cornerRadius","padAngle","startAngle","endAngle","text","tickSize","tickFormat","factory","ascendingComparator","f","ascending","pair","tickStep","start","stop","count","step0","abs","max","step1","pow","log","LN10","error","e10","e5","e2","translateX","translateY","center","scale","offset","bandwidth","round","entering","__axis","axis","orient","context","values","tickValues","tickArguments","format","identity$1","spacing","tickSizeInner","tickPadding","range0","range1","position","copy","selection","path","tick","order","tickExit","tickEnter","merge","insert","k","transition","epsilon","isFinite","transform","getAttribute","parentNode","remove","tickSizeOuter","each","_","arguments","slice$1","axisTop","axisRight","dispatch","t","n","Error","Dispatch","parseTypenames","typenames","types","trim","split","type","get","set","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElement","createElementNS","creatorFixed","fullname","space","local","local$1","Local","nextId","toString","filterContextListener","listener","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","on","__on","o","j","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","sourceEvent","none","empty$1","EnterNode","parent","datum","_next","_parent","bindIndex","update","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$1","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","appendChild","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","dispatchEvent","params","window$$1","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","root","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","target","subject","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","extend","definition","create","Color","color","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","h","s","l","Hsl","hslConvert","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","cssView","defaultView","getComputedStyle","getPropertyValue","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","interval","init","schedule","__transition","state","CREATED","set$1","STARTING","get$1","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","interpolate$$2","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","svg","ownerSVGElement","local$$1","__brush","empty","extent","brushSelection","dim","output","brushX","brush$1","X","brushY","Y","brush","overlay","property","initialize","cursors","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","point","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","source","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","defaultEndAngle","Map","map$1","object","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","inferColumns","rows","columnSet","forEach","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","next","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","undefined","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale$1","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","w","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","step","circleRadius","Intersection","points","other","entry","link$1","array","clipExtent","visible","interpolate","to","a1","corner","comparePoint","compareIntersection","ca","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","ao","ob","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","clipAuto","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","sum","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","L","B","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r1","r2","x21","y21","r21","x3","y3","r3","a2","c2","a3","c3","A","place","ax","ay","da","db","dc","intersects","distance1","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","oa","ox","oy","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_data","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$4","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","d1","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$1","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","Date","test","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","formatIsoNative","toISOString","parseIsoNative","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","arcOuterRadius","arcStartAngle","arcEndAngle","arcPadAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","_curve","curveRadial","radial","radialLine","point$2","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","version","hi","mid","ascendingBisect","bisectLeft","pairs","cross","ia","ib","ic","na","nb","descending","number","variance","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","mean","median","numbers","arrays","merged","permute","permutes","xi","xj","shuffle","random","transpose","zip","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","html","touch","preventDefault","constant$2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","define","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","PI","Kn","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","requestAnimationFrame","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","epsilon$1","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","buffer","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","x$$1","y$$1","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","identity$3","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","temp","valueOf","epsilon2$1","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","extent$1","sum$1","sinPhi1","absDelta","intersection","phiArc","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_line","_point","lengthRing","_circle","index$1","contextStream","projectionStream","measure","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","reflectX","reflectY","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","shuffle$1","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$3","defer","await","results","awaitAll","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential$1","request","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","durationSecond$1","durationHour$1","durationDay$1","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","isoSpecifier","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","constant$10","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$5","none$1","none$2","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","randomUniform","randomLogNormal","randomBates","randomExponential","scaleBand","scalePoint","scaleIdentity","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","defineProperty","toObject","val","shouldUseNative","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","test3","letter","err","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","remaining","race","disable","enabled","options","onUnhandled","allRejections","matchWhitelist","rejections","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","console","warn","_72","errStr","some","cls","ReferenceError","RangeError","normalizeName","normalizeValue","iteratorFor","items","iterator","support","iterable","Symbol","Headers","consumed","body","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","Uint8Array","chars","bufferClone","byteLength","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","rejected","decode","normalizeMethod","upcased","Request","credentials","referrer","form","bytes","decodeURIComponent","parseHeaders","rawHeaders","parts","Response","bodyInit","ok","statusText","fetch","viewClasses","DataView","isView","oldValue","thisArg","clone","redirectStatuses","redirect","getAllResponseHeaders","responseURL","withCredentials","polyfill"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,8BAGAV,EAAA,IDIW,SAASD,GAEnB,IAAI,GAAIY,KAAKZ,GACZ,GAAGa,OAAOC,UAAUC,eAAeP,KAAKR,EAASY,GAChD,aAAcZ,GAAQY,IACtB,IAAK,WAAY,KACjB,KAAK,SAEJZ,EAAQY,GAAM,SAASI,GACtB,GAAIC,GAAOD,EAAGE,MAAM,GAAIC,EAAKnB,EAAQgB,EAAG,GACxC,OAAO,UAAUI,EAAEC,EAAEX,GACpBS,EAAGG,MAAMC,MAAOH,EAAEC,EAAEX,GAAGc,OAAOP,MAE9BjB,EAAQY,GACV,MACD,SAECZ,EAAQY,GAAKZ,EAAQA,EAAQY,IAKhC,MAAOZ,KAGF,SAASK,EAAQD,EAASH,GAE/BA,EAAoB,GACpBI,EAAOD,QAAUH,EAAoB,IAKhC,SAASI,EAAQD,EAASH,GE3EhC,YAIA,SAAAwB,MAqBA,QAAAC,GAAAC,GACA,IACA,MAAAA,GAAAC,KACG,MAAAC,GAEH,MADAC,GAAAD,EACAE,GAIA,QAAAC,GAAAb,EAAAC,GACA,IACA,MAAAD,GAAAC,GACG,MAAAS,GAEH,MADAC,GAAAD,EACAE,GAGA,QAAAE,GAAAd,EAAAC,EAAAC,GACA,IACAF,EAAAC,EAAAC,GACG,MAAAQ,GAEH,MADAC,GAAAD,EACAE,GAMA,QAAAG,GAAAf,GACA,mBAAAI,MACA,SAAAY,WAAA,uCAEA,sBAAAhB,GACA,SAAAgB,WAAA,iBAEAZ,MAAAa,IAAA,EACAb,KAAAc,IAAA,EACAd,KAAAe,IAAA,KACAf,KAAAgB,IAAA,KACApB,IAAAM,GACAe,EAAArB,EAAAI,MAeA,QAAAkB,GAAAC,EAAAC,EAAAC,GACA,UAAAF,GAAAG,YAAA,SAAAC,EAAAC,GACA,GAAAC,GAAA,GAAAd,GAAAT,EACAuB,GAAApB,KAAAkB,EAAAC,GACAE,EAAAP,EAAA,GAAAQ,GAAAP,EAAAC,EAAAI,MAGA,QAAAC,GAAAP,EAAAS,GACA,SAAAT,EAAAL,KACAK,IAAAJ,GAKA,OAHAJ,GAAAkB,KACAlB,EAAAkB,IAAAV,GAEA,IAAAA,EAAAL,IACA,IAAAK,EAAAN,KACAM,EAAAN,IAAA,OACAM,EAAAH,IAAAY,IAGA,IAAAT,EAAAN,KACAM,EAAAN,IAAA,OACAM,EAAAH,KAAAG,EAAAH,IAAAY,SAGAT,GAAAH,IAAAc,KAAAF,OAGAG,GAAAZ,EAAAS,GAGA,QAAAG,GAAAZ,EAAAS,GACAI,EAAA,WACA,GAAAC,GAAA,IAAAd,EAAAL,IAAAc,EAAAR,YAAAQ,EAAAP,UACA,WAAAY,EAMA,YALA,IAAAd,EAAAL,IACAS,EAAAK,EAAAM,QAAAf,EAAAJ,KAEAS,EAAAI,EAAAM,QAAAf,EAAAJ,KAIA,IAAAoB,GAAA1B,EAAAwB,EAAAd,EAAAJ,IACAoB,KAAA3B,EACAgB,EAAAI,EAAAM,QAAA3B,GAEAgB,EAAAK,EAAAM,QAAAC,KAIA,QAAAZ,GAAAJ,EAAAiB,GAEA,GAAAA,IAAAjB,EACA,MAAAK,GACAL,EACA,GAAAP,WAAA,6CAGA,IACAwB,IACA,gBAAAA,IAAA,kBAAAA,IACA,CACA,GAAA/B,GAAAF,EAAAiC,EACA,IAAA/B,IAAAG,EACA,MAAAgB,GAAAL,EAAAZ,EAEA,IACAF,IAAAc,EAAAd,MACA+B,YAAAzB,GAKA,MAHAQ,GAAAL,IAAA,EACAK,EAAAJ,IAAAqB,MACAC,GAAAlB,EAEK,sBAAAd,GAEL,WADAY,GAAAZ,EAAAiC,KAAAF,GAAAjB,GAIAA,EAAAL,IAAA,EACAK,EAAAJ,IAAAqB,EACAC,EAAAlB,GAGA,QAAAK,GAAAL,EAAAiB,GACAjB,EAAAL,IAAA,EACAK,EAAAJ,IAAAqB,EACAzB,EAAA4B,KACA5B,EAAA4B,IAAApB,EAAAiB,GAEAC,EAAAlB,GAEA,QAAAkB,GAAAlB,GAKA,GAJA,IAAAA,EAAAN,MACAa,EAAAP,IAAAH,KACAG,EAAAH,IAAA,MAEA,IAAAG,EAAAN,IAAA,CACA,OAAAxB,GAAA,EAAmBA,EAAA8B,EAAAH,IAAAwB,OAAqBnD,IACxCqC,EAAAP,IAAAH,IAAA3B,GAEA8B,GAAAH,IAAA,MAIA,QAAAW,GAAAP,EAAAC,EAAAa,GACAlC,KAAAoB,YAAA,kBAAAA,KAAA,KACApB,KAAAqB,WAAA,kBAAAA,KAAA,KACArB,KAAAkC,UASA,QAAAjB,GAAArB,EAAAsC,GACA,GAAAO,IAAA,EACAhB,EAAAf,EAAAd,EAAA,SAAA8C,GACAD,IACAA,GAAA,EACAlB,EAAAW,EAAAQ,KACG,SAAAC,GACHF,IACAA,GAAA,EACAjB,EAAAU,EAAAS,KAEAF,IAAAhB,IAAAjB,IACAiC,GAAA,EACAjB,EAAAU,EAAA3B,IAhNA,GAAAyB,GAAAtD,EAAA,GAqBA6B,EAAA,KACAC,IA2BA1B,GAAAD,QAAA8B,EAgBAA,EAAAkB,IAAA,KACAlB,EAAA4B,IAAA,KACA5B,EAAAiC,IAAA1C,EAEAS,EAAApB,UAAAc,KAAA,SAAAe,EAAAC,GACA,GAAArB,KAAAsB,cAAAX,EACA,MAAAO,GAAAlB,KAAAoB,EAAAC,EAEA,IAAAI,GAAA,GAAAd,GAAAT,EAEA,OADAwB,GAAA1B,KAAA,GAAA2B,GAAAP,EAAAC,EAAAI,IACAA,IFyNM,SAAS3C,EAAQD,EAASH,GGtShC,mBAAAiC,WAIAjC,EAAA,IAAAmE,SACAC,OAAAnC,QAAAjC,EAAA,KAIAA,EAAA,IAIAY,OAAAyD,OAAArE,EAAA,IH6SM,SAASI,EAAQD,II1TvB,SAAAmE,GAAA,YAaA,SAAAC,GAAAC,GACAC,EAAAX,SACAY,IACAC,GAAA,GAGAF,IAAAX,QAAAU,EA0BA,QAAAI,KACA,KAAAC,EAAAJ,EAAAX,QAAA,CACA,GAAAgB,GAAAD,CAUA,IAPAA,GAAA,EACAJ,EAAAK,GAAAvE,OAMAsE,EAAAE,EAAA,CAGA,OAAAC,GAAA,EAAAC,EAAAR,EAAAX,OAAAe,EAAgEG,EAAAC,EAAkBD,IAClFP,EAAAO,GAAAP,EAAAO,EAAAH,EAEAJ,GAAAX,QAAAe,EACAA,EAAA,GAGAJ,EAAAX,OAAA,EACAe,EAAA,EACAF,GAAA,EAsEA,QAAAO,GAAAC,GACA,GAAAC,GAAA,EACAC,EAAA,GAAAC,GAAAH,GACAI,EAAAC,SAAAC,eAAA,GAEA,OADAJ,GAAAK,QAAAH,GAA4BI,eAAA,IAC5B,WACAP,KACAG,EAAAK,KAAAR,GA4CA,QAAAS,GAAAV,GACA,kBAWA,QAAAW,KAGAC,aAAAC,GACAC,cAAAC,GACAf,IAXA,GAAAa,GAAAG,WAAAL,EAAA,GAIAI,EAAAE,YAAAN,EAAA,KA5LA1F,EAAAD,QAAAoE,CAUA,IAOAG,GAPAD,KAGAE,GAAA,EAQAE,EAAA,EAIAE,EAAA,KA6CAsB,EAAA,mBAAA/B,KAAA7B,KACA6C,EAAAe,EAAAC,kBAAAD,EAAAE,sBAcA7B,GADA,kBAAAY,GACAJ,EAAAN,GA8BAiB,EAAAjB,GAQAL,EAAAG,eAgFAH,EAAAsB,6BJqU8BtF,KAAKJ,EAAU,WAAa,MAAOmB,WAI3D,SAASlB,EAAQD,GAEtB,YKliBDC,GAAOD,UAELqG,KAAQ,OACRC,IAAO,oCACPC,iBAEEC,MAAS,UACTC,OAAU,MAGVD,MAAS,WACTC,OAAU,MAGVD,MAAS,OACTC,OAAU,QAKZJ,KAAQ,mBACRC,IAAO,kDACPC,iBAEEC,MAAS,aACTC,OAAU,IAGVD,MAAS,QACTC,OAAU,MAGVD,MAAS,UACTC,OAAU,OAGVD,MAAS,WACTC,OAAU,OAGVD,MAAS,OACTC,OAAU,OAGVD,MAAS,QACTC,OAAU,QAKZJ,KAAQ,kBACRC,IAAO,wCACPC,iBAEEC,MAAS,aACTC,OAAU,IAGVD,MAAS,QACTC,OAAU,MAGVD,MAAS,UACTC,OAAU,MAGVD,MAAS,SACTC,OAAU,MAGVD,MAAS,WACTC,OAAU,MAGVD,MAAS,OACTC,OAAU,MAGVD,MAAS,QACTC,OAAU,QAKZJ,KAAQ,qBACRC,IAAO,+DACPC,iBAEEC,MAAS,aACTC,OAAU,IAGVD,MAAS,QACTC,OAAU,MAGVD,MAAS,UACTC,OAAU,MAGVD,MAAS,WACTC,OAAU,MAGVD,MAAS,OACTC,OAAU,MAGVD,MAAS,QACTC,OAAU,MAGVD,MAAS,wBACTC,OAAU,MAGVD,MAAS,sBACTC,OAAU,QAKZJ,KAAQ,qBACRC,IAAO,oDACPC,iBAEEC,MAAS,aACTC,OAAU,IAGVD,MAAS,QACTC,OAAU,MAGVD,MAAS,UACTC,OAAU,MAGVD,MAAS,WACTC,OAAU,MAGVD,MAAS,OACTC,OAAU,MAGVD,MAAS,QACTC,OAAU,QAKZJ,KAAQ,SACRC,IAAO,uCACPC,iBAEEC,MAAS,aACTC,OAAU,IAGVD,MAAS,QACTC,OAAU,KAGVD,MAAS,UACTC,OAAU,KAGVD,MAAS,SACTC,OAAU,KAGVD,MAAS,WACTC,OAAU,KAGVD,MAAS,OACTC,OAAU,QAKZJ,KAAQ,eACRC,IAAO,8CACPC,iBAEEC,MAAS,UACTC,OAAU,aAGVD,MAAS,WACTC,OAAU,aAGVD,MAAS,WACTC,OAAU,cAKZJ,KAAQ,kBACRC,IAAO,iDACPC,iBAEEC,MAAS,oBACTC,OAAU,IAGVD,MAAS,eACTC,OAAU,MAGVD,MAAS,SACTC,OAAU,MAGVD,MAAS,kBACTC,OAAU,MAGVD,MAAS,cACTC,OAAU,MAGVD,MAAS,eACTC,OAAU,SL8eR,SAASxG,EAAQD,EAASH,GAE/B,YAcA,SAAS6G,GAAwBnF,GAAO,GAAIA,GAAOA,EAAIoF,WAAc,MAAOpF,EAAc,IAAIqF,KAAa,IAAW,MAAPrF,EAAe,IAAK,GAAIsF,KAAOtF,GAAWd,OAAOC,UAAUC,eAAeP,KAAKmB,EAAKsF,KAAMD,EAAOC,GAAOtF,EAAIsF,GAAgC,OAAtBD,GAAOE,QAAUvF,EAAYqF,EAElQ,QAASG,GAAuBxF,GAAO,MAAOA,IAAOA,EAAIoF,WAAapF,GAAQuF,QAASvF,GAEvF,QAASyF,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIzG,GAAI,EAAG4G,EAAOF,MAAMD,EAAItD,QAASnD,EAAIyG,EAAItD,OAAQnD,IAAO4G,EAAK5G,GAAKyG,EAAIzG,EAAM,OAAO4G,GAAe,MAAOF,OAAMG,KAAKJ,GMzmB3L,QAASK,KACP,MAAOC,GAAGC,WAAWC,GAClBC,MAAM,GAIX,QAASC,KACP,MAAOJ,GAAGK,SAASC,GAChBH,MAAM,GAlIX7H,EAAA,GACAA,EAAA,EACA,IAAAiI,GAAAjI,EAAA,GNutBKkI,EAAUhB,EAAuBe,GMttBtCE,EAAAnI,EAAA,GAAY0H,EN0tBFb,EAAwBsB,GMxtB5BC,IAEF5B,KAAM,cACNE,iBACIC,MAAO,OAAeC,OAAS,KAC/BD,MAAO,cAAeC,OAAS,KAC/BD,MAAO,QAAeC,OAAS,KAC/BD,MAAO,OAAeC,OAAS,KAC/BD,MAAO,UAAeC,OAAS,KAC/BD,MAAO,SAAeC,OAAQ,MAC9BD,MAAO,OAAeC,OAAQ,MAC9BD,MAAO,QAAeC,OAAQ,QAKhChB,yBAAwBwC,GAExBC,EAAW,SAAC1H,EAAGyG,EAAKpD,GACxB,GAAMsE,GAAMC,KAAKC,MAAM7H,EAAIyG,EAAItD,OAAS,KAClC2E,EAAMF,KAAKG,IAAI1E,EAAQ,GAAI,KAC3B2E,SAAaL,EAAb,KAAqBG,EAArB,MAA8BzE,EAA9B,IACN,OAAO2E,IAILC,GAAUC,IAAK,GAAIC,MAAO,EAAGC,OAAQ,GAAIC,KAAM,IAC/CC,EAAQ,IAAML,EAAOI,KAAOJ,EAAOE,MACnCI,EAAS,IAAMN,EAAOC,IAAMD,EAAOG,OAMnCnB,GAHYF,EAAGyB,UAAU,YAGrBzB,EAAG0B,cACFC,UADD9H,OAAA4F,EACYE,MAAM,GAAGiC,UACpBC,SAAMhI,OAAA4F,EAAIE,MAAM,GAAGiC,SAAQE,IAAI,SAACC,EAAI9I,EAAGyG,GAAR,MAAgB6B,GAAQ7B,EAAItD,OAASnD,MACzEqH,EAAIN,EAAG0B,cACFC,QAAQ,EAAG,MACXE,OAAOL,EAAQ,IAKlBQ,EAAYhC,EAAGiC,OAAO,gBAAgBC,OAAO,OAC9CC,KAAK,QAASZ,EAAQL,EAAOI,KAAOJ,EAAOE,OAC3Ce,KAAK,SAAUX,EAASN,EAAOC,IAAMD,EAAOG,QAC5Cc,KAAK,UAHQ,QAGUZ,EAAQL,EAAOI,KAAOJ,EAAOE,OAHvC,KAGgDI,EAASN,EAAOC,IAAMD,EAAOG,SAC1Fa,OAAO,KACPC,KAAK,YAAa,aAAejB,EAAOI,KAAO,IAAMJ,EAAOC,IAAM,KAEjEiB,EAAQpC,EAAGiC,OAAO,gBAElBI,EAAY,SAACnE,GACjBA,EAAK4D,IAAI,SAACC,EAAI9I,EAAGyG,GAEf,GAAM4C,GAAYtC,EAAGuC,OAChBC,MAAMxC,EAAGyC,iBACTvC,EAAE,SAACwC,GACF,MAAOxC,GAAE6B,EAAG/C,eAAe2D,QAAQD,MAEpCpC,EAAE,SAACoC,GACF,MAAOpC,GAAEoC,EAAExD,SAGjB8C,GAAUE,OAAO,QACZhE,MAAM6D,EAAG/C,iBACTmD,KAAK,IAAKG,GACVH,KAAK,QAAS,QACdA,KAAK,SAAUxB,EAAS1H,EAAGyG,EAAK,KACjCqC,EAAG/C,eAAe4D,OAAO,SAASF,GAAK,MAAOA,KAC3CZ,IAAI,SAACe,EAAeC,GACnBd,EAAUe,UAAU,OACf7E,MAAM2E,IACRG,QAAQd,OAAO,UACbC,KAAK,QAAS,OACdA,KAAK,SAAUxB,EAAS1H,EAAGyG,EAAK,KAChCyC,KAAK,KAAMG,EAAUpC,KACrBiC,KAAK,KAAMG,EAAUhC,KACrB6B,KAAK,IAAK,GACVc,QAGb,IAAMC,GAAMd,EAAMF,OAAO,KACzBgB,GAAIhF,KAAK6D,EAET,IAAMoB,GAAWD,EAAIhB,OAAO,MAAMA,OAAO,OACpCC,KAAK,QAAS,OACdA,KAAK,QAAS,KACdA,KAAK,SAAU,KACfA,KAAK,UAJO,eAKXiB,EAAQpD,EAAGqD,SAAMxJ,OAAA4F,EAAIsC,EAAG/C,iBAAgB8C,IAAI,SAAAe,GAAA,MAAiBA,GAAc3D,SACjFkE,GAAKtB,IAAI,SAACwB,EAAKC,GACb,GAAMC,GAAcxD,EAAGsD,MACpBG,YAAY,IACZC,YAAY,IACZC,aAAa,GACbC,SAAS,KACTC,WAAWP,EAAIO,YACfC,SAASR,EAAIQ,SAChBX,GAASjB,OAAO,QACXC,KAAK,IAAKqB,GACVrB,KAAK,QAAS,OACdA,KAAK,YAAa,qBAClBA,KAAK,OAAQxB,EAAS1H,EAAGmK,EAAM,GAAgB,GAAXG,EAAgBH,EAAKhH,WAEhE8G,EAAIhB,OAAO,MACR6B,KAAKhC,EAAGjD,MACXiD,EAAG/C,eAAe8C,IAAI,SAAAe,GACpBK,EAAIhB,OAAO,MACR6B,KAAKlB,EAAc3D,YAmB5B8C,GAAUE,OAAO,KACZC,KAAK,QAAS,QACdA,KAAK,YAAa,eAAiBX,EAAS,KAC5C3I,KAAKkH,IACDiE,UAAUxC,GACVyC,WAAW,KAIpBjC,EAAUE,OAAO,KACZC,KAAK,QAAS,QACdtJ,KAAKuH,IACD4D,UAAUzC,GACV0C,WAAW,KAIpBjC,EAAUE,OAAO,KACZC,KAAK,YAAa,eAAiBX,EAAS,KAC5C3I,KAAKmH,EAAGC,WAAWC,GAAGC,MAAM,GAAG6D,SAAS,IAC7ChC,EAAUE,OAAO,KACZC,KAAK,YAAa,eAAiBX,EAAS,KAC5C3I,KAAKmH,EAAGC,WAAWC,GAAGC,MAAM,IAAI6D,SAAS,GAAGC,WAAW,KAC5DjC,EAAUE,OAAO,QACZ6B,KAAK,SACL9E,MAAM,cAAe,UACrBkD,KAAK,YAAa,MAClBA,KAAK,YAAa,aAAeZ,EAAQ,EAAI,KAAOC,EAASN,EAAOC,IAAM,IAAM,KAIrFa,EAAUE,OAAO,KACZrJ,KAAKmH,EAAGK,SAASC,GAAGH,MAAM,GAAG6D,SAAS,IAC3ChC,EAAUE,OAAO,KACZrJ,KAAKmH,EAAGK,SAASC,GAAGH,MAAM,IAAI6D,SAAS,GAAGC,WAAW,KAG1D5B,EAAUnE,IN6pBJ,SAASxF,EAAQD,EAASH,IOv0BhC,SAAAsE,EAAAsH,GACAA,EAAAzL,IAGCmB,KAAA,SAAAnB,GAA4B,YAkC7B,SAAA0L,GAAAC,GACA,gBAAA1B,EAAAxC,GACA,MAAAmE,IAAAD,EAAA1B,GAAAxC,IAeA,QAAAoE,GAAA7K,EAAAC,GACA,OAAAD,EAAAC,GA2HA,QAAA6K,GAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAA9D,KAAA+D,IAAAH,EAAAD,GAAA3D,KAAAgE,IAAA,EAAAH,GACAI,EAAAjE,KAAAkE,IAAA,GAAAlE,KAAAC,MAAAD,KAAAmE,IAAAL,GAAA9D,KAAAoE,OACAC,EAAAP,EAAAG,CAIA,OAHAI,IAAAC,GAAAL,GAAA,GACAI,GAAAE,GAAAN,GAAA,EACAI,GAAAG,KAAAP,GAAA,GACAL,EAAAD,GAAAM,IA2PA,QAAA1I,GAAAsG,GACA,MAAAA,GAAAtG,OAmBA,QAAAkJ,GAAApF,GACA,mBAAAA,EAAA,MAGA,QAAAqF,GAAAjF,GACA,qBAAAA,EAAA,IAGA,QAAAkF,GAAAC,GACA,GAAAC,GAAAD,EAAAE,YAAA,CAEA,OADAF,GAAAG,UAAAF,EAAA7E,KAAA+E,MAAAF,IACA,SAAAhD,GACA,MAAA+C,GAAA/C,GAAAgD,GAIA,QAAAG,KACA,OAAAjM,KAAAkM,OAGA,QAAAC,GAAAC,EAAAP,GAWA,QAAAM,GAAAE,GACA,GAAAC,GAAA,MAAAC,EAAAV,EAAAtF,MAAAsF,EAAAtF,MAAAxG,MAAA8L,EAAAW,GAAAX,EAAA9D,SAAAwE,EACAE,EAAA,MAAApC,EAAAwB,EAAAxB,WAAAwB,EAAAxB,WAAAtK,MAAA8L,EAAAW,GAAAE,GAAArC,EACAsC,EAAA1F,KAAAgE,IAAA2B,EAAA,GAAAC,EACA5E,EAAA4D,EAAA5D,QACA6E,EAAA7E,EAAA,MACA8E,EAAA9E,IAAAzF,OAAA,MACAwK,GAAAnB,EAAAE,UAAAH,EAAAc,IAAAb,EAAAoB,QACAC,EAAAb,EAAAa,UAAAb,EAAAa,YAAAb,EACAc,EAAAD,EAAA/D,UAAA,WAAA7E,MAAA,OACA8I,EAAAF,EAAA/D,UAAA,SAAA7E,KAAAgI,EAAAT,GAAAwB,QACAC,EAAAF,EAAA/D,OACAkE,EAAAH,EAAAhE,QAAAd,OAAA,KAAAC,KAAA,gBACAI,EAAAyE,EAAA/E,OAAA,QACA8B,EAAAiD,EAAA/E,OAAA,OAEA8E,KAAAK,MAAAL,EAAA/D,QAAAqE,OAAA,gBACAlF,KAAA,kBACAA,KAAA,kBAEA6E,IAAAI,MAAAD,GAEA5E,IAAA6E,MAAAD,EAAAjF,OAAA,QACAC,KAAA,iBACAA,KAAAjC,EAAA,IAAAoH,EAAAd,GACArE,KAAA7B,EAAA,QACA6B,KAAA7B,EAAA,SAEAyD,IAAAqD,MAAAD,EAAAjF,OAAA,QACAC,KAAA,eACAA,KAAAjC,EAAAoH,EAAAf,GACApE,KAAA7B,EAAA,IACA6B,KAAA,KAAA6D,IAAA7E,GAAA,MAAA6E,IAAA3E,GAAA,oBAEA4E,IAAAa,IACAC,IAAAQ,WAAAtB,GACAe,IAAAO,WAAAtB,GACA1D,IAAAgF,WAAAtB,GACAlC,IAAAwD,WAAAtB,GAEAiB,IAAAK,WAAAtB,GACA9D,KAAA,UAAAqF,IACArF,KAAA,qBAAAO,GAA0C,MAAA+E,UAAA/E,EAAAkE,EAAAlE,IAAAgF,EAAAhF,GAAA9I,KAAA+N,aAAA,eAE1CR,EACAhF,KAAA,UAAAqF,IACArF,KAAA,qBAAAO,GAA0C,GAAA1J,GAAAY,KAAAgO,WAAA9B,MAAgC,OAAA4B,GAAA1O,GAAAyO,SAAAzO,IAAA0J,IAAA1J,EAAA4N,EAAAlE,OAG1EwE,EAAAW,SAEAd,EACA5E,KAAA,IAAA6D,IAAA1E,IAAA0E,GAAA5E,GACA,IAAAkG,EAAAQ,EAAA,IAAApB,EAAA,QAAAC,EAAA,IAAAW,EAAAQ,EACA,IAAApB,EAAA,IAAAY,EAAAQ,EAAA,QAAAnB,EAAA,IAAAW,EAAAQ,GAEAd,EACA7E,KAAA,aACAA,KAAA,qBAAAO,GAAwC,MAAAgF,GAAAd,EAAAlE,MAExCH,EACAJ,KAAAjC,EAAA,IAAAoH,EAAAd,GAEAzC,EACA5B,KAAAjC,EAAAoH,EAAAf,GACAxC,KAAAsC,GAEAS,EAAAlE,OAAAiD,GACA1D,KAAA,eACAA,KAAA,gBACAA,KAAA,4BACAA,KAAA,cAAA6D,IAAA5E,GAAA,QAAA4E,IAAA1E,GAAA,gBAEAwF,EACAiB,KAAA,WAA0BnO,KAAAkM,OAAAc,IApF1B,GAOA1G,GAPAkG,KACAD,EAAA,KACAlC,EAAA,KACAuC,EAAA,EACAsB,EAAA,EACArB,EAAA,EACAa,EAAAtB,IAAA7E,IAAA6E,IAAA1E,IAAA,IACAhB,EAAA0F,IAAA1E,IAAA0E,IAAA5E,IAAAlB,EAAA,UAAAA,EAAA,SACAwH,EAAA1B,IAAA7E,IAAA6E,IAAA3E,GAAAiE,EAAAC,CAmHA,OApCAQ,GAAAN,MAAA,SAAAuC,GACA,MAAAC,WAAA7L,QAAAqJ,EAAAuC,EAAAjC,GAAAN,GAGAM,EAAA5F,MAAA,WACA,MAAAiG,GAAA8B,GAAArP,KAAAoP,WAAAlC,GAGAA,EAAAK,cAAA,SAAA4B,GACA,MAAAC,WAAA7L,QAAAgK,EAAA,MAAA4B,KAAAE,GAAArP,KAAAmP,GAAAjC,GAAAK,EAAA7M,SAGAwM,EAAAI,WAAA,SAAA6B,GACA,MAAAC,WAAA7L,QAAA+J,EAAA,MAAA6B,EAAA,KAAAE,GAAArP,KAAAmP,GAAAjC,GAAAI,KAAA5M,SAGAwM,EAAA9B,WAAA,SAAA+D,GACA,MAAAC,WAAA7L,QAAA6H,EAAA+D,EAAAjC,GAAA9B,GAGA8B,EAAA/B,SAAA,SAAAgE,GACA,MAAAC,WAAA7L,QAAAoK,EAAAsB,GAAAE,EAAAjC,GAAAS,GAGAT,EAAAS,cAAA,SAAAwB,GACA,MAAAC,WAAA7L,QAAAoK,GAAAwB,EAAAjC,GAAAS,GAGAT,EAAA+B,cAAA,SAAAE,GACA,MAAAC,WAAA7L,QAAA0L,GAAAE,EAAAjC,GAAA+B,GAGA/B,EAAAU,YAAA,SAAAuB,GACA,MAAAC,WAAA7L,QAAAqK,GAAAuB,EAAAjC,GAAAU,GAGAV,EAGA,QAAAoC,GAAA1C,GACA,MAAAM,GAAA5E,GAAAsE,GAGA,QAAA2C,GAAA3C,GACA,MAAAM,GAAA3E,GAAAqE,GAGA,QAAAxF,GAAAwF,GACA,MAAAM,GAAA1E,GAAAoE,GAGA,QAAApF,GAAAoF,GACA,MAAAM,GAAAzE,GAAAmE,GAKA,QAAA4C,KACA,OAA8CC,GAA9CrP,EAAA,EAAAsP,EAAAN,UAAA7L,OAAA4L,KAAkD/O,EAAAsP,IAAOtP,EAAA,CACzD,KAAAqP,EAAAL,UAAAhP,GAAA,KAAAqP,IAAAN,GAAA,SAAAQ,OAAA,iBAAAF,EACAN,GAAAM,MAEA,UAAAG,GAAAT,GAGA,QAAAS,GAAAT,GACApO,KAAAoO,IAGA,QAAAU,GAAAC,EAAAC,GACA,MAAAD,GAAAE,OAAAC,MAAA,SAAAhH,IAAA,SAAAwG,GACA,GAAAxJ,GAAA,GAAA7F,EAAAqP,EAAA3F,QAAA,IAEA,IADA1J,GAAA,IAAA6F,EAAAwJ,EAAA/O,MAAAN,EAAA,GAAAqP,IAAA/O,MAAA,EAAAN,IACAqP,IAAAM,EAAAxP,eAAAkP,GAAA,SAAAE,OAAA,iBAAAF,EACA,QAAYS,KAAAT,EAAAxJ,UA6CZ,QAAAkK,GAAAD,EAAAjK,GACA,OAAA/F,GAAAE,EAAA,EAAAsP,EAAAQ,EAAA3M,OAAqCnD,EAAAsP,IAAOtP,EAC5C,IAAAF,EAAAgQ,EAAA9P,IAAA6F,SACA,MAAA/F,GAAAuD,MAKA,QAAA2M,GAAAF,EAAAjK,EAAArB,GACA,OAAAxE,GAAA,EAAAsP,EAAAQ,EAAA3M,OAAkCnD,EAAAsP,IAAOtP,EACzC,GAAA8P,EAAA9P,GAAA6F,SAAA,CACAiK,EAAA9P,GAAAa,GAAAiP,IAAAxP,MAAA,EAAAN,GAAAY,OAAAkP,EAAAxP,MAAAN,EAAA,GACA,OAIA,MADA,OAAAwE,GAAAsL,EAAArN,MAAmCoD,OAAAxC,MAAAmB,IACnCsL,EAmBA,QAAAG,GAAApK,GACA,kBACA,GAAAhB,GAAAlE,KAAAuP,cACAC,EAAAxP,KAAAyP,YACA,OAAAD,KAAAE,IAAAxL,EAAAyL,gBAAAF,eAAAC,GACAxL,EAAA0L,cAAA1K,GACAhB,EAAA2L,gBAAAL,EAAAtK,IAIA,QAAA4K,GAAAC,GACA,kBACA,MAAA/P,MAAAuP,cAAAM,gBAAAE,EAAAC,MAAAD,EAAAE,QAaA,QAAAC,KACA,UAAAC,GAGA,QAAAA,KACAnQ,KAAAoO,EAAA,OAAAgC,IAAAC,SAAA,IAuDA,QAAAC,GAAAC,EAAAhN,EAAAiN,GAEA,MADAD,GAAAE,EAAAF,EAAAhN,EAAAiN,GACA,SAAAE,GACA,GAAAC,GAAAD,EAAAE,aACAD,SAAA3Q,MAAA,EAAA2Q,EAAAE,wBAAA7Q,QACAuQ,EAAAtR,KAAAe,KAAA0Q,IAKA,QAAAD,GAAAF,EAAAhN,EAAAiN,GACA,gBAAAM,GACA,GAAAC,GAAAlS,EAAA6R,KACA7R,GAAA6R,MAAAI,CACA,KACAP,EAAAtR,KAAAe,UAAAgR,SAAAzN,EAAAiN,GACK,QACL3R,EAAA6R,MAAAK,IAKA,QAAAE,GAAAlC,GACA,MAAAA,GAAAE,OAAAC,MAAA,SAAAhH,IAAA,SAAAwG,GACA,GAAAxJ,GAAA,GAAA7F,EAAAqP,EAAA3F,QAAA,IAEA,OADA1J,IAAA,IAAA6F,EAAAwJ,EAAA/O,MAAAN,EAAA,GAAAqP,IAAA/O,MAAA,EAAAN,KACY8P,KAAAT,EAAAxJ,UAIZ,QAAAgM,GAAAC,GACA,kBACA,GAAAC,GAAApR,KAAAqR,IACA,IAAAD,EAAA,CACA,OAAAE,GAAAC,EAAA,EAAAlS,GAAA,EAAAH,EAAAkS,EAAA5O,OAA6C+O,EAAArS,IAAOqS,EACpDD,EAAAF,EAAAG,GAAAJ,EAAAhC,MAAAmC,EAAAnC,OAAAgC,EAAAhC,MAAAmC,EAAApM,OAAAiM,EAAAjM,KAGAkM,IAAA/R,GAAAiS,EAFAtR,KAAAwR,oBAAAF,EAAAnC,KAAAmC,EAAAf,SAAAe,EAAAG,WAKApS,EAAA+R,EAAA5O,OAAAnD,QACAW,MAAAqR,OAIA,QAAAK,GAAAP,EAAAzO,EAAA+O,GACA,GAAAE,GAAAC,GAAApS,eAAA2R,EAAAhC,MAAAmB,EAAAG,CACA,iBAAA3H,EAAAzJ,EAAAmR,GACA,GAAAc,GAAAF,EAAApR,KAAAqR,KAAAd,EAAAoB,EAAAjP,EAAArD,EAAAmR,EACA,IAAAY,EAAA,OAAAG,GAAA,EAAArS,EAAAkS,EAAA5O,OAA0C+O,EAAArS,IAAOqS,EACjD,IAAAD,EAAAF,EAAAG,IAAApC,OAAAgC,EAAAhC,MAAAmC,EAAApM,OAAAiM,EAAAjM,KAIA,MAHAlF,MAAAwR,oBAAAF,EAAAnC,KAAAmC,EAAAf,SAAAe,EAAAG,SACAzR,KAAA6R,iBAAAP,EAAAnC,KAAAmC,EAAAf,WAAAe,EAAAG,gBACAH,EAAA5O,QAIA1C,MAAA6R,iBAAAV,EAAAhC,KAAAoB,EAAAkB,GACAH,GAASnC,KAAAgC,EAAAhC,KAAAjK,KAAAiM,EAAAjM,KAAAxC,QAAA6N,WAAAkB,WACTL,EACAA,EAAAtP,KAAAwP,GADAtR,KAAAqR,MAAAC,IA0BA,QAAAQ,GAAAhB,EAAAP,EAAAwB,EAAArS,GACA,GAAAqR,GAAAlS,EAAA6R,KACAI,GAAAkB,YAAAnT,EAAA6R,MACA7R,EAAA6R,MAAAI,CACA,KACA,MAAAP,GAAAxQ,MAAAgS,EAAArS,GACG,QACHb,EAAA6R,MAAAK,GA8BA,QAAAkB,MAuBA,QAAAC,KACA,SA8CA,QAAAC,GAAAC,EAAAC,GACArS,KAAAuP,cAAA6C,EAAA7C,cACAvP,KAAAyP,aAAA2C,EAAA3C,aACAzP,KAAAsS,MAAA,KACAtS,KAAAuS,QAAAH,EACApS,KAAAgR,SAAAqB,EAmBA,QAAAG,GAAAJ,EAAA5B,EAAApH,EAAAqJ,EAAApJ,EAAA/E,GASA,IARA,GACAL,GADA5E,EAAA,EAEAqT,EAAAlC,EAAAhO,OACAmQ,EAAArO,EAAA9B,OAKQnD,EAAAsT,IAAgBtT,GACxB4E,EAAAuM,EAAAnR,KACA4E,EAAA+M,SAAA1M,EAAAjF,GACAoT,EAAApT,GAAA4E,GAEAmF,EAAA/J,GAAA,GAAA8S,GAAAC,EAAA9N,EAAAjF,GAKA,MAAQA,EAAAqT,IAAiBrT,GACzB4E,EAAAuM,EAAAnR,MACAgK,EAAAhK,GAAA4E,GAKA,QAAA2O,GAAAR,EAAA5B,EAAApH,EAAAqJ,EAAApJ,EAAA/E,EAAAoB,GACA,GAAArG,GACA4E,EAKA4O,EAJAC,KACAJ,EAAAlC,EAAAhO,OACAmQ,EAAArO,EAAA9B,OACAuQ,EAAA,GAAAhN,OAAA2M,EAKA,KAAArT,EAAA,EAAaA,EAAAqT,IAAiBrT,GAC9B4E,EAAAuM,EAAAnR,MACA0T,EAAA1T,GAAAwT,EAAAG,GAAAtN,EAAAzG,KAAAgF,IAAA+M,SAAA3R,EAAAmR,GACAqC,IAAAC,GACAzJ,EAAAhK,GAAA4E,EAEA6O,EAAAD,GAAA5O,EAQA,KAAA5E,EAAA,EAAaA,EAAAsT,IAAgBtT,EAC7BwT,EAAAG,GAAAtN,EAAAzG,KAAAmT,EAAA9N,EAAAjF,KAAAiF,IACAL,EAAA6O,EAAAD,KACAJ,EAAApT,GAAA4E,EACAA,EAAA+M,SAAA1M,EAAAjF,GACAyT,EAAAD,GAAA,MAEAzJ,EAAA/J,GAAA,GAAA8S,GAAAC,EAAA9N,EAAAjF,GAKA,KAAAA,EAAA,EAAaA,EAAAqT,IAAiBrT,GAC9B4E,EAAAuM,EAAAnR,KAAAyT,EAAAC,EAAA1T,MAAA4E,IACAoF,EAAAhK,GAAA4E,GAsGA,QAAAgP,GAAApT,EAAAC,GACA,MAAAD,GAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAAoT,IAiDA,QAAAC,GAAAjO,GACA,kBACAlF,KAAAoT,gBAAAlO,IAIA,QAAAmO,GAAAtD,GACA,kBACA/P,KAAAsT,kBAAAvD,EAAAC,MAAAD,EAAAE,QAIA,QAAAsD,GAAArO,EAAAxC,GACA,kBACA1C,KAAAwT,aAAAtO,EAAAxC,IAIA,QAAA+Q,GAAA1D,EAAArN,GACA,kBACA1C,KAAA0T,eAAA3D,EAAAC,MAAAD,EAAAE,MAAAvN,IAIA,QAAAiR,GAAAzO,EAAAxC,GACA,kBACA,GAAAkR,GAAAlR,EAAA3C,MAAAC,KAAAqO,UACA,OAAAuF,EAAA5T,KAAAoT,gBAAAlO,GACAlF,KAAAwT,aAAAtO,EAAA0O,IAIA,QAAAC,GAAA9D,EAAArN,GACA,kBACA,GAAAkR,GAAAlR,EAAA3C,MAAAC,KAAAqO,UACA,OAAAuF,EAAA5T,KAAAsT,kBAAAvD,EAAAC,MAAAD,EAAAE,OACAjQ,KAAA0T,eAAA3D,EAAAC,MAAAD,EAAAE,MAAA2D,IA0BA,QAAAE,GAAA5O,GACA,kBACAlF,KAAAqF,MAAA0O,eAAA7O,IAIA,QAAA8O,GAAA9O,EAAAxC,EAAAuR,GACA,kBACAjU,KAAAqF,MAAA6O,YAAAhP,EAAAxC,EAAAuR,IAIA,QAAAE,GAAAjP,EAAAxC,EAAAuR,GACA,kBACA,GAAAL,GAAAlR,EAAA3C,MAAAC,KAAAqO,UACA,OAAAuF,EAAA5T,KAAAqF,MAAA0O,eAAA7O,GACAlF,KAAAqF,MAAA6O,YAAAhP,EAAA0O,EAAAK,IAgBA,QAAAG,GAAAlP,GACA,wBACAlF,MAAAkF,IAIA,QAAAmP,GAAAnP,EAAAxC,GACA,kBACA1C,KAAAkF,GAAAxC,GAIA,QAAA4R,GAAApP,EAAAxC,GACA,kBACA,GAAAkR,GAAAlR,EAAA3C,MAAAC,KAAAqO,UACA,OAAAuF,QAAA5T,MAAAkF,GACAlF,KAAAkF,GAAA0O,GAaA,QAAAW,GAAAC,GACA,MAAAA,GAAAvF,OAAAC,MAAA,SAGA,QAAAuF,GAAAxQ,GACA,MAAAA,GAAAwQ,WAAA,GAAAC,GAAAzQ,GAGA,QAAAyQ,GAAAzQ,GACAjE,KAAA2U,MAAA1Q,EACAjE,KAAA4U,OAAAL,EAAAtQ,EAAA8J,aAAA,cAuBA,QAAA8G,GAAA5Q,EAAA6Q,GAEA,IADA,GAAAC,GAAAN,EAAAxQ,GAAA5E,GAAA,EAAAsP,EAAAmG,EAAAtS,SACAnD,EAAAsP,GAAAoG,EAAAC,IAAAF,EAAAzV,IAGA,QAAA4V,GAAAhR,EAAA6Q,GAEA,IADA,GAAAC,GAAAN,EAAAxQ,GAAA5E,GAAA,EAAAsP,EAAAmG,EAAAtS,SACAnD,EAAAsP,GAAAoG,EAAA9G,OAAA6G,EAAAzV,IAGA,QAAA6V,GAAAJ,GACA,kBACAD,EAAA7U,KAAA8U,IAIA,QAAAK,GAAAL,GACA,kBACAG,EAAAjV,KAAA8U,IAIA,QAAAM,IAAAN,EAAApS,GACA,mBACAA,EAAA3C,MAAAC,KAAAqO,WAAAwG,EAAAI,GAAAjV,KAAA8U,IAmBA,QAAAO,MACArV,KAAAsV,YAAA,GAGA,QAAAC,IAAA7S,GACA,kBACA1C,KAAAsV,YAAA5S,GAIA,QAAA8S,IAAA9S,GACA,kBACA,GAAAkR,GAAAlR,EAAA3C,MAAAC,KAAAqO,UACArO,MAAAsV,YAAA,MAAA1B,EAAA,GAAAA,GAaA,QAAA6B,MACAzV,KAAA0V,UAAA,GAGA,QAAAC,IAAAjT,GACA,kBACA1C,KAAA0V,UAAAhT,GAIA,QAAAkT,IAAAlT,GACA,kBACA,GAAAkR,GAAAlR,EAAA3C,MAAAC,KAAAqO,UACArO,MAAA0V,UAAA,MAAA9B,EAAA,GAAAA,GAaA,QAAAiC,MACA7V,KAAA8V,aAAA9V,KAAAgO,WAAA+H,YAAA/V,MAOA,QAAAgW,MACAhW,KAAAiW,iBAAAjW,KAAAgO,WAAAkI,aAAAlW,UAAAgO,WAAAmI,YAcA,QAAAC,MACA,YAWA,QAAAnI,MACA,GAAAmE,GAAApS,KAAAgO,UACAoE,MAAAiE,YAAArW,MAaA,QAAAsW,IAAArS,EAAAkL,EAAAoH,GACA,GAAAC,GAAA1T,GAAAmB,GACAyM,EAAA8F,EAAAC,WAEA/F,GACAA,EAAA,GAAAA,GAAAvB,EAAAoH,IAEA7F,EAAA8F,EAAAtS,SAAAwS,YAAA,SACAH,GAAA7F,EAAAiG,UAAAxH,EAAAoH,EAAAK,QAAAL,EAAAM,YAAAnG,EAAAoG,OAAAP,EAAAO,QACApG,EAAAiG,UAAAxH,GAAA,OAGAlL,EAAAqS,cAAA5F,GAGA,QAAAqG,IAAA5H,EAAAoH,GACA,kBACA,MAAAD,IAAAtW,KAAAmP,EAAAoH,IAIA,QAAAS,IAAA7H,EAAAoH,GACA,kBACA,MAAAD,IAAAtW,KAAAmP,EAAAoH,EAAAxW,MAAAC,KAAAqO,aAYA,QAAA4I,IAAAC,EAAAC,GACAnX,KAAAoX,QAAAF,EACAlX,KAAAqX,SAAAF,EAGA,QAAAjK,MACA,UAAA+J,MAAA/S,SAAAyL,kBAAA2H,IAsEA,QAAAC,MACA1Y,EAAA6R,MAAA8G,2BAmBA,QAAAC,IAAAC,EAAAC,GACA,GAAAL,GAAAI,EAAAxT,SAAAyL,gBACAiI,EAAAvP,GAAAqP,GAAAtG,GAAA,sBACAuG,KACAC,EAAAxG,GAAA,aAAAyG,IAAA,GACAhT,WAAA,WAA2B+S,EAAAxG,GAAA,oBAAuC,IAElE,iBAAAkG,GACAM,EAAAxG,GAAA,0BAEAkG,EAAAjS,MAAAyS,cAAAR,EAAAS,iBACAT,GAAAS,YAUA,QAAAC,IAAAC,EAAA9I,EAAA+I,EAAAnZ,EAAAoZ,EAAA7R,EAAAI,EAAA0R,EAAAC,EAAA5J,GACAzO,KAAAiY,SACAjY,KAAAmP,OACAnP,KAAAkY,UACAlY,KAAAsY,WAAAvZ,EACAiB,KAAAmY,SACAnY,KAAAsG,IACAtG,KAAA0G,IACA1G,KAAAoY,KACApY,KAAAqY,KACArY,KAAAoO,EAAAK,EASA,QAAA8J,MACA,OAAA1Z,EAAA6R,MAAA8H,OAGA,QAAAC,MACA,MAAAzY,MAAAgO,WAGA,QAAA0K,IAAA5P,GACA,aAAAA,GAAsBxC,EAAAzH,EAAA6R,MAAApK,EAAAI,EAAA7H,EAAA6R,MAAAhK,GAAuCoC,EAqI7D,QAAA6P,IAAAvG,EAAAwG,GACA,GAAArZ,GAAAD,OAAAuZ,OAAAzG,EAAA7S,UACA,QAAAmG,KAAAkT,GAAArZ,EAAAmG,GAAAkT,EAAAlT,EACA,OAAAnG,GAGA,QAAAuZ,OAiLA,QAAAC,IAAAtM,GACA,GAAAvN,EAEA,OADAuN,MAAA,IAAAwC,OAAA+J,eACA9Z,EAAA+Z,GAAAC,KAAAzM,KAAAvN,EAAAia,SAAAja,EAAA,UAAAka,IAAAla,GAAA,KAAAA,GAAA,MAAAA,GAAA,SAAAA,GAAA,GAAAA,IAAA,KAAAA,EAAA,KACAA,EAAAma,GAAAH,KAAAzM,IAAA6M,GAAAH,SAAAja,EAAA,SACAA,EAAAqa,GAAAL,KAAAzM,IAAA,GAAA2M,IAAAla,EAAA,GAAAA,EAAA,GAAAA,EAAA,OACAA,EAAAsa,GAAAN,KAAAzM,IAAA,GAAA2M,IAAA,IAAAla,EAAA,WAAAA,EAAA,WAAAA,EAAA,WACAA,EAAAua,GAAAP,KAAAzM,IAAAiN,GAAAxa,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAA,EAAAya,GAAAT,KAAAzM,IAAAiN,GAAA,IAAAxa,EAAA,WAAAA,EAAA,WAAAA,EAAA,OAAAA,EAAA,KACAA,EAAA0a,GAAAV,KAAAzM,IAAAoN,GAAA3a,EAAA,GAAAA,EAAA,OAAAA,EAAA,WACAA,EAAA4a,GAAAZ,KAAAzM,IAAAoN,GAAA3a,EAAA,GAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,IACA6a,GAAAva,eAAAiN,GAAA6M,GAAAS,GAAAtN,IACA,gBAAAA,EAAA,GAAA2M,IAAAlG,YAAA,GACA,KAGA,QAAAoG,IAAA3K,GACA,UAAAyK,IAAAzK,GAAA,OAAAA,GAAA,UAAAA,EAAA,GAGA,QAAA+K,IAAAM,EAAAC,EAAAna,EAAAD,GAEA,MADAA,IAAA,IAAAma,EAAAC,EAAAna,EAAAoT,KACA,GAAAkG,IAAAY,EAAAC,EAAAna,EAAAD,GAGA,QAAAqa,IAAA5I,GAEA,MADAA,aAAAwH,MAAAxH,EAAAyH,GAAAzH,IACAA,GACAA,IAAA6I,MACA,GAAAf,IAAA9H,EAAA0I,EAAA1I,EAAA2I,EAAA3I,EAAAxR,EAAAwR,EAAA8I,UAFA,GAAAhB,IAKA,QAAAe,IAAAH,EAAAC,EAAAna,EAAAsa,GACA,WAAA/L,UAAA7L,OAAA0X,GAAAF,GAAA,GAAAZ,IAAAY,EAAAC,EAAAna,EAAA,MAAAsa,EAAA,EAAAA,GAGA,QAAAhB,IAAAY,EAAAC,EAAAna,EAAAsa,GACApa,KAAAga,KACAha,KAAAia,KACAja,KAAAF,KACAE,KAAAoa,WA+BA,QAAAP,IAAAQ,EAAAC,EAAAC,EAAA1a,GAIA,MAHAA,IAAA,EAAAwa,EAAAC,EAAAC,EAAArH,IACAqH,GAAA,GAAAA,GAAA,EAAAF,EAAAC,EAAApH,IACAoH,GAAA,IAAAD,EAAAnH,KACA,GAAAsH,IAAAH,EAAAC,EAAAC,EAAA1a,GAGA,QAAA4a,IAAAnJ,GACA,GAAAA,YAAAkJ,IAAA,UAAAA,IAAAlJ,EAAA+I,EAAA/I,EAAAgJ,EAAAhJ,EAAAiJ,EAAAjJ,EAAA8I,QAEA,IADA9I,YAAAwH,MAAAxH,EAAAyH,GAAAzH,KACAA,EAAA,UAAAkJ,GACA,IAAAlJ,YAAAkJ,IAAA,MAAAlJ,EACAA,KAAA6I,KACA,IAAAH,GAAA1I,EAAA0I,EAAA,IACAC,EAAA3I,EAAA2I,EAAA,IACAna,EAAAwR,EAAAxR,EAAA,IACAsH,EAAAH,KAAAG,IAAA4S,EAAAC,EAAAna,GACAmL,EAAAhE,KAAAgE,IAAA+O,EAAAC,EAAAna,GACAua,EAAAnH,IACAoH,EAAArP,EAAA7D,EACAmT,GAAAtP,EAAA7D,GAAA,CAUA,OATAkT,IACAD,EAAAL,IAAA/O,GAAAgP,EAAAna,GAAAwa,EAAA,GAAAL,EAAAna,GACAma,IAAAhP,GAAAnL,EAAAka,GAAAM,EAAA,GACAN,EAAAC,GAAAK,EAAA,EACAA,GAAAC,EAAA,GAAAtP,EAAA7D,EAAA,EAAA6D,EAAA7D,EACAiT,GAAA,IAEAC,EAAAC,EAAA,GAAAA,EAAA,IAAAF,EAEA,GAAAG,IAAAH,EAAAC,EAAAC,EAAAjJ,EAAA8I,SAGA,QAAA/S,IAAAgT,EAAAC,EAAAC,EAAAH,GACA,WAAA/L,UAAA7L,OAAAiY,GAAAJ,GAAA,GAAAG,IAAAH,EAAAC,EAAAC,EAAA,MAAAH,EAAA,EAAAA,GAGA,QAAAI,IAAAH,EAAAC,EAAAC,EAAAH,GACApa,KAAAqa,KACAra,KAAAsa,KACAta,KAAAua,KACAva,KAAAoa,WAiCA,QAAAM,IAAAL,EAAAM,EAAAC,GACA,MAGA,MAHAP,EAAA,GAAAM,GAAAC,EAAAD,GAAAN,EAAA,GACAA,EAAA,IAAAO,EACAP,EAAA,IAAAM,GAAAC,EAAAD,IAAA,IAAAN,GAAA,GACAM,GAeA,QAAAE,IAAAvJ,GACA,GAAAA,YAAAwJ,IAAA,UAAAA,IAAAxJ,EAAAiJ,EAAAjJ,EAAAzR,EAAAyR,EAAAxR,EAAAwR,EAAA8I,QACA,IAAA9I,YAAAyJ,IAAA,CACA,GAAAV,GAAA/I,EAAA+I,EAAAW,EACA,WAAAF,IAAAxJ,EAAAiJ,EAAAtT,KAAAgU,IAAAZ,GAAA/I,EAAAnS,EAAA8H,KAAAiU,IAAAb,GAAA/I,EAAAnS,EAAAmS,EAAA8I,SAEA9I,YAAA8H,MAAA9H,EAAA4I,GAAA5I,GACA,IAAAxR,GAAAqb,GAAA7J,EAAA0I,GACAna,EAAAsb,GAAA7J,EAAA2I,GACAM,EAAAY,GAAA7J,EAAAxR,GACAwG,EAAA8U,IAAA,SAAAtb,EAAA,SAAAD,EAAA,SAAA0a,GAAAc,IACA3U,EAAA0U,IAAA,SAAAtb,EAAA,SAAAD,EAAA,QAAA0a,GAAAe,IACAC,EAAAH,IAAA,SAAAtb,EAAA,QAAAD,EAAA,SAAA0a,GAAAiB,GACA,WAAAV,IAAA,IAAApU,EAAA,QAAAJ,EAAAI,GAAA,KAAAA,EAAA6U,GAAAjK,EAAA8I,SAGA,QAAAqB,IAAAlB,EAAA1a,EAAAC,EAAAsa,GACA,WAAA/L,UAAA7L,OAAAqY,GAAAN,GAAA,GAAAO,IAAAP,EAAA1a,EAAAC,EAAA,MAAAsa,EAAA,EAAAA,GAGA,QAAAU,IAAAP,EAAA1a,EAAAC,EAAAsa,GACApa,KAAAua,KACAva,KAAAH,KACAG,KAAAF,KACAE,KAAAoa,WA0BA,QAAAgB,IAAA1M,GACA,MAAAA,GAAAgN,GAAAzU,KAAAkE,IAAAuD,EAAA,KAAAA,EAAAiN,GAAAC,GAGA,QAAAC,IAAAnN,GACA,MAAAA,GAAAoN,GAAApN,MAAAiN,IAAAjN,EAAAkN,IAGA,QAAAG,IAAAzV,GACA,YAAAA,GAAA,eAAAA,EAAA,MAAAW,KAAAkE,IAAA7E,EAAA,aAGA,QAAA6U,IAAA7U,GACA,OAAAA,GAAA,aAAAA,EAAA,MAAAW,KAAAkE,KAAA7E,EAAA,iBAGA,QAAA0V,IAAA1K,GACA,GAAAA,YAAAyJ,IAAA,UAAAA,IAAAzJ,EAAA+I,EAAA/I,EAAAnS,EAAAmS,EAAAiJ,EAAAjJ,EAAA8I,QACA9I,aAAAwJ,MAAAxJ,EAAAuJ,GAAAvJ,GACA,IAAA+I,GAAApT,KAAAgV,MAAA3K,EAAAxR,EAAAwR,EAAAzR,GAAAqc,EACA,WAAAnB,IAAAV,EAAA,EAAAA,EAAA,IAAAA,EAAApT,KAAAkV,KAAA7K,EAAAzR,EAAAyR,EAAAzR,EAAAyR,EAAAxR,EAAAwR,EAAAxR,GAAAwR,EAAAiJ,EAAAjJ,EAAA8I,SAGA,QAAAgC,IAAA/B,EAAAlb,EAAAob,EAAAH,GACA,WAAA/L,UAAA7L,OAAAwZ,GAAA3B,GAAA,GAAAU,IAAAV,EAAAlb,EAAAob,EAAA,MAAAH,EAAA,EAAAA,GAGA,QAAAW,IAAAV,EAAAlb,EAAAob,EAAAH,GACApa,KAAAqa,KACAra,KAAAb,KACAa,KAAAua,KACAva,KAAAoa,WAwBA,QAAAiC,IAAA/K,GACA,GAAAA,YAAAgL,IAAA,UAAAA,IAAAhL,EAAA+I,EAAA/I,EAAAgJ,EAAAhJ,EAAAiJ,EAAAjJ,EAAA8I,QACA9I,aAAA8H,MAAA9H,EAAA4I,GAAA5I,GACA,IAAA0I,GAAA1I,EAAA0I,EAAA,IACAC,EAAA3I,EAAA2I,EAAA,IACAna,EAAAwR,EAAAxR,EAAA,IACAya,GAAAgC,GAAAzc,EAAA0c,GAAAxC,EAAAyC,GAAAxC,IAAAsC,GAAAC,GAAAC,IACAC,EAAA5c,EAAAya,EACA7M,GAAAiP,IAAA1C,EAAAM,GAAAqC,GAAAF,GAAAG,GACAvC,EAAArT,KAAAkV,KAAAzO,IAAAgP,MAAAC,GAAApC,GAAA,EAAAA,IACAF,EAAAC,EAAArT,KAAAgV,MAAAvO,EAAAgP,GAAAR,GAAA,IAAAhJ,GACA,WAAAoJ,IAAAjC,EAAA,EAAAA,EAAA,IAAAA,EAAAC,EAAAC,EAAAjJ,EAAA8I,SAGA,QAAA0C,IAAAzC,EAAAC,EAAAC,EAAAH,GACA,WAAA/L,UAAA7L,OAAA6Z,GAAAhC,GAAA,GAAAiC,IAAAjC,EAAAC,EAAAC,EAAA,MAAAH,EAAA,EAAAA,GAGA,QAAAkC,IAAAjC,EAAAC,EAAAC,EAAAH,GACApa,KAAAqa,KACAra,KAAAsa,KACAta,KAAAua,KACAva,KAAAoa,WA2BA,QAAA2C,IAAAjB,EAAAkB,EAAAC,EAAAC,EAAAC,GACA,GAAAxB,GAAAG,IAAAJ,EAAAC,EAAAG,CACA,aAAAA,EAAA,EAAAH,EAAAD,GAAAsB,GACA,IAAArB,EAAA,EAAAD,GAAAuB,GACA,IAAAnB,EAAA,EAAAH,EAAA,EAAAD,GAAAwB,EACAxB,EAAAyB,GAAA,EAiCA,QAAAC,IAAAvd,EAAAiJ,GACA,gBAAA4F,GACA,MAAA7O,GAAA6O,EAAA5F,GAIA,QAAAuU,IAAAxd,EAAAC,EAAA4G,GACA,MAAA7G,GAAAoH,KAAAkE,IAAAtL,EAAA6G,GAAA5G,EAAAmH,KAAAkE,IAAArL,EAAA4G,GAAA7G,EAAA6G,EAAA,EAAAA,EAAA,SAAAgI,GACA,MAAAzH,MAAAkE,IAAAtL,EAAA6O,EAAA5O,EAAA4G,IAIA,QAAAM,IAAAnH,EAAAC,GACA,GAAAgJ,GAAAhJ,EAAAD,CACA,OAAAiJ,GAAAsU,GAAAvd,EAAAiJ,EAAA,KAAAA,GAAA,IAAAA,EAAA,IAAA7B,KAAA+E,MAAAlD,EAAA,KAAAA,GAAAwU,GAAAC,MAAA1d,GAAAC,EAAAD,GAGA,QAAA2d,IAAA9W,GACA,YAAAA,MAAA+W,GAAA,SAAA5d,EAAAC,GACA,MAAAA,GAAAD,EAAAwd,GAAAxd,EAAAC,EAAA4G,GAAA4W,GAAAC,MAAA1d,GAAAC,EAAAD,IAIA,QAAA4d,IAAA5d,EAAAC,GACA,GAAAgJ,GAAAhJ,EAAAD,CACA,OAAAiJ,GAAAsU,GAAAvd,EAAAiJ,GAAAwU,GAAAC,MAAA1d,GAAAC,EAAAD,GAyBA,QAAA6d,IAAAC,GACA,gBAAAC,GACA,GAIAve,GAAAwe,EAJAlP,EAAAiP,EAAApb,OACAwX,EAAA,GAAAjU,OAAA4I,GACAsL,EAAA,GAAAlU,OAAA4I,GACA7O,EAAA,GAAAiG,OAAA4I,EAEA,KAAAtP,EAAA,EAAeA,EAAAsP,IAAOtP,EACtBwe,EAAA1D,GAAAyD,EAAAve,IACA2a,EAAA3a,GAAAwe,EAAA7D,GAAA,EACAC,EAAA5a,GAAAwe,EAAA5D,GAAA,EACAna,EAAAT,GAAAwe,EAAA/d,GAAA,CAMA,OAJAka,GAAA2D,EAAA3D,GACAC,EAAA0D,EAAA1D,GACAna,EAAA6d,EAAA7d,GACA+d,EAAAzD,QAAA,EACA,SAAA1L,GAIA,MAHAmP,GAAA7D,IAAAtL,GACAmP,EAAA5D,IAAAvL,GACAmP,EAAA/d,IAAA4O,GACAmP,EAAA,KA8DA,QAAAC,IAAAhe,GACA,kBACA,MAAAA,IAIA,QAAAie,IAAAje,GACA,gBAAA4O,GACA,MAAA5O,GAAA4O,GAAA,IAsGA,QAAAsP,IAAAtb,GACA,eAAAA,EAAAub,IACAC,QAAAha,SAAA0L,cAAA,OAAAuO,GAAAja,SAAAyL,gBAAAyO,GAAAla,SAAAma,aACAH,GAAA7Y,MAAAyI,UAAApL,EACAA,EAAA0b,GAAAE,iBAAAH,GAAApI,YAAAmI,IAAA,MAAAK,iBAAA,aACAJ,GAAA9H,YAAA6H,IACAxb,IAAA/C,MAAA,MAAAuP,MAAA,KACAsP,IAAA9b,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAGA,QAAA+b,IAAA/b,GACA,aAAAA,EAAAub,IACAS,QAAAxa,SAAA2L,gBAAA,mCACA6O,GAAAlL,aAAA,YAAA9Q,IACAA,EAAAgc,GAAA5Q,UAAA6Q,QAAAC,gBACAlc,IAAAmc,OACAL,GAAA9b,EAAA7C,EAAA6C,EAAA5C,EAAA4C,EAAAvD,EAAAuD,EAAAoG,EAAApG,EAAAoc,EAAApc,EAAA8H,IAFAyT,IAKA,QAAAc,IAAAC,EAAAC,EAAAC,EAAAC,GAEA,QAAAC,GAAA9E,GACA,MAAAA,GAAA9X,OAAA8X,EAAA8E,MAAA,OAGA,QAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAnF,EAAAoF,GACA,GAAAJ,IAAAE,GAAAD,IAAAE,EAAA,CACA,GAAApgB,GAAAib,EAAAxY,KAAA,kBAAAmd,EAAA,KAAAC,EACAQ,GAAA5d,MAAczC,IAAA,EAAAiH,EAAAqZ,GAAAL,EAAAE,KAAsCngB,IAAA,EAAAiH,EAAAqZ,GAAAJ,EAAAE,UAC/CD,GAAAC,IACLnF,EAAAxY,KAAA,aAAA0d,EAAAP,EAAAQ,EAAAP,GAIA,QAAAU,GAAA/f,EAAAC,EAAAwa,EAAAoF,GACA7f,IAAAC,GACAD,EAAAC,EAAA,IAAAA,GAAA,IAAgCA,EAAAD,EAAA,MAAAA,GAAA,KAChC6f,EAAA5d,MAAczC,EAAAib,EAAAxY,KAAAsd,EAAA9E,GAAA,eAAA6E,GAAA,EAAA7Y,EAAAqZ,GAAA9f,EAAAC,MACTA,GACLwa,EAAAxY,KAAAsd,EAAA9E,GAAA,UAAAxa,EAAAqf,GAIA,QAAAU,GAAAhgB,EAAAC,EAAAwa,EAAAoF,GACA7f,IAAAC,EACA4f,EAAA5d,MAAczC,EAAAib,EAAAxY,KAAAsd,EAAA9E,GAAA,cAAA6E,GAAA,EAAA7Y,EAAAqZ,GAAA9f,EAAAC,KACTA,GACLwa,EAAAxY,KAAAsd,EAAA9E,GAAA,SAAAxa,EAAAqf,GAIA,QAAAtT,GAAAyT,EAAAC,EAAAC,EAAAC,EAAAnF,EAAAoF,GACA,GAAAJ,IAAAE,GAAAD,IAAAE,EAAA,CACA,GAAApgB,GAAAib,EAAAxY,KAAAsd,EAAA9E,GAAA,2BACAoF,GAAA5d,MAAczC,IAAA,EAAAiH,EAAAqZ,GAAAL,EAAAE,KAAsCngB,IAAA,EAAAiH,EAAAqZ,GAAAJ,EAAAE,SAC/C,KAAAD,GAAA,IAAAC,GACLnF,EAAAxY,KAAAsd,EAAA9E,GAAA,SAAAkF,EAAA,IAAAC,EAAA,KAIA,gBAAA5f,EAAAC,GACA,GAAAwa,MACAoF,IAOA,OANA7f,GAAAmf,EAAAnf,GAAAC,EAAAkf,EAAAlf,GACAuf,EAAAxf,EAAA6L,WAAA7L,EAAA8L,WAAA7L,EAAA4L,WAAA5L,EAAA6L,WAAA2O,EAAAoF,GACAE,EAAA/f,EAAA+f,OAAA9f,EAAA8f,OAAAtF,EAAAoF,GACAG,EAAAhgB,EAAAggB,MAAA/f,EAAA+f,MAAAvF,EAAAoF,GACA7T,EAAAhM,EAAAigB,OAAAjgB,EAAAkgB,OAAAjgB,EAAAggB,OAAAhgB,EAAAigB,OAAAzF,EAAAoF,GACA7f,EAAAC,EAAA,KACA,SAAA4O,GAEA,IADA,GAAA4C,GAAAjS,GAAA,EAAAsP,EAAA+Q,EAAAld,SACAnD,EAAAsP,GAAA2L,GAAAhJ,EAAAoO,EAAArgB,OAAAiS,EAAAhL,EAAAoI,EACA,OAAA4L,GAAA0F,KAAA,MAaA,QAAAC,IAAA3Z,GACA,QAAAA,EAAAW,KAAAiZ,IAAA5Z,IAAA,EAAAA,GAAA,EAGA,QAAA6Z,IAAA7Z,GACA,QAAAA,EAAAW,KAAAiZ,IAAA5Z,IAAA,EAAAA,GAAA,EAGA,QAAA8Z,IAAA9Z,GACA,QAAAA,EAAAW,KAAAiZ,IAAA,EAAA5Z,IAAA,IAAAA,EAAA,GAmDA,QAAA+Z,IAAAC,GACA,gBAAA1V,EAAA2V,GACA,GAAAlG,GAAAiG,GAAA1V,EAAAvD,GAAAuD,IAAAyP,GAAAkG,EAAAlZ,GAAAkZ,IAAAlG,GACAC,EAAAmD,GAAA7S,EAAA0P,EAAAiG,EAAAjG,GACAC,EAAAkD,GAAA7S,EAAA2P,EAAAgG,EAAAhG,GACAH,EAAAqD,GAAA7S,EAAAwP,QAAAmG,EAAAnG,QACA,iBAAA1L,GAKA,MAJA9D,GAAAyP,IAAA3L,GACA9D,EAAA0P,IAAA5L,GACA9D,EAAA2P,IAAA7L,GACA9D,EAAAwP,UAAA1L,GACA9D,EAAA,KAQA,QAAA4V,IAAA5V,EAAA2V,GACA,GAAAhG,GAAAkD,IAAA7S,EAAA6Q,GAAA7Q,IAAA2P,GAAAgG,EAAA9E,GAAA8E,IAAAhG,GACA1a,EAAA4d,GAAA7S,EAAA/K,EAAA0gB,EAAA1gB,GACAC,EAAA2d,GAAA7S,EAAA9K,EAAAygB,EAAAzgB,GACAsa,EAAAqD,GAAA7S,EAAAwP,QAAAmG,EAAAnG,QACA,iBAAA1L,GAKA,MAJA9D,GAAA2P,IAAA7L,GACA9D,EAAA/K,IAAA6O,GACA9D,EAAA9K,IAAA4O,GACA9D,EAAAwP,UAAA1L,GACA9D,EAAA,IAIA,QAAA6V,IAAAH,GACA,gBAAA1V,EAAA2V,GACA,GAAAlG,GAAAiG,GAAA1V,EAAAwR,GAAAxR,IAAAyP,GAAAkG,EAAAnE,GAAAmE,IAAAlG,GACAlb,EAAAse,GAAA7S,EAAAzL,EAAAohB,EAAAphB,GACAob,EAAAkD,GAAA7S,EAAA2P,EAAAgG,EAAAhG,GACAH,EAAAqD,GAAA7S,EAAAwP,QAAAmG,EAAAnG,QACA,iBAAA1L,GAKA,MAJA9D,GAAAyP,IAAA3L,GACA9D,EAAAzL,IAAAuP,GACA9D,EAAA2P,IAAA7L,GACA9D,EAAAwP,UAAA1L,GACA9D,EAAA,KAQA,QAAA8V,IAAAJ,GACA,eAAAK,GAAAja,GAGA,QAAAka,GAAAhW,EAAA2V,GACA,GAAAlG,GAAAiG,GAAA1V,EAAAkS,GAAAlS,IAAAyP,GAAAkG,EAAAzD,GAAAyD,IAAAlG,GACAC,EAAAmD,GAAA7S,EAAA0P,EAAAiG,EAAAjG,GACAC,EAAAkD,GAAA7S,EAAA2P,EAAAgG,EAAAhG,GACAH,EAAAqD,GAAA7S,EAAAwP,QAAAmG,EAAAnG,QACA,iBAAA1L,GAKA,MAJA9D,GAAAyP,IAAA3L,GACA9D,EAAA0P,IAAA5L,GACA9D,EAAA2P,IAAAtT,KAAAkE,IAAAuD,EAAAhI,IACAkE,EAAAwP,UAAA1L,GACA9D,EAAA,IAMA,MAlBAlE,MAgBAka,EAAApD,MAAAmD,EAEAC,GACG,GAwBH,QAAAC,MACA,MAAAC,MAAAC,GAAAC,IAAAF,GAAAG,GAAAJ,MAAAK,IAGA,QAAAF,MACAF,GAAA,EAGA,QAAAK,MACAnhB,KAAAohB,MACAphB,KAAAqhB,MACArhB,KAAAsS,MAAA,KA0BA,QAAAgP,IAAAzd,EAAA0d,EAAAC,GACA,GAAA9S,GAAA,GAAAyS,GAEA,OADAzS,GAAA+S,QAAA5d,EAAA0d,EAAAC,GACA9S,EAGA,QAAAgT,MACAb,OACAc,EAEA,KADA,GAAA7C,GAAApQ,EAAAkT,GACAlT,IACAoQ,EAAAgC,GAAApS,EAAA2S,QAAA,GAAA3S,EAAA0S,MAAAniB,KAAA,KAAA6f,GACApQ,IAAA4D,QAEAqP,GAGA,QAAAE,MACAf,IAAAgB,GAAAb,GAAAJ,OAAAK,GACAS,GAAAI,GAAA,CACA,KACAL,KACG,QACHC,GAAA,EACAK,KACAlB,GAAA,GAIA,QAAAmB,MACA,GAAApB,GAAAI,GAAAJ,MAAAU,EAAAV,EAAAiB,EACAP,GAAAW,KAAAhB,IAAAK,EAAAO,GAAAjB,GAGA,QAAAmB,MAEA,IADA,GAAApG,GAAAD,EAAAG,EAAA8F,GAAAJ,EAAAW,IACArG,GACAA,EAAAsF,OACAI,EAAA1F,EAAAuF,QAAAG,EAAA1F,EAAAuF,OACAzF,EAAAE,MAAAxJ,QAEAqJ,EAAAG,EAAAxJ,MAAAwJ,EAAAxJ,MAAA,KACAwJ,EAAAF,IAAAtJ,MAAAqJ,EAAAiG,GAAAjG,EAGAyG,IAAAxG,EACAyG,GAAAb,GAGA,QAAAa,IAAAb,GACA,IAAAG,GAAA,CACAI,QAAAtd,aAAAsd,IACA,IAAAR,GAAAC,EAAAV,EACAS,GAAA,IACAC,EAAAW,MAAAJ,GAAAld,WAAAgd,GAAAN,IACAe,QAAA3d,cAAA2d,OAEAA,KAAAR,GAAAhB,GAAAwB,GAAAxd,YAAAmd,GAAAC,KACAP,GAAA,EAAAZ,GAAAc,MAwDA,QAAAU,IAAAte,EAAAlF,GACA,GAAAyjB,GAAAve,EAAAwe,YACA,KAAAD,SAAAzjB,KAAAyjB,EAAAE,MAAAC,GAAA,SAAA/T,OAAA,WACA,OAAA4T,GAGA,QAAAI,IAAA3e,EAAAlF,GACA,GAAAyjB,GAAAve,EAAAwe,YACA,KAAAD,SAAAzjB,KAAAyjB,EAAAE,MAAAG,GAAA,SAAAjU,OAAA,WACA,OAAA4T,GAGA,QAAAM,IAAA7e,EAAAlF,GACA,GAAAyjB,GAAAve,EAAAwe,YACA,KAAAD,SAAAzjB,IAAA,SAAA6P,OAAA,WACA,OAAA4T,GAGA,QAAA3J,IAAA5U,EAAAlF,EAAAoC,GASA,QAAAqhB,GAAAO,GACA5hB,EAAAuhB,MAAAM,GACA7hB,EAAAmgB,MAAAG,QAAA7W,EAAAzJ,EAAAogB,MAAApgB,EAAAqgB,MAGArgB,EAAAogB,OAAAwB,GAAAnY,EAAAmY,EAAA5hB,EAAAogB,OAGA,QAAA3W,GAAAmY,GACA,GAAA1jB,GAAAkS,EAAA5C,EAAA2C,CAGA,IAAAnQ,EAAAuhB,QAAAM,GAAA,MAAAnY,IAEA,KAAAxL,IAAA4jB,GAEA,GADA3R,EAAA2R,EAAA5jB,GACAiS,EAAApM,OAAA/D,EAAA+D,KAAA,CAKA,GAAAoM,EAAAoR,QAAAQ,GAAA,MAAAC,IAAAvY,EAIA0G,GAAAoR,QAAAU,IACA9R,EAAAoR,MAAAW,GACA/R,EAAAgQ,MAAAzW,OACAyG,EAAAF,GAAAnS,KAAA,YAAAgF,IAAA+M,SAAAM,EAAA/N,MAAA+N,EAAAd,aACAyS,GAAA5jB,KAMAA,EAAAN,IACAuS,EAAAoR,MAAAW,GACA/R,EAAAgQ,MAAAzW,aACAoY,GAAA5jB,IAoBA,GAZA8jB,GAAA,WACAhiB,EAAAuhB,QAAAQ,KACA/hB,EAAAuhB,MAAAU,GACAjiB,EAAAmgB,MAAAG,QAAArU,EAAAjM,EAAAogB,MAAApgB,EAAAqgB,MACApU,EAAA2V,MAMA5hB,EAAAuhB,MAAAG,GACA1hB,EAAAiQ,GAAAnS,KAAA,QAAAgF,IAAA+M,SAAA7P,EAAAoC,MAAApC,EAAAqP,OACArP,EAAAuhB,QAAAG,GAAA,CAKA,IAJA1hB,EAAAuhB,MAAAQ,GAGAI,EAAA,GAAAvd,OAAA4I,EAAAxN,EAAAmiB,MAAA9gB,QACAnD,EAAA,EAAAkS,GAAA,EAAuBlS,EAAAsP,IAAOtP,GAC9BiS,EAAAnQ,EAAAmiB,MAAAjkB,GAAAqD,MAAAzD,KAAAgF,IAAA+M,SAAA7P,EAAAoC,MAAApC,EAAAqP,UACA8S,IAAA/R,GAAAD,EAGAgS,GAAA9gB,OAAA+O,EAAA,GAGA,QAAAnE,GAAA2V,GAKA,IAJA,GAAArU,GAAAqU,EAAA5hB,EAAAoiB,SAAApiB,EAAAqiB,KAAAvkB,KAAA,KAAA8jB,EAAA5hB,EAAAoiB,WAAApiB,EAAAmgB,MAAAG,QAAA5W,GAAA1J,EAAAuhB,MAAAe,GAAA,GACApkB,GAAA,EACAsP,EAAA2U,EAAA9gB,SAEAnD,EAAAsP,GACA2U,EAAAjkB,GAAAJ,KAAA,KAAAyP,EAIAvN,GAAAuhB,QAAAe,KACAtiB,EAAAiQ,GAAAnS,KAAA,MAAAgF,IAAA+M,SAAA7P,EAAAoC,MAAApC,EAAAqP,OACA3F,KAIA,QAAAA,KACA1J,EAAAuhB,MAAAW,GACAliB,EAAAmgB,MAAAzW,aACAoY,GAAAlkB,EACA,QAAAM,KAAA4jB,GAAA,aACAhf,GAAAwe,aApGA,GACAa,GADAL,EAAAhf,EAAAwe,YAKAQ,GAAAlkB,GAAAoC,EACAA,EAAAmgB,SAAAkB,EAAA,EAAArhB,EAAAqgB,MA+HA,QAAAkC,IAAA3kB,EAAAmG,GACA,GAAAye,GAAAC,CACA,mBACA,GAAApB,GAAAI,GAAA5iB,KAAAjB,GACAukB,EAAAd,EAAAc,KAKA,IAAAA,IAAAK,EAAA,CACAC,EAAAD,EAAAL,CACA,QAAAjkB,GAAA,EAAAsP,EAAAiV,EAAAphB,OAAwCnD,EAAAsP,IAAOtP,EAC/C,GAAAukB,EAAAvkB,GAAA6F,SAAA,CACA0e,IAAAjkB,QACAikB,EAAAC,OAAAxkB,EAAA,EACA,QAKAmjB,EAAAc,MAAAM,GAIA,QAAAE,IAAA/kB,EAAAmG,EAAAxC,GACA,GAAAihB,GAAAC,CACA,sBAAAlhB,GAAA,SAAAkM,MACA,mBACA,GAAA4T,GAAAI,GAAA5iB,KAAAjB,GACAukB,EAAAd,EAAAc,KAKA,IAAAA,IAAAK,EAAA,CACAC,GAAAD,EAAAL,GAAA3jB,OACA,QAAA+O,IAAoBxJ,OAAAxC,SAAyBrD,EAAA,EAAAsP,EAAAiV,EAAAphB,OAA2BnD,EAAAsP,IAAOtP,EAC/E,GAAAukB,EAAAvkB,GAAA6F,SAAA,CACA0e,EAAAvkB,GAAAqP,CACA,OAGArP,IAAAsP,GAAAiV,EAAA9hB,KAAA4M,GAGA8T,EAAAc,MAAAM,GAsBA,QAAAG,IAAApW,EAAAzI,EAAAxC,GACA,GAAA3D,GAAA4O,EAAAqW,GAOA,OALArW,GAAAQ,KAAA,WACA,GAAAqU,GAAAI,GAAA5iB,KAAAjB,IACAyjB,EAAA9f,QAAA8f,EAAA9f,WAA2CwC,GAAAxC,EAAA3C,MAAAC,KAAAqO,aAG3C,SAAApK,GACA,MAAA6e,IAAA7e,EAAAlF,GAAA2D,MAAAwC,IAYA,QAAA+e,IAAA/e,GACA,kBACAlF,KAAAoT,gBAAAlO,IAIA,QAAAgf,IAAAnU,GACA,kBACA/P,KAAAsT,kBAAAvD,EAAAC,MAAAD,EAAAE,QAIA,QAAAkU,IAAAjf,EAAAkf,EAAAC,GACA,GAAAC,GACAC,CACA,mBACA,GAAAC,GAAAxkB,KAAA+N,aAAA7I,EACA,OAAAsf,KAAAH,EAAA,KACAG,IAAAF,EAAAC,EACAA,EAAAH,EAAAE,EAAAE,EAAAH,IAIA,QAAAI,IAAA1U,EAAAqU,EAAAC,GACA,GAAAC,GACAC,CACA,mBACA,GAAAC,GAAAxkB,KAAA0kB,eAAA3U,EAAAC,MAAAD,EAAAE,MACA,OAAAuU,KAAAH,EAAA,KACAG,IAAAF,EAAAC,EACAA,EAAAH,EAAAE,EAAAE,EAAAH,IAIA,QAAAM,IAAAzf,EAAAkf,EAAA1hB,GACA,GAAA4hB,GACAM,EACAL,CACA,mBACA,GAAAC,GAAAH,EAAA3hB,EAAA1C,KACA,cAAAqkB,MAAArkB,MAAAoT,gBAAAlO,IACAsf,EAAAxkB,KAAA+N,aAAA7I,GACAsf,IAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAH,EAAAE,EAAAE,EAAAI,EAAAP,KAIA,QAAAQ,IAAA9U,EAAAqU,EAAA1hB,GACA,GAAA4hB,GACAM,EACAL,CACA,mBACA,GAAAC,GAAAH,EAAA3hB,EAAA1C,KACA,cAAAqkB,MAAArkB,MAAAsT,kBAAAvD,EAAAC,MAAAD,EAAAE,QACAuU,EAAAxkB,KAAA0kB,eAAA3U,EAAAC,MAAAD,EAAAE,OACAuU,IAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAH,EAAAE,EAAAE,EAAAI,EAAAP,KAYA,QAAAS,IAAA/U,EAAArN,GACA,QAAA4gB,KACA,GAAArf,GAAAjE,KAAAX,EAAAqD,EAAA3C,MAAAkE,EAAAoK,UACA,OAAAhP,IAAA,SAAAqP,GACAzK,EAAAyP,eAAA3D,EAAAC,MAAAD,EAAAE,MAAA5Q,EAAAqP,KAIA,MADA4U,GAAAyB,OAAAriB,EACA4gB,EAGA,QAAA0B,IAAA9f,EAAAxC,GACA,QAAA4gB,KACA,GAAArf,GAAAjE,KAAAX,EAAAqD,EAAA3C,MAAAkE,EAAAoK,UACA,OAAAhP,IAAA,SAAAqP,GACAzK,EAAAuP,aAAAtO,EAAA7F,EAAAqP,KAIA,MADA4U,GAAAyB,OAAAriB,EACA4gB,EAYA,QAAA2B,IAAAlmB,EAAA2D,GACA,kBACA6f,GAAAviB,KAAAjB,GAAAwiB,OAAA7e,EAAA3C,MAAAC,KAAAqO,YAIA,QAAA6W,IAAAnmB,EAAA2D,GACA,MAAAA,MAAA,WACA6f,GAAAviB,KAAAjB,GAAAwiB,MAAA7e,GAcA,QAAAyiB,IAAApmB,EAAA2D,GACA,kBACAkgB,GAAA5iB,KAAAjB,GAAAwkB,UAAA7gB,EAAA3C,MAAAC,KAAAqO,YAIA,QAAA+W,IAAArmB,EAAA2D,GACA,MAAAA,MAAA,WACAkgB,GAAA5iB,KAAAjB,GAAAwkB,SAAA7gB,GAcA,QAAA2iB,IAAAtmB,EAAA2D,GACA,qBAAAA,GAAA,SAAAkM,MACA,mBACAgU,GAAA5iB,KAAAjB,GAAAykB,KAAA9gB,GA4CA,QAAAkI,IAAA1F,GACA,OAAAA,EAAA,IAAA+J,OAAAC,MAAA,SAAAoW,MAAA,SAAA5W,GACA,GAAArP,GAAAqP,EAAA3F,QAAA,IAEA,OADA1J,IAAA,IAAAqP,IAAA/O,MAAA,EAAAN,KACAqP,GAAA,UAAAA,IAIA,QAAA6W,IAAAxmB,EAAAmG,EAAAqL,GACA,GAAAiV,GAAAC,EAAAC,EAAA9a,GAAA1F,GAAAqd,GAAAK,EACA,mBACA,GAAAJ,GAAAkD,EAAA1lB,KAAAjB,GACAqS,EAAAoR,EAAApR,EAKAA,KAAAoU,IAAAC,GAAAD,EAAApU,GAAAnE,QAAAmE,GAAAlM,EAAAqL,GAEAiS,EAAApR,GAAAqU,GAYA,QAAAE,IAAA5mB,GACA,kBACA,GAAAqT,GAAApS,KAAAgO,UACA,QAAA3O,KAAAW,MAAAyiB,aAAA,IAAApjB,IAAAN,EAAA,MACAqT,MAAAiE,YAAArW,OAwDA,QAAA4lB,IAAA1gB,EAAA2gB,GACA,GAAAvB,GACAM,EACAL,CACA,mBACA,GAAAlf,GAAAvC,GAAA9C,MAAAse,iBAAAte,KAAA,MACAwkB,EAAAnf,EAAAkZ,iBAAArZ,GACAmf,GAAArkB,KAAAqF,MAAA0O,eAAA7O,GAAAG,EAAAkZ,iBAAArZ,GACA,OAAAsf,KAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAsB,EAAAvB,EAAAE,EAAAI,EAAAP,IAIA,QAAAyB,IAAA5gB,GACA,kBACAlF,KAAAqF,MAAA0O,eAAA7O,IAIA,QAAA6gB,IAAA7gB,EAAA2gB,EAAAxB,GACA,GAAAC,GACAC,CACA,mBACA,GAAAC,GAAA1hB,GAAA9C,MAAAse,iBAAAte,KAAA,MAAAue,iBAAArZ,EACA,OAAAsf,KAAAH,EAAA,KACAG,IAAAF,EAAAC,EACAA,EAAAsB,EAAAvB,EAAAE,EAAAH,IAIA,QAAA2B,IAAA9gB,EAAA2gB,EAAAnjB,GACA,GAAA4hB,GACAM,EACAL,CACA,mBACA,GAAAlf,GAAAvC,GAAA9C,MAAAse,iBAAAte,KAAA,MACAwkB,EAAAnf,EAAAkZ,iBAAArZ,GACAmf,EAAA3hB,EAAA1C,KAEA,OADA,OAAAqkB,IAAArkB,KAAAqF,MAAA0O,eAAA7O,GAAAmf,EAAAhf,EAAAkZ,iBAAArZ,IACAsf,IAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAsB,EAAAvB,EAAAE,EAAAI,EAAAP,IAcA,QAAA4B,IAAA/gB,EAAAxC,EAAAuR,GACA,QAAAqP,KACA,GAAArf,GAAAjE,KAAAX,EAAAqD,EAAA3C,MAAAkE,EAAAoK,UACA,OAAAhP,IAAA,SAAAqP,GACAzK,EAAAoB,MAAA6O,YAAAhP,EAAA7F,EAAAqP,GAAAuF,IAIA,MADAqP,GAAAyB,OAAAriB,EACA4gB,EAWA,QAAA4C,IAAAxjB,GACA,kBACA1C,KAAAsV,YAAA5S,GAIA,QAAAyjB,IAAAzjB,GACA,kBACA,GAAA2hB,GAAA3hB,EAAA1C,KACAA,MAAAsV,YAAA,MAAA+O,EAAA,GAAAA,GAkCA,QAAA+B,IAAAlP,EAAAC,EAAAjS,EAAAnG,GACAiB,KAAAoX,QAAAF,EACAlX,KAAAqX,SAAAF,EACAnX,KAAAqmB,MAAAnhB,EACAlF,KAAAgkB,IAAAjlB,EAGA,QAAA4O,IAAAzI,GACA,MAAAgI,MAAAS,WAAAzI,GAGA,QAAAohB,MACA,QAAAvnB,GAgCA,QAAAwnB,IAAA7X,GACA,OAAAA,EAGA,QAAA8X,IAAA9X,GACA,MAAAA,KAGA,QAAA+X,IAAA/X,GACA,MAAAA,IAAA,EAAAA,GAGA,QAAAgY,IAAAhY,GACA,QAAAA,GAAA,MAAAA,SAAA,EAAAA,GAAA,KAGA,QAAAiY,IAAAjY,GACA,MAAAA,OAGA,QAAAkY,IAAAlY,GACA,QAAAA,MAAA,EAGA,QAAAmY,IAAAnY,GACA,QAAAA,GAAA,MAAAA,UAAA,GAAAA,IAAA,KA4CA,QAAAoY,IAAApY,GACA,SAAAzH,KAAAgU,IAAAvM,EAAAqY,IAGA,QAAAC,IAAAtY,GACA,MAAAzH,MAAAiU,IAAAxM,EAAAqY,IAGA,QAAAE,IAAAvY,GACA,SAAAzH,KAAAgU,IAAAiM,GAAAxY,IAAA,EAGA,QAAAyY,IAAAzY,GACA,MAAAzH,MAAAkE,IAAA,KAAAuD,EAAA,IAGA,QAAA0Y,IAAA1Y,GACA,SAAAzH,KAAAkE,IAAA,MAAAuD,GAGA,QAAA2Y,IAAA3Y,GACA,QAAAA,GAAA,MAAAzH,KAAAkE,IAAA,KAAAuD,EAAA,MAAAzH,KAAAkE,IAAA,QAAAuD,IAAA,EAGA,QAAA4Y,IAAA5Y,GACA,SAAAzH,KAAAkV,KAAA,EAAAzN,KAGA,QAAA6Y,IAAA7Y,GACA,MAAAzH,MAAAkV,KAAA,KAAAzN,KAGA,QAAA8Y,IAAA9Y,GACA,QAAAA,GAAA,QAAAzH,KAAAkV,KAAA,EAAAzN,KAAAzH,KAAAkV,KAAA,GAAAzN,GAAA,GAAAA,GAAA,KAcA,QAAA+Y,IAAA/Y,GACA,SAAAgZ,GAAA,EAAAhZ,GAGA,QAAAgZ,IAAAhZ,GACA,OAAAA,MAAAiZ,GAAAC,GAAAlZ,MAAAmZ,GAAAD,IAAAlZ,GAAAoZ,IAAApZ,EAAAqZ,GAAArZ,EAAAsZ,GAAAJ,IAAAlZ,GAAAuZ,IAAAvZ,EAAAwZ,GAAAN,IAAAlZ,GAAAyZ,IAAAzZ,EAAA0Z,GAGA,QAAAC,IAAA3Z,GACA,QAAAA,GAAA,QAAAgZ,GAAA,EAAAhZ,GAAAgZ,GAAAhZ,EAAA,QA6FA,QAAA4Z,IAAArkB,EAAAlF,GAEA,IADA,GAAAwpB,KACAA,EAAAtkB,EAAAwe,iBAAA8F,IAAAxpB,KACA,KAAAkF,IAAA+J,YACA,MAAAwa,IAAAhH,KAAAX,KAAA2H,EAGA,OAAAD,GA0DA,QAAAE,MACA5pB,EAAA6R,MAAA8G,2BA2FA,QAAArI,IAAAT,GACA,OAAUS,KAAAT,GAIV,QAAAga,MACA,OAAA7pB,EAAA6R,MAAA8H,OAGA,QAAAmQ,MACA,GAAAC,GAAA5oB,KAAA6oB,iBAAA7oB,IACA,eAAA4oB,EAAAjhB,MAAAgX,QAAAjc,MAAAkmB,EAAAhhB,OAAA+W,QAAAjc,QAIA,QAAAomB,IAAA7kB,GACA,MAAAA,EAAA8kB,SAAA,KAAA9kB,IAAA+J,YAAA,MACA,OAAA/J,GAAA8kB,QAGA,QAAAC,IAAAC,GACA,MAAAA,GAAA,QAAAA,EAAA,OACAA,EAAA,QAAAA,EAAA,MAGA,QAAAC,IAAAjlB,GACA,GAAAye,GAAAze,EAAA8kB,OACA,OAAArG,KAAAyG,IAAAC,OAAA1G,EAAAxV,WAAA,KAGA,QAAAmc,MACA,MAAAC,IAAAC,IAGA,QAAAC,MACA,MAAAF,IAAAG,IAOA,QAAAH,IAAAH,GAOA,QAAAO,GAAAlZ,GACA,GAAAmZ,GAAAnZ,EACAoZ,SAAA,UAAAC,GACA1gB,UAAA,YACA7E,MAAA6K,GAAA,YAEAwa,GAAAvgB,QAAAd,OAAA,QACAC,KAAA,mBACAA,KAAA,wBACAA,KAAA,SAAAuhB,GAAAH,SACAnc,MAAAmc,GACAxb,KAAA,WACA,GAAA8a,GAAAH,GAAA9oB,MAAAipB,MACA5gB,IAAArI,MACAuI,KAAA,IAAA0gB,EAAA,OACA1gB,KAAA,IAAA0gB,EAAA,OACA1gB,KAAA,QAAA0gB,EAAA,MAAAA,EAAA,OACA1gB,KAAA,SAAA0gB,EAAA,MAAAA,EAAA,SAGAzY,EAAArH,UAAA,cACA7E,MAAA6K,GAAA,eACA/F,QAAAd,OAAA,QACAC,KAAA,qBACAA,KAAA,SAAAuhB,GAAA5c,WACA3E,KAAA,eACAA,KAAA,mBACAA,KAAA,iBACAA,KAAA,+BAEA,IAAA7G,GAAA8O,EAAArH,UAAA,WACA7E,KAAA6kB,EAAAY,QAAA,SAAAjhB,GAAsC,MAAAA,GAAAqG,MAEtCzN,GAAA2H,OAAA4E,SAEAvM,EAAA0H,QAAAd,OAAA,QACAC,KAAA,iBAAAO,GAAoC,wBAAAA,EAAAqG,OACpC5G,KAAA,kBAAAO,GAAqC,MAAAghB,IAAAhhB,EAAAqG,QAErCqB,EACArC,KAAA6b,GACAzhB,KAAA,eACAA,KAAA,wBACAlD,MAAA,+CACA+L,GAAA,mCAAA6Y,GAyCA,QAAAD,KACA,GAAAxZ,GAAAnI,GAAArI,MACA4X,EAAAkR,GAAA9oB,MAAAkN,SAEA0K,IACApH,EAAArH,UAAA,cACA9D,MAAA,gBACAkD,KAAA,IAAAqP,EAAA,OACArP,KAAA,IAAAqP,EAAA,OACArP,KAAA,QAAAqP,EAAA,MAAAA,EAAA,OACArP,KAAA,SAAAqP,EAAA,MAAAA,EAAA;AAEApH,EAAArH,UAAA,WACA9D,MAAA,gBACAkD,KAAA,aAAAO,GAAkC,YAAAA,EAAAqG,KAAArG,EAAAqG,KAAA3M,OAAA,GAAAoV,EAAA,MAAAsS,EAAA,EAAAtS,EAAA,MAAAsS,EAAA,IAClC3hB,KAAA,aAAAO,GAAkC,YAAAA,EAAAqG,KAAA,GAAAyI,EAAA,MAAAsS,EAAA,EAAAtS,EAAA,MAAAsS,EAAA,IAClC3hB,KAAA,iBAAAO,GAAsC,YAAAA,EAAAqG,MAAA,MAAArG,EAAAqG,KAAAyI,EAAA,MAAAA,EAAA,MAAAsS,MACtC3hB,KAAA,kBAAAO,GAAuC,YAAAA,EAAAqG,MAAA,MAAArG,EAAAqG,KAAAyI,EAAA,MAAAA,EAAA,MAAAsS,OAIvC1Z,EAAArH,UAAA,sBACA9D,MAAA,kBACAkD,KAAA,UACAA,KAAA,UACAA,KAAA,cACAA,KAAA,eAIA,QAAA4hB,GAAApY,EAAArS,GACA,MAAAqS,GAAAgX,QAAAoB,SAAA,GAAAC,GAAArY,EAAArS,GAGA,QAAA0qB,GAAArY,EAAArS,GACAM,KAAA+R,OACA/R,KAAAN,OACAM,KAAA0iB,MAAA3Q,EAAAgX,QACA/oB,KAAAmY,OAAA,EAyBA,QAAA8R,KAqEA,QAAAI,KACA,GAAAC,GAAAC,GAAAxY,IACAyY,GAAAC,GAAAC,IACAzjB,KAAA+D,IAAAsf,EAAA,GAAAK,EAAA,IAAA1jB,KAAA+D,IAAAsf,EAAA,GAAAK,EAAA,IAAAD,GAAA,EACAD,GAAA,GAEAE,EAAAL,EACAM,GAAA,EACAC,KACAC,IAGA,QAAAA,KACA,GAAApc,EAKA,QAHA0J,EAAAuS,EAAA,GAAAI,EAAA,GACA1S,EAAAsS,EAAA,GAAAI,EAAA,GAEAC,GACA,IAAAC,IACA,IAAAC,IACAC,IAAA/S,EAAAnR,KAAAgE,IAAAmgB,EAAAC,EAAApkB,KAAAG,IAAAuV,EAAA2O,EAAAlT,IAAAmT,EAAAF,EAAAjT,EAAAoT,EAAAF,EAAAlT,GACAqT,IAAApT,EAAApR,KAAAgE,IAAAygB,EAAAC,EAAA1kB,KAAAG,IAAAwkB,EAAAC,EAAAxT,IAAAyT,EAAAH,EAAAtT,EAAA0T,EAAAF,EAAAxT,EACA,MAEA,KAAA2T,IACAb,EAAA,GAAA/S,EAAAnR,KAAAgE,IAAAmgB,EAAAC,EAAApkB,KAAAG,IAAAuV,EAAA0O,EAAAjT,IAAAmT,EAAAF,EAAAjT,EAAAoT,EAAAF,GACAH,EAAA,IAAA/S,EAAAnR,KAAAgE,IAAAmgB,EAAAE,EAAArkB,KAAAG,IAAAuV,EAAA2O,EAAAlT,IAAAmT,EAAAF,EAAAG,EAAAF,EAAAlT,GACAqT,EAAA,GAAApT,EAAApR,KAAAgE,IAAAygB,EAAAC,EAAA1kB,KAAAG,IAAAwkB,EAAAD,EAAAtT,IAAAyT,EAAAH,EAAAtT,EAAA0T,EAAAF,GACAJ,EAAA,IAAApT,EAAApR,KAAAgE,IAAAygB,EAAAG,EAAA5kB,KAAAG,IAAAwkB,EAAAC,EAAAxT,IAAAyT,EAAAH,EAAAI,EAAAF,EAAAxT,EACA,MAEA,KAAA4T,IACAd,IAAAI,EAAAtkB,KAAAgE,IAAAmgB,EAAAnkB,KAAAG,IAAAuV,EAAA0O,EAAAjT,EAAA+S,IAAAK,EAAAvkB,KAAAgE,IAAAmgB,EAAAnkB,KAAAG,IAAAuV,EAAA2O,EAAAlT,EAAA+S,KACAM,IAAAK,EAAA7kB,KAAAgE,IAAAygB,EAAAzkB,KAAAG,IAAAwkB,EAAAD,EAAAtT,EAAAoT,IAAAM,EAAA9kB,KAAAgE,IAAAygB,EAAAzkB,KAAAG,IAAAwkB,EAAAC,EAAAxT,EAAAoT,KAKAD,EAAAD,IACAJ,IAAA,EACAzc,EAAA2c,IAAAC,IAAA5c,EACAA,EAAA6c,IAAAC,IAAA9c,EACAS,IAAA+c,KAAAvC,EAAAphB,KAAA,SAAAuhB,GAAA3a,EAAA+c,GAAA/c,MAGA4c,EAAAD,IACAL,IAAA,EACA/c,EAAAid,IAAAE,IAAAnd,EACAA,EAAAod,IAAAC,IAAArd,EACAS,IAAAgd,KAAAxC,EAAAphB,KAAA,SAAAuhB,GAAA3a,EAAAgd,GAAAhd,MAGAuT,EAAAxV,YAAA0K,EAAA8K,EAAAxV,WACAud,IAAAc,EAAA3T,EAAA,MAAA4T,EAAA5T,EAAA,OACA8S,IAAAoB,EAAAlU,EAAA,MAAAmU,EAAAnU,EAAA,OAEAA,EAAA,QAAA2T,GACA3T,EAAA,QAAAkU,GACAlU,EAAA,QAAA4T,GACA5T,EAAA,QAAAmU,IACArJ,EAAAxV,YAAAqe,EAAAO,IAAAN,EAAAO,IACA/B,EAAA/qB,KAAA8S,GACAqa,EAAA1C,SAIA,QAAA2C,KAEA,GADA5D,KACA5pB,EAAA6R,MAAA4b,QAAA,CACA,GAAAztB,EAAA6R,MAAA4b,QAAA9pB,OAAA,MACA+pB,IAAA9nB,aAAA8nB,GACAA,EAAA1nB,WAAA,WAA6C0nB,EAAA,MAAsB,KACnE/b,EAAAY,GAAA,6DAEAqG,IAAA5Y,EAAA6R,MAAAgH,KAAAkT,GACAlT,EAAAtG,GAAA,+DAEAZ,GAAAjI,KAAA,wBACAohB,EAAAphB,KAAA,SAAAuhB,GAAAH,SACAjH,EAAAxV,YAAA0K,EAAA8K,EAAAxV,WACA8b,GAAApR,KAAA8K,EAAAxV,UAAA,KAAA8c,EAAA/qB,KAAA8S,IACAqa,EAAA7L,MAGA,QAAAiM,KACA,OAAA3tB,EAAA6R,MAAA+b,SACA,QACAjC,EAAAW,GAAAM,CACA,MAEA,SACAT,IAAAgB,KACAb,IAAAG,EAAAE,EAAApT,EAAA+S,EAAAE,EAAAE,EAAAnT,EAAA+S,GACAM,IAAAI,EAAAE,EAAA1T,EAAAoT,EAAAE,EAAAG,EAAAzT,EAAAoT,GACAT,EAAAiB,GACAnB,IAEA,MAEA,SACAE,IAAAgB,IAAAhB,IAAAiB,KACAd,EAAA,EAAAG,EAAAE,EAAApT,EAAwC+S,EAAA,IAAAE,EAAAE,EAAAnT,GACxCqT,EAAA,EAAAI,EAAAE,EAAA1T,EAAwCoT,EAAA,IAAAE,EAAAG,EAAAzT,GACxC2S,EAAAC,GACAtB,EAAAphB,KAAA,SAAAuhB,GAAA5c,WACA4d,IAEA,MAEA,gBAEAD,KAGA,QAAA6B,KACA,OAAA7tB,EAAA6R,MAAA+b,SACA,QACAjC,IACAC,EAAAC,EAAAF,GAAA,EACAM,IAEA,MAEA,SACAE,IAAAiB,KACAd,EAAA,EAAAG,EAAAE,EAAmCL,EAAA,IAAAE,EAAAE,GACnCE,EAAA,EAAAI,EAAAE,EAAmCN,EAAA,IAAAE,EAAAG,GACnCd,EAAAgB,GACAlB,IAEA,MAEA,SACAE,IAAAC,KACApsB,EAAA6R,MAAAic,QACAxB,IAAAG,EAAAE,EAAApT,EAAA+S,EAAAE,EAAAE,EAAAnT,EAAA+S,GACAM,IAAAI,EAAAE,EAAA1T,EAAAoT,EAAAE,EAAAG,EAAAzT,EAAAoT,GACAT,EAAAiB,KAEAd,EAAA,EAAAG,EAAAE,EAAqCL,EAAA,IAAAE,EAAAE,GACrCE,EAAA,EAAAI,EAAAE,EAAqCN,EAAA,IAAAE,EAAAG,GACrCd,EAAAgB,IAEArC,EAAAphB,KAAA,SAAAuhB,GAAA3a,IACA2b,IAEA,MAEA,gBAEAD,KA3NA,GAAAhsB,EAAA6R,MAAA4b,SAAgC,GAAAztB,EAAA6R,MAAAkc,eAAApqB,OAAA3D,EAAA6R,MAAA4b,QAAA9pB,OAAA,MAAAqoB,UAChC,IAAA0B,EAAA,MACA,IAAAvjB,EAAAjJ,MAAAC,KAAAqO,WAAA,CAEA,GAQAgd,GAAAE,EACAI,EAAAG,EACAR,EAAAE,EACAK,EAAAE,EACA3T,EACAC,EACAuS,EAEAH,EACAC,EAjBA3Y,EAAA/R,KACAmP,EAAAtQ,EAAA6R,MAAAuH,OAAAjH,SAAA7B,KACA6b,EAAA,eAAAnsB,EAAA6R,MAAAmc,QAAA1d,EAAA,UAAAA,GAAA+b,GAAArsB,EAAA6R,MAAAic,OAAAV,GAAAD,GACAb,EAAAhC,IAAAM,GAAA,KAAAqD,GAAA3d,GACAsc,EAAAtC,IAAAI,GAAA,KAAAwD,GAAA5d,GACAuT,EAAAoG,GAAA/W,GACAkX,EAAAvG,EAAAuG,OACArR,EAAA8K,EAAAxV,UACAke,EAAAnC,EAAA,MACAyC,EAAAzC,EAAA,MACAtM,EAAAsM,EAAA,MACA2C,EAAA3C,EAAA,MAIAuB,EAAAW,GAAAM,GAAA5sB,EAAA6R,MAAAsc,SAGAjC,EAAAR,GAAAxY,GACA4Y,EAAAI,EACAqB,EAAAjC,EAAApY,EAAA1D,WAAA4e,aAEA,aAAA9d,EACAuT,EAAAxV,UAAA0K,IACAyT,EAAAlC,IAAAM,GAAA2B,EAAAL,EAAA,GAAAY,EAAAxC,IAAAI,GAAAmC,EAAAX,EAAA,KACAO,EAAAnC,IAAAM,GAAA9M,EAAA0O,EAAAQ,EAAA1C,IAAAI,GAAAqC,EAAAD,KAGAN,EAAAzT,EAAA,MACA+T,EAAA/T,EAAA,MACA0T,EAAA1T,EAAA,MACAiU,EAAAjU,EAAA,OAGA2T,EAAAF,EACAS,EAAAH,EACAH,EAAAF,EACAS,EAAAF,CAEA,IAAArb,GAAAnI,GAAA0J,GACAxJ,KAAA,yBAEAohB,EAAAnZ,EAAArH,UAAA,YACAZ,KAAA,SAAAuhB,GAAA3a,GAEA,IAAAtQ,EAAA6R,MAAA4b,QACA9b,EACAY,GAAA,kBAAAiZ,GAAA,GACAjZ,GAAA,mCAAAib,GAAA,OACK,CACL,GAAA3U,GAAArP,GAAAxJ,EAAA6R,MAAAgH,MACAtG,GAAA,gBAAAob,GAAA,GACApb,GAAA,cAAAsb,GAAA,GACAtb,GAAA,kBAAAiZ,GAAA,GACAjZ,GAAA,gBAAAib,GAAA,EAEAa,IAAAruB,EAAA6R,MAAAgH,MAGA+Q,KACA0E,GAAApb,GACAiY,EAAA/qB,KAAA8S,GACAqa,EAAAxhB,SA6JA,QAAAif,KACA,GAAAnH,GAAA1iB,KAAA+oB,UAAiC7b,UAAA,KAGjC,OAFAwV,GAAAuG,SAAAlpB,MAAAC,KAAAqO,WACAqU,EAAAyG,MACAzG,EA9XA,GAIA6J,GAJAtD,EAAAN,GACA3f,EAAA0f,GACA0E,EAAA3e,EAAAib,EAAA,uBACAQ,EAAA,CA+YA,OA7VAR,GAAAoB,KAAA,SAAAta,EAAAoH,GACApH,EAAAtD,UACAsD,EACAY,GAAA,yBAAyC+Y,EAAAnqB,KAAAqO,WAAA4e,cAAAriB,UACzCwG,GAAA,uCAAuD+Y,EAAAnqB,KAAAqO,WAAAkS,QACvD+C,MAAA,mBAQA,QAAAA,GAAA5U,GACAgU,EAAAxV,UAAA,IAAAwB,GAAAsa,GAAAqE,GAAA,KAAAhuB,EAAAqP,GACAsb,EAAA/qB,KAAA8S,GACAqa,EAAA1C,QAVA,GAAA3X,GAAA/R,KACA0iB,EAAA3Q,EAAAgX,QACAqD,EAAAjC,EAAApY,EAAA1D,WACAif,EAAA5K,EAAAxV,UACAmgB,EAAAlE,EAAAoE,MAAA,kBAAA3V,KAAA7X,MAAAC,KAAAqO,WAAAuJ,EAAA8K,EAAAuG,QACA5pB,EAAAmuB,GAAAF,EAAAD,EAQA,OAAAC,IAAAD,EAAA/J,IAAA,KAGA9S,EACArC,KAAA,WACA,GAAA4D,GAAA/R,KACAN,EAAA2O,UACAqU,EAAA3Q,EAAAgX,QACAsE,EAAAlE,EAAAoE,MAAA,kBAAA3V,KAAA7X,MAAAgS,EAAArS,GAAAkY,EAAA8K,EAAAuG,QACAmD,EAAAjC,EAAApY,EAAArS,GAAAutB,aAEAE,IAAApb,GACA2Q,EAAAxV,UAAA,MAAAmgB,GAAArE,GAAAqE,GAAA,KAAAA,EACArD,EAAA/qB,KAAA8S,GACAqa,EAAAxhB,QAAA8e,QAAAnJ,SA8CA6J,EAAA7qB,WACA0tB,YAAA,WAEA,MADA,OAAAjtB,KAAAmY,SAAAnY,KAAA0iB,MAAAyH,QAAAnqB,UAAAytB,UAAA,GACAztB,MAEA4K,MAAA,WAEA,MADA5K,MAAAytB,WAAAztB,KAAAytB,UAAA,EAAAztB,KAAAosB,KAAA,UACApsB,MAEA0pB,MAAA,WAEA,MADA1pB,MAAAosB,KAAA,SACApsB,MAEAugB,IAAA,WAEA,MADA,OAAAvgB,KAAAmY,eAAAnY,MAAA0iB,MAAAyH,QAAAnqB,KAAAosB,KAAA,QACApsB,MAEAosB,KAAA,SAAAjd,GACA2C,EAAA,GAAA4b,IAAAhE,EAAAva,EAAAga,EAAAC,OAAAppB,KAAA0iB,MAAAxV,YAAAkgB,EAAArtB,MAAAqtB,GAAAje,EAAAnP,KAAA+R,KAAA/R,KAAAN,SA2OAgqB,EAAAT,OAAA,SAAA7a,GACA,MAAAC,WAAA7L,QAAAymB,EAAA,kBAAA7a,KAAAuf,MAAAvf,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,SAAAsb,GAAAT,GAGAS,EAAA1gB,OAAA,SAAAoF,GACA,MAAAC,WAAA7L,QAAAwG,EAAA,kBAAAoF,KAAAuf,KAAAvf,GAAAsb,GAAA1gB,GAGA0gB,EAAAQ,WAAA,SAAA9b,GACA,MAAAC,WAAA7L,QAAA0nB,GAAA9b,EAAAsb,GAAAQ,GAGAR,EAAAtY,GAAA,WACA,GAAA1O,GAAA0qB,EAAAhc,GAAArR,MAAAqtB,EAAA/e,UACA,OAAA3L,KAAA0qB,EAAA1D,EAAAhnB,GAGAgnB,EAUA,QAAAkE,IAAAC,GACA,gBAAAhuB,EAAAC,GACA,MAAA+tB,GACAhuB,EAAAiuB,OAAAprB,MAAA7C,EAAAoY,OAAAvV,MACA5C,EAAAguB,OAAAprB,MAAA5C,EAAAmY,OAAAvV,QAgIA,QAAAqrB,MACA/tB,KAAAguB,IAAAhuB,KAAAiuB,IACAjuB,KAAAkuB,IAAAluB,KAAAmuB,IAAA,KACAnuB,KAAAoO,EAAA,GAGA,QAAAjB,MACA,UAAA4gB,IAmHA,QAAAK,IAAAtlB,GACA,MAAAA,GAAAglB,OAGA,QAAAO,IAAAvlB,GACA,MAAAA,GAAAmP,OAGA,QAAAqW,IAAAxlB,GACA,MAAAA,GAAAylB,OAGA,QAAAC,IAAA1lB,GACA,MAAAA,GAAAmB,WAGA,QAAAwkB,IAAA3lB,GACA,MAAAA,GAAAoB,SAoEA,QAAAwkB,OAkDA,QAAAC,IAAAC,EAAApkB,GACA,GAAAtC,GAAA,GAAAwmB,GAGA,IAAAE,YAAAF,IAAAE,EAAAzgB,KAAA,SAAAzL,EAAAgD,GAA+DwC,EAAAmH,IAAA3J,EAAAhD,SAG/D,IAAAqD,MAAAC,QAAA4oB,GAAA,CACA,GAEAtd,GAFAjS,GAAA,EACAsP,EAAAigB,EAAApsB,MAGA,UAAAgI,EAAA,OAAAnL,EAAAsP,GAAAzG,EAAAmH,IAAAhQ,EAAAuvB,EAAAvvB,QACA,QAAAA,EAAAsP,GAAAzG,EAAAmH,IAAA7E,EAAA8G,EAAAsd,EAAAvvB,KAAAuvB,GAAAtd,OAIA,IAAAsd,EAAA,OAAAlpB,KAAAkpB,GAAA1mB,EAAAmH,IAAA3J,EAAAkpB,EAAAlpB,GAEA,OAAAwC,GA2DA,QAAA2mB,MACA,SAGA,QAAAC,IAAAF,EAAAlpB,EAAAhD,GACAksB,EAAAlpB,GAAAhD,EAGA,QAAAqsB,MACA,MAAAJ,MAGA,QAAAK,IAAA9mB,EAAAxC,EAAAhD,GACAwF,EAAAmH,IAAA3J,EAAAhD,GAGA,QAAAusB,OAoBA,QAAAC,IAAAN,EAAApkB,GACA,GAAA6E,GAAA,GAAA4f,GAGA,IAAAL,YAAAK,IAAAL,EAAAzgB,KAAA,SAAAzL,GAA0D2M,EAAA2F,IAAAtS,SAG1D,IAAAksB,EAAA,CACA,GAAAvvB,IAAA,EAAAsP,EAAAigB,EAAApsB,MACA,UAAAgI,EAAA,OAAAnL,EAAAsP,GAAAU,EAAA2F,IAAA4Z,EAAAvvB,QACA,QAAAA,EAAAsP,GAAAU,EAAA2F,IAAAxK,EAAAokB,EAAAvvB,KAAAuvB,IAGA,MAAAvf,GAqBA,QAAA8f,IAAAC,GACA,UAAAC,UAAA,eAAoCD,EAAAlnB,IAAA,SAAAhD,EAAA7F,GACpC,MAAAiwB,MAAAC,UAAArqB,GAAA,OAAA7F,EAAA,MACG2gB,KAAA,UAGH,QAAAwP,IAAAJ,EAAA5kB,GACA,GAAAokB,GAAAO,GAAAC,EACA,iBAAA9lB,EAAAjK,GACA,MAAAmL,GAAAokB,EAAAtlB,GAAAjK,EAAA+vB,IAKA,QAAAK,IAAAC,GACA,GAAAC,GAAArwB,OAAAuZ,OAAA,MACAuW,IAUA,OARAM,GAAAE,QAAA,SAAAtmB,GACA,OAAAumB,KAAAvmB,GACAumB,IAAAF,IACAP,EAAAttB,KAAA6tB,EAAAE,QAKAT,EAgLA,QAAApa,IAAA8a,EAAAxpB,EAAAI,EAAAoC,GACA,GAAAyU,MAAAjX,IAAAiX,MAAA7W,GAAA,MAAAopB,EAEA,IAAA1d,GAOA2d,EACAC,EACAC,EACAC,EACA1oB,EACAC,EACApI,EACAkS,EAbAtN,EAAA6rB,EAAAK,MACAC,GAAc9rB,KAAAwE,GACdunB,EAAAP,EAAA9B,IACAsC,EAAAR,EAAA7B,IACAsC,EAAAT,EAAA5B,IACAsC,EAAAV,EAAA3B,GAWA,KAAAlqB,EAAA,MAAA6rB,GAAAK,MAAAC,EAAAN,CAGA,MAAA7rB,EAAAzB,QAGA,IAFAgF,EAAAlB,IAAAypB,GAAAM,EAAAE,GAAA,IAAAF,EAAAN,EAAmDQ,EAAAR,GACnDtoB,EAAAf,IAAAspB,GAAAM,EAAAE,GAAA,IAAAF,EAAAN,EAAoDQ,EAAAR,EACpD5d,EAAAnO,QAAA5E,EAAAoI,GAAA,EAAAD,IAAA,MAAA4K,GAAA/S,GAAA+wB,EAAAN,CAMA,IAFAG,GAAAH,EAAAW,GAAAxxB,KAAA,KAAAgF,EAAAK,MACA4rB,GAAAJ,EAAAY,GAAAzxB,KAAA,KAAAgF,EAAAK,MACAgC,IAAA2pB,GAAAvpB,IAAAwpB,EAAA,MAAAE,GAAAO,KAAA1sB,EAAAmO,IAAA/S,GAAA+wB,EAAAN,EAAAK,MAAAC,EAAAN,CAGA,GACA1d,OAAA/S,GAAA,GAAA0G,OAAA,GAAA+pB,EAAAK,MAAA,GAAApqB,OAAA,IACAyB,EAAAlB,IAAAypB,GAAAM,EAAAE,GAAA,IAAAF,EAAAN,EAAmDQ,EAAAR,GACnDtoB,EAAAf,IAAAspB,GAAAM,EAAAE,GAAA,IAAAF,EAAAN,EAAoDQ,EAAAR,SACjD3wB,EAAAoI,GAAA,EAAAD,MAAA+J,GAAA2e,GAAAF,IAAA,EAAAC,GAAAF,GACH,OAAA3d,GAAAb,GAAAtN,EAAAmO,EAAA/S,GAAA+wB,EAAAN,EAGA,QAAAc,IAAAtsB,GACA,GAAAwE,GAAAzJ,EACAiH,EACAI,EAFAiI,EAAArK,EAAA9B,OAGAquB,EAAA,GAAA9qB,OAAA4I,GACAmiB,EAAA,GAAA/qB,OAAA4I,GACA0hB,EAAAlO,IACAmO,EAAAnO,IACAoO,IAAApO,KACAqO,IAAArO,IAGA,KAAA9iB,EAAA,EAAaA,EAAAsP,IAAOtP,EACpBke,MAAAjX,GAAAtG,KAAAywB,GAAAxxB,KAAA,KAAA6J,EAAAxE,EAAAjF,MAAAke,MAAA7W,GAAA1G,KAAA0wB,GAAAzxB,KAAA,KAAA6J,MACA+nB,EAAAxxB,GAAAiH,EACAwqB,EAAAzxB,GAAAqH,EACAJ,EAAA+pB,MAAA/pB,GACAA,EAAAiqB,MAAAjqB,GACAI,EAAA4pB,MAAA5pB,GACAA,EAAA8pB,MAAA9pB,GAWA,KAPA6pB,EAAAF,MAAArwB,KAAAguB,IAAAuC,EAAAvwB,KAAAkuB,KACAsC,EAAAF,MAAAtwB,KAAAiuB,IAAAuC,EAAAxwB,KAAAmuB,KAGAnuB,KAAA+wB,MAAAV,EAAAC,GAAAS,MAAAR,EAAAC,GAGAnxB,EAAA,EAAaA,EAAAsP,IAAOtP,EACpB2V,GAAAhV,KAAA6wB,EAAAxxB,GAAAyxB,EAAAzxB,GAAAiF,EAAAjF,GAGA,OAAAW,MAmNA,QAAAgxB,IAAA1sB,GACA,OAAAjF,GAAA,EAAAsP,EAAArK,EAAA9B,OAAkCnD,EAAAsP,IAAOtP,EAAAW,KAAAiO,OAAA3J,EAAAjF,GACzC,OAAAW,MAkDA,QAAAixB,IAAAnoB,GACA,MAAAA,GAAA,GAOA,QAAAooB,IAAApoB,GACA,MAAAA,GAAA,GAOA,QAAAqoB,IAAAC,EAAA9qB,EAAAI,GACA,GAAAopB,GAAA,GAAAuB,IAAA,MAAA/qB,EAAA2qB,GAAA3qB,EAAA,MAAAI,EAAAwqB,GAAAxqB,EAAAwM,gBACA,cAAAke,EAAAtB,IAAAc,OAAAQ,GAGA,QAAAC,IAAA/qB,EAAAI,EAAA2pB,EAAAC,EAAAC,EAAAC,GACAxwB,KAAAywB,GAAAnqB,EACAtG,KAAA0wB,GAAAhqB,EACA1G,KAAAguB,IAAAqC,EACArwB,KAAAiuB,IAAAqC,EACAtwB,KAAAkuB,IAAAqC,EACAvwB,KAAAmuB,IAAAqC,EACAxwB,KAAAmwB,MAAAmB,OAGA,QAAAC,IAAAnB,GAEA,IADA,GAAAnjB,IAAc3I,KAAA8rB,EAAA9rB,MAAgBqsB,EAAA1jB,EAC9BmjB,IAAAO,gBAA+CrsB,KAAA8rB,EAAA9rB,KAC/C,OAAA2I,GA2CA,QAAA3G,IAAAwC,GACA,MAAAA,GAAAxC,EAAAwC,EAAA0oB,GAGA,QAAA9qB,IAAAoC,GACA,MAAAA,GAAApC,EAAAoC,EAAA2oB,GA0FA,QAAAluB,IAAAuF,GACA,MAAAA,GAAAvF,MAGA,QAAAmuB,IAAAC,EAAAC,GACA,GAAA3tB,GAAA0tB,EAAAviB,IAAAwiB,EACA,KAAA3tB,EAAA,SAAA2K,OAAA,YAAAgjB,EACA,OAAA3tB,GA0GA,QAAA4tB,IAAA/oB,GACA,MAAAA,GAAAxC,EAGA,QAAAwrB,IAAAhpB,GACA,MAAAA,GAAApC,EA+aA,QAAAqrB,IAAAC,GACA,UAAAC,IAAAD,GAKA,QAAAC,IAAAD,GACA,KAAAE,EAAAC,GAAAjZ,KAAA8Y,IAAA,SAAApjB,OAAA,mBAAAojB,EAEA,IAAAE,GACAE,EAAAF,EAAA,QACAG,EAAAH,EAAA,QACAI,EAAAJ,EAAA,QACAK,EAAAL,EAAA,OACApU,IAAAoU,EAAA,GACAvqB,EAAAuqB,EAAA,KAAAA,EAAA,GACAM,IAAAN,EAAA,GACAO,EAAAP,EAAA,KAAAA,EAAA,GAAAvyB,MAAA,GACAwP,EAAA+iB,EAAA,MAGA,OAAA/iB,GAAAqjB,GAAA,EAAArjB,EAAA,KAGAujB,GAAAvjB,OAAA,KAGA2O,GAAA,MAAAsU,GAAA,MAAAC,KAAAvU,GAAA,EAAAsU,EAAA,IAAAC,EAAA,KAEAryB,KAAAoyB,OACApyB,KAAAqyB,QACAryB,KAAAsyB,OACAtyB,KAAAuyB,SACAvyB,KAAA8d,OACA9d,KAAA2H,QACA3H,KAAAwyB,QACAxyB,KAAAyyB,YACAzyB,KAAAmP,OAsJA,QAAAwjB,IAAA/Z,GAIA,MAHAga,IAAAC,GAAAja,GACA/Z,EAAA4N,OAAAmmB,GAAAnmB,OACA5N,EAAAi0B,aAAAF,GAAAE,aACAF,GA2BA,QAAAG,MACA/yB,KAAAgzB,QAsBA,QAAAC,IAAAC,EAAArzB,EAAAC,GACA,GAAAwG,GAAA4sB,EAAA5Y,EAAAza,EAAAC,EACAqzB,EAAA7sB,EAAAzG,EACAuzB,EAAA9sB,EAAA6sB,CACAD,GAAAxkB,EAAA7O,EAAAuzB,GAAAtzB,EAAAqzB,GA2BA,QAAAE,IAAA/sB,GACA,MAAAA,GAAA,IAAAA,GAAA,EAAAgtB,GAAArsB,KAAAosB,KAAA/sB,GAGA,QAAAitB,IAAAjtB,GACA,MAAAA,GAAA,EAAAktB,GAAAltB,GAAA,GAAAktB,GAAAvsB,KAAAssB,KAAAjtB,GAGA,QAAAmtB,IAAAntB,GACA,OAAAA,EAAAotB,GAAAptB,EAAA,IAAAA,EAGA,QAAAqtB,OAEA,QAAAC,IAAAC,EAAAC,GACAD,GAAAE,GAAAv0B,eAAAq0B,EAAA1kB,OACA4kB,GAAAF,EAAA1kB,MAAA0kB,EAAAC,GA8CA,QAAAE,IAAAC,EAAAH,EAAAI,GACA,GAAAC,GAAA90B,GAAA,EAAAsP,EAAAslB,EAAAzxB,OAAA0xB,CAEA,KADAJ,EAAAM,cACA/0B,EAAAsP,GAAAwlB,EAAAF,EAAA50B,GAAAy0B,EAAAnJ,MAAAwJ,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAL,GAAAO,UAGA,QAAAC,IAAAL,EAAAH,GACA,GAAAz0B,IAAA,EAAAsP,EAAAslB,EAAAzxB,MAEA,KADAsxB,EAAAS,iBACAl1B,EAAAsP,GAAAqlB,GAAAC,EAAA50B,GAAAy0B,EAAA,EACAA,GAAAU,aAuCA,QAAAC,MACAC,GAAA/J,MAAAgK,GAGA,QAAAC,MACAC,GAAAC,GAAAC,IAGA,QAAAJ,IAAAK,EAAAC,GACAP,GAAA/J,MAAAkK,GACAC,GAAAE,EAAAD,GAAAE,EACAD,GAAAE,GAAAD,GAAAC,GACAC,GAAAH,EAAAI,GAAAC,GAAAJ,IAAA,EAAAK,IAAAC,GAAA7B,GAAAuB,GAGA,QAAAJ,IAAAG,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,GACAD,IAAA,EAAAK,EAKA,IAAAE,GAAAR,EAAAG,GACAM,EAAAD,GAAA,OACAE,EAAAD,EAAAD,EACAG,EAAAN,GAAAJ,GACAW,EAAAlC,GAAAuB,GACAvnB,EAAA6nB,GAAAK,EACAC,EAAAT,GAAAO,EAAAjoB,EAAA2nB,GAAAK,GACA9hB,EAAAlG,EAAA+nB,EAAA/B,GAAAgC,EACAI,IAAA9gB,IAAAiH,GAAArI,EAAAiiB,IAGAV,GAAAH,EAAAI,GAAAO,EAAAJ,GAAAK,EASA,QAAAG,IAAAC,GACA,OAAA/Z,GAAA+Z,EAAA,GAAAA,EAAA,IAAAzC,GAAAyC,EAAA,KAGA,QAAAA,IAAAD,GACA,GAAAf,GAAAe,EAAA,GAAAd,EAAAc,EAAA,GAAAJ,EAAAN,GAAAJ,EACA,QAAAU,EAAAN,GAAAL,GAAAW,EAAAjC,GAAAsB,GAAAtB,GAAAuB,IAGA,QAAAgB,IAAAp2B,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAGA,QAAAo2B,IAAAr2B,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAIA,QAAAq2B,IAAAt2B,EAAAC,GACAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAGA,QAAAs2B,IAAAC,EAAA3oB,GACA,OAAA2oB,EAAA,GAAA3oB,EAAA2oB,EAAA,GAAA3oB,EAAA2oB,EAAA,GAAA3oB,GAIA,QAAA4oB,IAAAxtB,GACA,GAAAyR,GAAA4B,GAAArT,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,GAAA,IAAAyR,EAAAzR,EAAA,IAAAyR,EAAAzR,EAAA,IAAAyR,EAsCA,QAAAgc,IAAAvB,EAAAC,GACAuB,GAAA10B,KAAAmG,IAAAwuB,GAAAzB,EAAA0B,GAAA1B,IACAC,EAAA0B,QAAA1B,GACAA,EAAA2B,QAAA3B,GAGA,QAAA4B,IAAA7B,EAAAC,GACA,GAAA71B,GAAA42B,IAAAhB,EAAAE,GAAAD,EAAAC,IACA,IAAA4B,GAAA,CACA,GAAAC,GAAAb,GAAAY,GAAA13B,GACA43B,GAAAD,EAAA,IAAAA,EAAA,MACAE,EAAAf,GAAAc,EAAAD,EACAT,IAAAW,GACAA,EAAAlB,GAAAkB,EACA,IAGAC,GAHAC,EAAAnC,EAAAoC,GACAC,EAAAF,EAAA,OACAG,EAAAL,EAAA,GAAAM,GAAAF,EAEAG,EAAAxsB,GAAAmsB,GAAA,GACAK,IAAAH,EAAAD,GAAAE,KAAAD,EAAArC,IACAkC,EAAAD,EAAA,GAAAM,GACAL,EAAAN,QAAAM,KACKI,KAAA,aAAAE,GAAAH,EAAAD,GAAAE,KAAAD,EAAArC,IACLkC,GAAAD,EAAA,GAAAM,GACAL,EAAAP,QAAAO,KAEAjC,EAAA0B,QAAA1B,GACAA,EAAA2B,QAAA3B,KAEAuC,EACAxC,EAAAoC,GACAK,GAAAhB,GAAAzB,GAAAyC,GAAAhB,GAAAC,SAAA1B,GAEAyC,GAAAzC,EAAA0B,IAAAe,GAAAhB,GAAAC,MAAAD,GAAAzB,GAGA0B,IAAAD,IACAzB,EAAAyB,QAAAzB,GACAA,EAAA0B,QAAA1B,IAEAA,EAAAoC,GACAK,GAAAhB,GAAAzB,GAAAyC,GAAAhB,GAAAC,SAAA1B,GAEAyC,GAAAzC,EAAA0B,IAAAe,GAAAhB,GAAAC,MAAAD,GAAAzB,OAKAwB,IAAA10B,KAAAmG,IAAAwuB,GAAAzB,EAAA0B,GAAA1B,GAEAC,GAAA0B,QAAA1B,GACAA,EAAA2B,QAAA3B,GACA6B,GAAA13B,EAAAg4B,GAAApC,EAGA,QAAA0C,MACAC,GAAAhN,MAAAkM,GAGA,QAAAe,MACA3vB,GAAA,GAAAwuB,GAAAxuB,GAAA,GAAAyuB,GACAiB,GAAAhN,MAAA4L,GACAO,GAAA,KAGA,QAAAe,IAAA7C,EAAAC,GACA,GAAA6B,GAAA,CACA,GAAAK,GAAAnC,EAAAoC,EACAU,IAAA9iB,IAAAhK,GAAAmsB,GAAA,IAAAA,KAAA,YAAAA,OAEAY,IAAA/C,EAAAgD,GAAA/C,CAEAP,IAAA/J,MAAAqK,EAAAC,GACA4B,GAAA7B,EAAAC,GAGA,QAAAgD,MACAvD,GAAAN,YAGA,QAAA8D,MACAL,GAAAE,GAAAC,IACAtD,GAAAL,UACArpB,GAAA8sB,IAAAK,KAAA1B,KAAAC,GAAA,MACAzuB,GAAA,GAAAwuB,GAAAxuB,GAAA,GAAAyuB,GACAI,GAAA,KAMA,QAAAW,IAAAtC,EAAAuB,GACA,OAAAA,GAAAvB,GAAA,EAAAuB,EAAA,IAAAA,EAGA,QAAA0B,IAAAv4B,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAGA,QAAAu4B,IAAApwB,EAAA3B,GACA,MAAA2B,GAAA,IAAAA,EAAA,GAAAA,EAAA,IAAA3B,MAAA2B,EAAA,GAAA3B,EAAA2B,EAAA,IAAAA,EAAA,GAAA3B,EAyEA,QAAAgyB,IAAAtD,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,EACAsD,IAAA5C,EAAAN,GAAAL,GAAAW,EAAAjC,GAAAsB,GAAAtB,GAAAuB,IAGA,QAAAsD,IAAAjyB,EAAAI,EAAA6U,KACAid,GACAC,KAAAnyB,EAAAmyB,IAAAD,GACAE,KAAAhyB,EAAAgyB,IAAAF,GACAG,KAAApd,EAAAod,IAAAH,GAGA,QAAAI,MACAC,GAAAlO,MAAAmO,GAGA,QAAAA,IAAA9D,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,EACA5E,IAAAsF,EAAAN,GAAAL,GACA1E,GAAAqF,EAAAjC,GAAAsB,GACA+D,GAAArF,GAAAuB,GACA4D,GAAAlO,MAAAqO,GACAT,GAAAlI,GAAAC,GAAAyI,IAGA,QAAAC,IAAAhE,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,GACA3uB,EAAAqvB,EAAAN,GAAAL,GACAtuB,EAAAivB,EAAAjC,GAAAsB,GACAzZ,EAAAmY,GAAAuB,GACAgE,EAAAhd,GAAAE,IAAA8c,EAAA3I,GAAA/U,EAAAwd,GAAAryB,GAAAuyB,KAAAF,GAAAzyB,EAAA+pB,GAAA9U,GAAA0d,KAAA5I,GAAA3pB,EAAA4pB,GAAAhqB,GAAA2yB,GAAA5I,GAAA/pB,EAAAgqB,GAAA5pB,EAAAqyB,GAAAxd,EACA2d,KAAAD,EACAE,IAAAF,GAAA5I,OAAA/pB,IACA8yB,IAAAH,GAAA3I,OAAA5pB,IACA2yB,IAAAJ,GAAAF,OAAAxd,IACAgd,GAAAlI,GAAAC,GAAAyI,IAGA,QAAAO,MACAT,GAAAlO,MAAA2N,GAKA,QAAAiB,MACAV,GAAAlO,MAAA6O,GAGA,QAAAC,MACAC,GAAAC,GAAAC,IACAf,GAAAlO,MAAA2N,GAGA,QAAAkB,IAAAxE,EAAAC,GACA0E,GAAA3E,EAAA4E,GAAA3E,EACAD,GAAAE,GAAAD,GAAAC,GACA2D,GAAAlO,MAAA+O,EACA,IAAA/D,GAAAN,GAAAJ,EACA5E,IAAAsF,EAAAN,GAAAL,GACA1E,GAAAqF,EAAAjC,GAAAsB,GACA+D,GAAArF,GAAAuB,GACAsD,GAAAlI,GAAAC,GAAAyI,IAGA,QAAAW,IAAA1E,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,GACA3uB,EAAAqvB,EAAAN,GAAAL,GACAtuB,EAAAivB,EAAAjC,GAAAsB,GACAzZ,EAAAmY,GAAAuB,GACA4E,EAAAvJ,GAAA/U,EAAAwd,GAAAryB,EACAozB,EAAAf,GAAAzyB,EAAA+pB,GAAA9U,EACAwe,EAAA1J,GAAA3pB,EAAA4pB,GAAAhqB,EACApH,EAAAid,GAAA0d,IAAAC,IAAAC,KACAd,EAAA1F,GAAAr0B,GACA0U,EAAA1U,IAAA+5B,EAAA/5B,CACA86B,KAAApmB,EAAAimB,EACAI,IAAArmB,EAAAkmB,EACAI,IAAAtmB,EAAAmmB,EACAb,IAAAD,EACAE,IAAAF,GAAA5I,OAAA/pB,IACA8yB,IAAAH,GAAA3I,OAAA5pB,IACA2yB,IAAAJ,GAAAF,OAAAxd,IACAgd,GAAAlI,GAAAC,GAAAyI,IA+CA,QAAAoB,IAAAnF,EAAAC,GACA,OAAAD,EAAA1B,GAAA0B,EAAAoF,GAAApF,GAAA1B,GAAA0B,EAAAoF,GAAApF,EAAAC,GAKA,QAAAoF,IAAAC,EAAAC,EAAAC,GACA,OAAAF,GAAAF,IAAAG,GAAAC,EAAAC,GAAAC,GAAAJ,GAAAK,GAAAJ,EAAAC,IACAE,GAAAJ,GACAC,GAAAC,EAAAG,GAAAJ,EAAAC,GACAL,GAGA,QAAAS,IAAAN,GACA,gBAAAtF,EAAAC,GACA,MAAAD,IAAAsF,GAAAtF,EAAA1B,GAAA0B,EAAAoF,GAAApF,GAAA1B,GAAA0B,EAAAoF,GAAApF,EAAAC,IAIA,QAAAyF,IAAAJ,GACA,GAAAO,GAAAD,GAAAN,EAEA,OADAO,GAAAC,OAAAF,IAAAN,GACAO,EAGA,QAAAF,IAAAJ,EAAAC,GAMA,QAAAK,GAAA7F,EAAAC,GACA,GAAAU,GAAAN,GAAAJ,GACA3uB,EAAA+uB,GAAAL,GAAAW,EACAjvB,EAAAgtB,GAAAsB,GAAAW,EACApa,EAAAmY,GAAAuB,GACAvnB,EAAA6N,EAAAwf,EAAAz0B,EAAA00B,CACA,QACA/e,GAAAvV,EAAAu0B,EAAAvtB,EAAAwtB,EAAA50B,EAAAy0B,EAAAxf,EAAAyf,GACAzH,GAAA7lB,EAAAutB,EAAAv0B,EAAAw0B,IAbA,GAAAH,GAAA1F,GAAAkF,GACAS,EAAAtH,GAAA6G,GACAU,EAAA5F,GAAAmF,GACAU,EAAAxH,GAAA8G,EA0BA,OAZAK,GAAAC,OAAA,SAAA9F,EAAAC,GACA,GAAAU,GAAAN,GAAAJ,GACA3uB,EAAA+uB,GAAAL,GAAAW,EACAjvB,EAAAgtB,GAAAsB,GAAAW,EACApa,EAAAmY,GAAAuB,GACAvnB,EAAA6N,EAAA0f,EAAAv0B,EAAAw0B,CACA,QACAjf,GAAAvV,EAAAu0B,EAAA1f,EAAA2f,EAAA50B,EAAAy0B,EAAArtB,EAAAstB,GACAzH,GAAA7lB,EAAAqtB,EAAAz0B,EAAA00B,KAIAH,EAoBA,QAAAM,IAAArH,EAAAvF,EAAA4I,EAAAiE,EAAAxf,EAAAE,GACA,GAAAqb,EAAA,CACA,GAAAkE,GAAAhG,GAAA9G,GACA+M,EAAA5H,GAAAnF,GACAgN,EAAAH,EAAAjE,CACA,OAAAvb,GACAA,EAAA2S,EAAA6M,EAAAhB,GACAte,EAAAyS,EAAAgN,EAAA,IAEA3f,EAAA4f,GAAAH,EAAAzf,GACAE,EAAA0f,GAAAH,EAAAvf,IACAsf,EAAA,EAAAxf,EAAAE,EAAAF,EAAAE,KAAAF,GAAAwf,EAAAhB,IAEA,QAAAzP,GAAAjc,EAAAkN,EAAyBwf,EAAA,EAAA1sB,EAAAoN,EAAApN,EAAAoN,EAAiCpN,GAAA6sB,EAC1D5Q,EAAAoL,IAAAsF,GAAAC,EAAAjG,GAAA3mB,IAAA4sB,EAAA5H,GAAAhlB,KACAolB,EAAAnJ,QAAA,GAAAA,EAAA,KAKA,QAAA6Q,IAAAH,EAAA1Q,GACAA,EAAAqL,GAAArL,KAAA,IAAA0Q,EACA/E,GAAA3L,EACA,IAAA4D,GAAA8E,IAAA1I,EAAA,GACA,UAAAA,EAAA,MAAA4D,KAAA6L,GAAAjC,IAAAiC,GAkIA,QAAAqB,IAAA9Q,EAAA+Q,EAAAC,EAAAC,GACA57B,KAAAsG,EAAAqkB,EACA3qB,KAAAub,EAAAmgB,EACA17B,KAAAsR,EAAAqqB,EACA37B,KAAA8e,EAAA8c,EACA57B,KAAA4T,GAAA,EACA5T,KAAA2O,EAAA3O,KAAAZ,EAAA,KA+EA,QAAAy8B,IAAAC,GACA,GAAAntB,EAAAmtB,EAAAt5B,OAAA,CAKA,IAJA,GAAAmM,GAGA7O,EAFAT,EAAA,EACAQ,EAAAi8B,EAAA,KAEAz8B,EAAAsP,GACA9O,EAAA8O,EAAA7O,EAAAg8B,EAAAz8B,GACAS,EAAAV,EAAAS,EACAA,EAAAC,CAEAD,GAAA8O,EAAA7O,EAAAg8B,EAAA,GACAh8B,EAAAV,EAAAS,GASA,QAAAk8B,IAAA1L,EAAAC,EAAAC,EAAAC,GAEA,QAAAwL,GAAA11B,EAAAI,GACA,MAAA2pB,IAAA/pB,MAAAiqB,GAAAD,GAAA5pB,MAAA8pB,EAGA,QAAAyL,GAAA/1B,EAAAg2B,EAAAd,EAAAtH,GACA,GAAAj0B,GAAA,EAAAs8B,EAAA,CACA,UAAAj2B,IACArG,EAAAu8B,EAAAl2B,EAAAk1B,OAAAe,EAAAC,EAAAF,EAAAd,KACAiB,EAAAn2B,EAAAg2B,GAAA,EAAAd,EAAA,GACA,EAAAtH,GAAAnJ,MAAA,IAAA9qB,GAAA,IAAAA,EAAAwwB,EAAAE,EAAA1wB,EAAA,EAAA2wB,EAAAF,UACAzwB,KAAAu7B,EAAA,QAAAe,OAEArI,GAAAnJ,MAAAuR,EAAA,GAAAA,EAAA,IAIA,QAAAE,GAAAh9B,EAAAg8B,GACA,MAAApwB,IAAA5L,EAAA,GAAAixB,GAAA8H,GAAAiD,EAAA,MACApwB,GAAA5L,EAAA,GAAAmxB,GAAA4H,GAAAiD,EAAA,MACApwB,GAAA5L,EAAA,GAAAkxB,GAAA6H,GAAAiD,EAAA,MACAA,EAAA,MAGA,QAAAkB,GAAAz8B,EAAAC,GACA,MAAAu8B,GAAAx8B,EAAAyG,EAAAxG,EAAAwG,GAGA,QAAA+1B,GAAAx8B,EAAAC,GACA,GAAAy8B,GAAAH,EAAAv8B,EAAA,GACAoC,EAAAm6B,EAAAt8B,EAAA,EACA,OAAAy8B,KAAAt6B,EAAAs6B,EAAAt6B,EACA,IAAAs6B,EAAAz8B,EAAA,GAAAD,EAAA,GACA,IAAA08B,EAAA18B,EAAA,GAAAC,EAAA,GACA,IAAAy8B,EAAA18B,EAAA,GAAAC,EAAA,GACAA,EAAA,GAAAD,EAAA,GAGA,gBAAAi0B,GAmBA,QAAAnJ,GAAArkB,EAAAI,GACAs1B,EAAA11B,EAAAI,IAAA81B,EAAA7R,MAAArkB,EAAAI,GAGA,QAAA+1B,KAGA,OAFAC,GAAA,EAEAr9B,EAAA,EAAAsP,EAAAguB,EAAAn6B,OAAyCnD,EAAAsP,IAAOtP,EAChD,OAAAu9B,GAAAT,EAAAU,EAAAF,EAAAt9B,GAAAkS,EAAA,EAAArS,EAAA29B,EAAAr6B,OAAAmoB,EAAAkS,EAAA,GAAAjV,EAAA+C,EAAA,GAAAhD,EAAAgD,EAAA,GAAkHpZ,EAAArS,IAAOqS,EACzHqrB,EAAAhV,EAAAuU,EAAAxU,EAAAgD,EAAAkS,EAAAtrB,GAAAqW,EAAA+C,EAAA,GAAAhD,EAAAgD,EAAA,GACAwR,GAAA3L,EAAyB7I,EAAA6I,IAAA5I,EAAAgV,IAAApM,EAAA2L,IAAAxU,EAAAwU,IAAA9L,EAAAuM,MAAAF,EACT/U,GAAA6I,IAAA5I,EAAAgV,IAAApM,EAAA2L,IAAAxU,EAAAwU,IAAA9L,EAAAuM,MAAAF,CAIhB,OAAAA,GAIA,QAAAnI,KACAiI,EAAAM,EAAAC,KAAAJ,KAAAK,GAAA,EAGA,QAAAxI,KACA,GAAAyI,GAAAR,IACAS,EAAAF,GAAAC,EACAjB,GAAAe,EAAAvvB,GAAAuvB,IAAAv6B,QACA06B,GAAAlB,KACAlI,EAAAS,eACA2I,IACApJ,EAAAM,YACA6H,EAAA,YAAAnI,GACAA,EAAAO,WAEA2H,GACAmB,GAAAJ,EAAAT,EAAAW,EAAAhB,EAAAnI,GAEAA,EAAAU,cAEAgI,EAAA1I,EAAAiJ,EAAAJ,EAAAE,EAAA,KAGA,QAAAzI,KACAgJ,EAAAzS,MAAAkM,EACA8F,KAAA76B,KAAA+6B,MACAQ,GAAA,EACAC,GAAA,EACAC,EAAAC,EAAAtqB,IAMA,QAAAmhB,KACA0I,IACAlG,EAAA4G,EAAAC,GACAC,GAAAL,GAAAR,EAAAc,SACAb,EAAAj7B,KAAAg7B,EAAAe,WAEAT,EAAAzS,QACA2S,GAAAd,EAAAnI,UAGA,QAAAwC,GAAAvwB,EAAAI,GACA,GAAAkN,GAAAooB,EAAA11B,EAAAI,EAEA,IADAi2B,GAAAE,EAAA/6B,MAAAwE,EAAAI,IACA22B,EACAI,EAAAn3B,EAAAo3B,EAAAh3B,EAAAi3B,EAAA/pB,EACAypB,GAAA,EACAzpB,IACA4oB,EAAApI,YACAoI,EAAA7R,MAAArkB,EAAAI,QAGA,IAAAkN,GAAA0pB,EAAAd,EAAA7R,MAAArkB,EAAAI,OACA,CACA,GAAA7G,IAAA09B,EAAAt2B,KAAAgE,IAAA6yB,GAAA72B,KAAAG,IAAA22B,GAAAR,IAAAC,EAAAv2B,KAAAgE,IAAA6yB,GAAA72B,KAAAG,IAAA22B,GAAAP,KACA19B,GAAAwG,EAAAW,KAAAgE,IAAA6yB,GAAA72B,KAAAG,IAAA22B,GAAAz3B,IAAAI,EAAAO,KAAAgE,IAAA6yB,GAAA72B,KAAAG,IAAA22B,GAAAr3B,IACAs3B,IAAAn+B,EAAAC,EAAAuwB,EAAAC,EAAAC,EAAAC,IACA8M,IACAd,EAAApI,YACAoI,EAAA7R,MAAA9qB,EAAA,GAAAA,EAAA,KAEA28B,EAAA7R,MAAA7qB,EAAA,GAAAA,EAAA,IACA8T,GAAA4oB,EAAAnI,UACA2I,GAAA,GACWppB,IACX4oB,EAAApI,YACAoI,EAAA7R,MAAArkB,EAAAI,GACAs2B,GAAA,GAIAO,EAAAj3B,EAAAk3B,EAAA92B,EAAA42B,EAAA1pB,EA/GA,GAEAmpB,GACAJ,EACAE,EACAY,EAAAC,EAAAC,EACAJ,EAAAC,EAAAF,EACAD,EACAL,EARAR,EAAA1I,EACAgJ,EAAAmB,KASAb,GACAzS,QACAyJ,YACAC,UACAE,eACAC,aAmGA,OAAA4I,IAsGA,QAAAc,MACAC,GAAAxT,MAAAyT,GACAD,GAAA9J,QAAAgK,GAGA,QAAAA,MACAF,GAAAxT,MAAAwT,GAAA9J,QAAAV,GAGA,QAAAyK,IAAApJ,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,GACAoJ,GAAAtJ,EAAAuJ,GAAA7K,GAAAuB,GAAAuJ,GAAAnJ,GAAAJ,GACAkJ,GAAAxT,MAAA8T,GAGA,QAAAA,IAAAzJ,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAU,GAAAlC,GAAAuB,GACAU,EAAAN,GAAAJ,GACAkC,EAAAnsB,GAAAgqB,EAAAsJ,IACAI,EAAArJ,GAAA8B,GACAwH,EAAAjL,GAAAyD,GACA7wB,EAAAqvB,EAAAgJ,EACAj4B,EAAA83B,GAAA5I,EAAA2I,GAAA5I,EAAA+I,EACAnjB,EAAAgjB,GAAA3I,EAAA4I,GAAA7I,EAAA+I,CACAE,IAAA5pB,IAAAiH,GAAAE,GAAA7V,IAAAI,KAAA6U,IACA+iB,GAAAtJ,EAAAuJ,GAAA3I,EAAA4I,GAAA7I,EAgEA,QAAAkJ,IAAAhL,EAAAlJ,GACA,SAAAkJ,IAAAiL,GAAAt/B,eAAAq0B,EAAA1kB,QACA2vB,GAAAjL,EAAA1kB,MAAA0kB,EAAAlJ,GAIA,QAAAoU,IAAA9K,EAAAtJ,GACA,WAAAqU,GAAA/K,EAAAtJ,GAGA,QAAAsU,IAAAhL,EAAAtJ,GACA,GAAAuU,GAAAF,GAAA/K,EAAA,GAAAA,EAAA,IACAkL,EAAAH,GAAA/K,EAAA,GAAAtJ,GACAyU,EAAAJ,GAAArU,EAAAsJ,EAAA,GACA,OAAAkL,GAAAC,GAAAF,EAAA/G,GAGA,QAAAkH,IAAApL,EAAAtJ,GACA,QAAA2U,GAAArL,EAAA/rB,IAAAq3B,IAAAC,GAAA7U,IAGA,QAAA4U,IAAA1C,GACA,MAAAA,KAAA30B,IAAAs3B,IAAA3C,EAAAzd,MAAAyd,EAGA,QAAA2C,IAAA7U,GACA,OAAAA,EAAA,GAAAuK,GAAAvK,EAAA,GAAAuK,IASA,QAAAuK,IAAAnP,EAAAE,EAAAnY,GACA,GAAA3R,GAAAg5B,GAAApP,EAAAE,EAAA2H,GAAA9f,GAAApY,OAAAuwB,EACA,iBAAAlqB,GAAsB,MAAAI,GAAAwB,IAAA,SAAAxB,GAA2B,OAAAJ,EAAAI,MAGjD,QAAAi5B,IAAAtP,EAAAE,EAAAnY,GACA,GAAA9R,GAAAo5B,GAAArP,EAAAE,EAAA4H,GAAA/f,GAAAnY,OAAAswB,EACA,iBAAA7pB,GAAsB,MAAAJ,GAAA4B,IAAA,SAAA5B,GAA2B,OAAAA,EAAAI,MAGjD,QAAAk5B,MAOA,QAAAA,KACA,OAAYzwB,KAAA,kBAAA8kB,YAAA4L,KAGZ,QAAAA,KACA,MAAAH,IAAAI,GAAArH,EAAAsH,KAAA5G,EAAA4G,GAAA73B,IAAAqhB,GACAtpB,OAAAy/B,GAAAI,GAAApH,EAAAsH,KAAA5G,EAAA4G,GAAA93B,IAAAuhB,IACAxpB,OAAAy/B,GAAAI,GAAAzP,EAAAjY,KAAAmY,EAAAnY,GAAApP,OAAA,SAAA1C,GAAyE,MAAA0E,IAAA1E,EAAAy5B,GAAA5H,KAAkCjwB,IAAA5B,IAC3GrG,OAAAy/B,GAAAI,GAAAxP,EAAAjY,KAAAmY,EAAAnY,GAAArP,OAAA,SAAAtC,GAAyE,MAAAsE,IAAAtE,EAAAs5B,GAAA7H,KAAkCjwB,IAAAxB,IAd3G,GAAA6pB,GAAAF,EAAA8I,EAAAV,EACAjI,EAAAF,EAAA8I,EAAAV,EAEApyB,EAAAI,EAAA6iB,EAAAE,EADArR,EAAA,GAAAC,EAAAD,EAAA2nB,EAAA,GAAAC,EAAA,IAEAvN,EAAA,GA+EA,OAlEAmN,GAAAC,MAAA,WACA,MAAAA,KAAA33B,IAAA,SAAA+rB,GAA8C,OAAS9kB,KAAA,aAAA8kB,kBAGvD2L,EAAAK,QAAA,WACA,OACA9wB,KAAA,UACA8kB,aACA1K,EAAAkP,GAAAx4B,OACAwpB,EAAA2P,GAAAz5B,MAAA,GACA4pB,EAAA4P,GAAA+G,UAAAvgC,MAAA,GACA8pB,EAAAiP,GAAAwH,UAAAvgC,MAAA,OAKAigC,EAAA3W,OAAA,SAAA7a,GACA,MAAAC,WAAA7L,OACAo9B,EAAAO,YAAA/xB,GAAAgyB,YAAAhyB,GADAwxB,EAAAQ,eAIAR,EAAAO,YAAA,SAAA/xB,GACA,MAAAC,WAAA7L,QACAi2B,GAAArqB,EAAA,MAAA+qB,GAAA/qB,EAAA,MACAsqB,GAAAtqB,EAAA,MAAAgrB,GAAAhrB,EAAA,MACAqqB,EAAAU,IAAA/qB,EAAAqqB,IAAAU,IAAA/qB,GACAsqB,EAAAU,IAAAhrB,EAAAsqB,IAAAU,IAAAhrB,GACAwxB,EAAAnN,gBALAgG,EAAAC,IAAAS,EAAAC,KAQAwG,EAAAQ,YAAA,SAAAhyB,GACA,MAAAC,WAAA7L,QACA6tB,GAAAjiB,EAAA,MAAAmiB,GAAAniB,EAAA,MACAkiB,GAAAliB,EAAA,MAAAoiB,GAAApiB,EAAA,MACAiiB,EAAAE,IAAAniB,EAAAiiB,IAAAE,IAAAniB,GACAkiB,EAAAE,IAAApiB,EAAAkiB,IAAAE,IAAApiB,GACAwxB,EAAAnN,gBALApC,EAAAC,IAAAC,EAAAC,KAQAoP,EAAArE,KAAA,SAAAntB,GACA,MAAAC,WAAA7L,OACAo9B,EAAAS,UAAAjyB,GAAAkyB,UAAAlyB,GADAwxB,EAAAU,aAIAV,EAAAS,UAAA,SAAAjyB,GACA,MAAAC,WAAA7L,QACAu9B,GAAA3xB,EAAA,GAAA4xB,GAAA5xB,EAAA,GACAwxB,IAFAG,EAAAC,IAKAJ,EAAAU,UAAA,SAAAlyB,GACA,MAAAC,WAAA7L,QACA4V,GAAAhK,EAAA,GAAAiK,GAAAjK,EAAA,GACAwxB,IAFAxnB,EAAAC,IAKAunB,EAAAnN,UAAA,SAAArkB,GACA,MAAAC,WAAA7L,QACAiwB,GAAArkB,EACA9H,EAAAm5B,GAAAnP,EAAAE,EAAA,IACA9pB,EAAAi5B,GAAAtP,EAAAE,EAAAkC,GACAlJ,EAAAkW,GAAA/G,EAAAU,EAAA,IACA3P,EAAAkW,GAAAlH,EAAAU,EAAA1G,GACAmN,GANAnN,GASAmN,EACAO,eAAA,QAAAhI,KAAA,OAAAA,MACAiI,eAAA,QAAAjI,KAAA,OAAAA,MAGA,QAAAoI,MACA,MAAAX,QAqEA,QAAAY,MACAC,GAAA9V,MAAA+V,GAGA,QAAAA,IAAAp6B,EAAAI,GACA+5B,GAAA9V,MAAAgW,GACAC,GAAAC,GAAAv6B,EAAAw6B,GAAAC,GAAAr6B,EAGA,QAAAi6B,IAAAr6B,EAAAI,GACAs6B,GAAAhsB,IAAA+rB,GAAAz6B,EAAAu6B,GAAAn6B,GACAm6B,GAAAv6B,EAAAy6B,GAAAr6B,EAGA,QAAAu6B,MACAN,GAAAC,GAAAE,IAqBA,QAAAI,IAAA56B,EAAAI,GACAJ,EAAA66B,QAAA76B,GACAA,EAAAiqB,QAAAjqB,GACAI,EAAA06B,QAAA16B,GACAA,EAAA8pB,QAAA9pB,GA4CA,QAAA26B,IAAA/6B,EAAAI,GACA46B,IAAAh7B,EACAi7B,IAAA76B,IACA86B,GAGA,QAAAC,MACAC,GAAA/W,MAAAgX,GAGA,QAAAA,IAAAr7B,EAAAI,GACAg7B,GAAA/W,MAAAiX,GACAP,GAAAQ,GAAAv7B,EAAAw7B,GAAAp7B,GAGA,QAAAk7B,IAAAt7B,EAAAI,GACA,GAAA0R,GAAA9R,EAAAu7B,GAAAxpB,EAAA3R,EAAAo7B,GAAAvmB,EAAAY,GAAA/D,IAAAC,IACA0pB,KAAAxmB,GAAAsmB,GAAAv7B,GAAA,EACA07B,IAAAzmB,GAAAumB,GAAAp7B,GAAA,EACAu7B,IAAA1mB,EACA8lB,GAAAQ,GAAAv7B,EAAAw7B,GAAAp7B,GAGA,QAAAw7B,MACAR,GAAA/W,MAAA0W,GAGA,QAAAc,MACAT,GAAA/W,MAAAyX,GAGA,QAAAC,MACAC,GAAAC,GAAAC,IAGA,QAAAJ,IAAA97B,EAAAI,GACAg7B,GAAA/W,MAAA2X,GACAjB,GAAAkB,GAAAV,GAAAv7B,EAAAk8B,GAAAV,GAAAp7B,GAGA,QAAA47B,IAAAh8B,EAAAI,GACA,GAAA0R,GAAA9R,EAAAu7B,GACAxpB,EAAA3R,EAAAo7B,GACAvmB,EAAAY,GAAA/D,IAAAC,IAEA0pB,KAAAxmB,GAAAsmB,GAAAv7B,GAAA,EACA07B,IAAAzmB,GAAAumB,GAAAp7B,GAAA,EACAu7B,IAAA1mB,EAEAA,EAAAumB,GAAAx7B,EAAAu7B,GAAAn7B,EACA+7B,IAAAlnB,GAAAsmB,GAAAv7B,GACAo8B,IAAAnnB,GAAAumB,GAAAp7B,GACAi8B,IAAA,EAAApnB,EACA8lB,GAAAQ,GAAAv7B,EAAAw7B,GAAAp7B,GAGA,QAAAk8B,IAAAv2B,GACArM,KAAA6iC,SAAAx2B,EAuEA,QAAAy2B,IAAAx8B,EAAAI,GACAq8B,GAAApY,MAAAqY,GACAC,GAAAC,GAAA58B,EAAA68B,GAAAC,GAAA18B,EAGA,QAAAs8B,IAAA18B,EAAAI,GACAw8B,IAAA58B,EAAA88B,IAAA18B,EACA28B,GAAAruB,IAAAmH,GAAA+mB,MAAAE,QACAF,GAAA58B,EAAA88B,GAAA18B,EAGA,QAAA48B,MACAtjC,KAAAujC,WA+CA,QAAAC,IAAAjV,GACA,YAAAA,EACA,IAAAA,EAAA,IAAAA,EAAA,eAAAA,EACA,IAAAA,EAAA,IAAAA,EAAA,cAAAA,EACA,IA+KA,QAAAkV,IAAAC,GACA,MAAAA,GAAAlhC,OAAA,EAKA,QAAA85B,IAAAz8B,EAAAC,GACA,QAAAD,IAAAyG,GAAA,KAAAzG,EAAA,GAAA2zB,GAAA2E,GAAA3E,GAAA3zB,EAAA,MACAC,IAAAwG,GAAA,KAAAxG,EAAA,GAAA0zB,GAAA2E,GAAA3E,GAAA1zB,EAAA,IAaA,QAAA6jC,IAAA7P,GACA,GAGAkJ,GAHA7H,EAAAjiB,IACAyjB,EAAAzjB,IACA0wB,EAAA1wB,GAGA,QACAkhB,UAAA,WACAN,EAAAM,YACA4I,EAAA,GAEArS,MAAA,SAAA+L,EAAAE,GACA,GAAAiN,GAAAnN,EAAA,EAAApD,OACA6D,EAAAnsB,GAAA0rB,EAAAvB,EACAnqB,IAAAmsB,EAAA7D,IAAA6E,IACArE,EAAAnJ,MAAAwK,EAAAwB,KAAAC,GAAA,IAAApD,QACAM,EAAAnJ,MAAAiZ,EAAAjN,GACA7C,EAAAO,UACAP,EAAAM,YACAN,EAAAnJ,MAAAkZ,EAAAlN,GACA7C,EAAAnJ,MAAA+L,EAAAC,GACAqG,EAAA,GACO4G,IAAAC,GAAA1M,GAAA7D,KACPtoB,GAAAmqB,EAAAyO,GAAAzL,KAAAhD,GAAAyO,EAAAzL,IACAntB,GAAA0rB,EAAAmN,GAAA1L,KAAAzB,GAAAmN,EAAA1L,IACAxB,EAAAmN,GAAA3O,EAAAwB,EAAAD,EAAAE,GACA9C,EAAAnJ,MAAAiZ,EAAAjN,GACA7C,EAAAO,UACAP,EAAAM,YACAN,EAAAnJ,MAAAkZ,EAAAlN,GACAqG,EAAA,GAEAlJ,EAAAnJ,MAAAwK,EAAAuB,EAAAC,EAAAC,GACAgN,EAAAC,GAEAxP,QAAA,WACAP,EAAAO,UACAc,EAAAwB,EAAAzjB,KAEA8pB,MAAA,WACA,SAAAA,IAKA,QAAA8G,IAAA3O,EAAAwB,EAAAD,EAAAE,GACA,GAAAxB,GACA2O,EACAC,EAAAtQ,GAAAyB,EAAAuB,EACA,OAAA1rB,IAAAg5B,GAAA7L,GACA8L,IAAAvQ,GAAAiD,IAAAoN,EAAA1O,GAAAuB,IAAAlD,GAAAgD,GACAhD,GAAAkD,IAAAxB,EAAAC,GAAAsB,IAAAjD,GAAAyB,KACAC,EAAA2O,EAAAC,KACArN,EAAAC,GAAA,EAGA,QAAAsN,IAAAh+B,EAAAg2B,EAAAd,EAAAtH,GACA,GAAAmB,EACA,UAAA/uB,EACA+uB,EAAAmG,EAAA5H,GACAM,EAAAnJ,OAAA2I,GAAA2B,GACAnB,EAAAnJ,MAAA,EAAAsK,GACAnB,EAAAnJ,MAAA2I,GAAA2B,GACAnB,EAAAnJ,MAAA2I,GAAA,GACAQ,EAAAnJ,MAAA2I,IAAA2B,GACAnB,EAAAnJ,MAAA,GAAAsK,GACAnB,EAAAnJ,OAAA2I,IAAA2B,GACAnB,EAAAnJ,OAAA2I,GAAA,GACAQ,EAAAnJ,OAAA2I,GAAA2B,OACG,IAAAjqB,GAAA9E,EAAA,GAAAg2B,EAAA,IAAA/D,GAAA,CACH,GAAAnD,GAAA9uB,EAAA,GAAAg2B,EAAA,GAAA5I,MACA2B,GAAAmG,EAAApG,EAAA,EACAlB,EAAAnJ,OAAAqK,EAAAC,GACAnB,EAAAnJ,MAAA,EAAAsK,GACAnB,EAAAnJ,MAAAqK,EAAAC,OAEAnB,GAAAnJ,MAAAuR,EAAA,GAAAA,EAAA,IA0LA,QAAAiI,IAAAC,GACA,gBAAAtQ,GACA,GAAAxZ,GAAA,GAAA+pB,GACA,QAAA3+B,KAAA0+B,GAAA9pB,EAAA5U,GAAA0+B,EAAA1+B,EAEA,OADA4U,GAAAwZ,SACAxZ,GAIA,QAAA+pB,OAYA,QAAAC,IAAAC,EAAAtb,EAAA2F,GACA,GAAAqK,GAAAhQ,EAAA,MAAAA,EAAA,MACA5O,EAAA4O,EAAA,MAAAA,EAAA,MACAub,EAAAD,EAAAxI,YAAAwI,EAAAxI,YAEAwI,GACA14B,MAAA,KACAwT,WAAA,MAEA,MAAAmlB,GAAAD,EAAAxI,WAAA,MAEA0I,GAAA7V,EAAA2V,EAAAzQ,OAAA4Q,IAEA,IAAA5kC,GAAA4kC,GAAA7G,SACAnwB,EAAAzG,KAAAG,IAAA6xB,GAAAn5B,EAAA,MAAAA,EAAA,OAAAua,GAAAva,EAAA,MAAAA,EAAA,QACAwG,GAAA2iB,EAAA,OAAAgQ,EAAAvrB,GAAA5N,EAAA,MAAAA,EAAA,UACA4G,GAAAuiB,EAAA,OAAA5O,EAAA3M,GAAA5N,EAAA,MAAAA,EAAA,SAIA,OAFA,OAAA0kC,GAAAD,EAAAxI,WAAAyI,GAEAD,EACA14B,MAAA,IAAA6B,GACA2R,WAAA/Y,EAAAI,IAGA,QAAAi+B,IAAAJ,EAAAK,EAAAhW,GACA,MAAA0V,IAAAC,IAAA,KAAAK,GAAAhW,GAUA,QAAAiW,IAAAC,GACA,MAAAX,KACAxZ,MAAA,SAAArkB,EAAAI,GACAJ,EAAAw+B,EAAAx+B,EAAAI,GACA1G,KAAA8zB,OAAAnJ,MAAArkB,EAAA,GAAAA,EAAA,OAKA,QAAAy+B,IAAAD,EAAAE,GAEA,QAAAC,GAAA5U,EAAAC,EAAA6E,EAAAyH,EAAAhV,EAAAsd,EAAA3U,EAAAC,EAAAkG,EAAAyF,EAAAxU,EAAAwd,EAAAC,EAAAtR,GACA,GAAA1b,GAAAmY,EAAAF,EACAhY,EAAAmY,EAAAF,EACA+U,EAAAjtB,IAAAC,GACA,IAAAgtB,EAAA,EAAAL,GAAAI,IAAA,CACA,GAAAvlC,GAAA+8B,EAAAT,EACAr8B,EAAA8nB,EAAAD,EACAxoB,EAAA+lC,EAAAC,EACAjmC,EAAAid,GAAAtc,IAAAC,IAAAX,KACAmmC,EAAA/R,GAAAp0B,GAAAD,GACAk4B,EAAApsB,MAAA7L,GAAA,GAAAg5B,IAAAntB,GAAAmqB,EAAAuB,GAAAyB,IAAAhD,EAAAuB,GAAA,EAAAza,GAAAnc,EAAAD,GACAT,EAAA0lC,EAAA1N,EAAAkO,GACAC,EAAAnmC,EAAA,GACAomC,EAAApmC,EAAA,GACAqmC,EAAAF,EAAAlV,EACAqV,EAAAF,EAAAlV,EACAqV,EAAAttB,EAAAotB,EAAArtB,EAAAstB,GACAC,IAAAN,EAAAL,GACAh6B,IAAAoN,EAAAqtB,EAAAptB,EAAAqtB,GAAAL,EAAA,QACAzI,EAAAT,EAAAvU,EAAAD,EAAAud,EAAAC,EAAAS,MACAX,EAAA5U,EAAAC,EAAA6E,EAAAyH,EAAAhV,EAAAsd,EAAAK,EAAAC,EAAApO,EAAAv3B,GAAAX,EAAAY,GAAAZ,EAAAC,EAAAimC,EAAAtR,GACAA,EAAAnJ,MAAA4a,EAAAC,GACAP,EAAAM,EAAAC,EAAApO,EAAAv3B,EAAAC,EAAAX,EAAAoxB,EAAAC,EAAAkG,EAAAyF,EAAAxU,EAAAwd,EAAAC,EAAAtR,KAIA,gBAAAA,GAYA,QAAAnJ,GAAArkB,EAAAI,GACAJ,EAAAw+B,EAAAx+B,EAAAI,GACAotB,EAAAnJ,MAAArkB,EAAA,GAAAA,EAAA,IAGA,QAAA8tB,KACA/D,EAAAnd,IACA2yB,EAAAlb,MAAAkM,EACA/C,EAAAM,YAGA,QAAAyC,GAAA7B,EAAAC,GACA,GAAA91B,GAAA62B,IAAAhB,EAAAC,IAAA71B,EAAA0lC,EAAA9P,EAAAC,EACAgQ,GAAA5U,EAAAC,EAAA6E,EAAAyH,EAAAhV,EAAAsd,EAAA7U,EAAAjxB,EAAA,GAAAkxB,EAAAlxB,EAAA,GAAA+1B,EAAAH,EAAA4H,EAAAz9B,EAAA,GAAAyoB,EAAAzoB,EAAA,GAAA+lC,EAAA/lC,EAAA,GAAA2mC,GAAAhS,GACAA,EAAAnJ,MAAA0F,EAAAC,GAGA,QAAA+D,KACAwR,EAAAlb,QACAmJ,EAAAO,UAGA,QAAA0R,KACA3R,IACAyR,EAAAlb,MAAAqb,EACAH,EAAAxR,QAAA4R,EAGA,QAAAD,GAAAhR,EAAAC,GACA4B,EAAA/B,EAAAE,EAAAC,GAAA2L,EAAAvQ,EAAAyQ,EAAAxQ,EAAA4V,EAAAtJ,EAAAuJ,EAAAve,EAAAwe,EAAAlB,EACAW,EAAAlb,MAAAkM,EAGA,QAAAoP,KACAhB,EAAA5U,EAAAC,EAAA6E,EAAAyH,EAAAhV,EAAAsd,EAAAtE,EAAAE,EAAAhM,EAAAoR,EAAAC,EAAAC,EAAAN,GAAAhS,GACA+R,EAAAxR,UACAA,IA/CA,GAAAS,GAAA8L,EAAAE,EAAAoF,EAAAC,EAAAC,EACAjR,EAAA9E,EAAAC,EAAAsM,EAAAhV,EAAAsd,EAEAW,GACAlb,QACAyJ,YACAC,UACAE,aAAA,WAAgCT,EAAAS,eAAuBsR,EAAAzR,UAAA2R,GACvDvR,WAAA,WAA8BV,EAAAU,aAAqBqR,EAAAzR,aA0CnD,OAAAyR,IAUA,QAAAtB,IAAAO,GACA,MAAAuB,IAAA,WAAuC,MAAAvB,OAGvC,QAAAuB,IAAAC,GAYA,QAAA/B,GAAA5Z,GAEA,MADAA,GAAA4b,EAAA5b,EAAA,GAAAuK,GAAAvK,EAAA,GAAAuK,KACAvK,EAAA,GAAAjd,EAAA0K,EAAAC,EAAAsS,EAAA,GAAAjd,GAGA,QAAAotB,GAAAnQ,GAEA,MADAA,GAAA4b,EAAAzL,QAAAnQ,EAAA,GAAAvS,GAAA1K,GAAA2K,EAAAsS,EAAA,IAAAjd,GACAid,MAAA,GAAA4M,GAAA5M,EAAA,GAAA4M,IAGA,QAAAiP,GAAAlgC,EAAAI,GACA,MAAAJ,GAAAw+B,EAAAx+B,EAAAI,IAAAJ,EAAA,GAAAoH,EAAA0K,EAAAC,EAAA/R,EAAA,GAAAoH,GA2CA,QAAA+4B,KACAF,EAAA9L,GAAA7a,EAAAya,GAAAC,EAAAC,EAAAC,GAAAsK,EACA,IAAAl5B,GAAAk5B,EAAA9P,EAAAC,EAGA,OAFA7c,GAAA9R,EAAAsF,EAAA,GAAA8B,EACA2K,EAAA3R,EAAAkF,EAAA,GAAA8B,EACAslB,IAGA,QAAAA,KAEA,MADA0T,GAAAC,EAAA,KACApC,EA3EA,GAAAO,GAGA1sB,EAAAC,EACAuH,EAAA2mB,EAEAjW,EAAAC,EAAAC,EAEAkW,EACAC,EARAj5B,EAAA,IACApH,EAAA,IAAAI,EAAA,IACAsuB,EAAA,EAAAC,EAAA,EACAqF,EAAA,EAAAC,EAAA,EAAAC,EAAA,EACAoM,EAAA,KAAAC,EAAAC,GACAzW,EAAA,KAAA0W,EAAAC,GACAhC,EAAA,GAAAiC,EAAAC,GAAAV,EAAAxB,EAuEA,OArDAT,GAAAzQ,OAAA,SAAAA,GACA,MAAA4S,IAAAC,IAAA7S,EAAA4S,IAAAS,GAAAN,EAAAjnB,EAAAqnB,EAAAF,EAAAJ,EAAA7S,OAGAyQ,EAAA6C,UAAA,SAAAh5B,GACA,MAAAC,WAAA7L,QAAAqkC,GAAAz4B,EAAAi5B,GAAAT,EAAAx4B,EAAA8mB,GAAA,EAAAA,KAAA0R,EAAA,KAAAE,IAAA9T,KAAA4T,EAAArP,IAGAgN,EAAAxI,WAAA,SAAA3tB,GACA,MAAAC,WAAA7L,QAAAukC,EAAA,MAAA34B,GAAAiiB,EAAAC,EAAAC,EAAAC,EAAA,KAAAwW,IAAAjL,GAAA1L,GAAAjiB,EAAA,MAAAkiB,GAAAliB,EAAA,MAAAmiB,GAAAniB,EAAA,MAAAoiB,GAAApiB,EAAA,OAAA4kB,KAAA,MAAA3C,EAAA,OAAAA,EAAAC,IAAAC,EAAAC,KAGA+T,EAAA14B,MAAA,SAAAuC,GACA,MAAAC,WAAA7L,QAAAkL,GAAAU,EAAAq4B,KAAA/4B,GAGA62B,EAAAllB,UAAA,SAAAjR,GACA,MAAAC,WAAA7L,QAAA8D,GAAA8H,EAAA,GAAA1H,GAAA0H,EAAA,GAAAq4B,MAAAngC,EAAAI,IAGA69B,EAAA34B,OAAA,SAAAwC,GACA,MAAAC,WAAA7L,QAAAwyB,EAAA5mB,EAAA,OAAA8mB,GAAAD,EAAA7mB,EAAA,OAAA8mB,GAAAuR,MAAAzR,EAAAuC,GAAAtC,EAAAsC,KAGAgN,EAAA3kB,OAAA,SAAAxR,GACA,MAAAC,WAAA7L,QAAA83B,EAAAlsB,EAAA,OAAA8mB,GAAAqF,EAAAnsB,EAAA,OAAA8mB,GAAAsF,EAAApsB,EAAA5L,OAAA,EAAA4L,EAAA,OAAA8mB,GAAA,EAAAuR,MAAAnM,EAAA/C,GAAAgD,EAAAhD,GAAAiD,EAAAjD,KAGAgN,EAAA9R,UAAA,SAAArkB,GACA,MAAAC,WAAA7L,QAAAykC,EAAAC,GAAAV,EAAAxB,EAAA52B,KAAA4kB,KAAA7W,GAAA6oB,IAGAT,EAAAD,UAAA,SAAArb,EAAA2F,GACA,MAAA0V,IAAAC,EAAAtb,EAAA2F,IAGA2V,EAAAI,QAAA,SAAAC,EAAAhW,GACA,MAAA+V,IAAAJ,EAAAK,EAAAhW,IAgBA,WAGA,MAFAkW,GAAAwB,EAAAvmC,MAAAC,KAAAqO,WACAk2B,EAAAzJ,OAAAgK,EAAAhK,UACA2L,KAIA,QAAAa,IAAAhB,GACA,GAAA3P,GAAA,EACAC,EAAAtD,GAAA,EACAp0B,EAAAmnC,GAAAC,GACAlnC,EAAAF,EAAAy3B,EAAAC,EAMA,OAJAx3B,GAAAmoC,UAAA,SAAAn5B,GACA,MAAAC,WAAA7L,OAAAtD,EAAAy3B,EAAAvoB,EAAA,GAAA8mB,GAAA0B,EAAAxoB,EAAA,GAAA8mB,KAAAyB,EAAAY,GAAAX,EAAAW,KAGAn4B,EAGA,QAAAooC,IAAA7Q,GAGA,QAAA8Q,GAAAzS,EAAAC,GACA,OAAAD,EAAAI,EAAA1B,GAAAuB,GAAAG,GAHA,GAAAA,GAAAC,GAAAsB,EAUA,OAJA8Q,GAAA3M,OAAA,SAAAx0B,EAAAI,GACA,OAAAJ,EAAA8uB,EAAA7B,GAAA7sB,EAAA0uB,KAGAqS,EAGA,QAAAC,IAAApX,EAAAE,GAQA,QAAAsU,GAAAx+B,EAAAI,GACA,GAAAsT,GAAAmC,GAAAhd,EAAA,EAAAwP,EAAA+kB,GAAAhtB,IAAAiI,CACA,QAAAqL,EAAA0Z,GAAAptB,GAAAqI,GAAAg5B,EAAA3tB,EAAAqb,GAAA/uB,IATA,GAAAshC,GAAAlU,GAAApD,GAAA3hB,GAAAi5B,EAAAlU,GAAAlD,IAAA,CAGA,IAAAxlB,GAAA2D,GAAAwpB,GAAA,MAAAqP,IAAAlX,EAEA,IAAAnxB,GAAA,EAAAyoC,GAAA,EAAAj5B,EAAAi5B,GAAAD,EAAAxrB,GAAAhd,GAAAwP,CAYA,OALAm2B,GAAAhK,OAAA,SAAAx0B,EAAAI,GACA,GAAAmhC,GAAAF,EAAAjhC,CACA,QAAAuV,GAAA3V,EAAA0E,GAAA68B,IAAAl5B,EAAA2jB,GAAAuV,GAAAtU,IAAAp0B,GAAAmH,IAAAuhC,KAAAl5B,MAAA,EAAAA,MAGAm2B,EAoBA,QAAAgD,IAAAC,GACA,GAAAp5B,GAAAo5B,EAAAvlC,MACA,QACAmoB,MAAA,SAAArkB,EAAAI,GAAuC,IAAZ,GAAArH,IAAA,IAAYA,EAAAsP,GAAAo5B,EAAA1oC,GAAAsrB,MAAArkB,EAAAI,IACvCshC,OAAA,WAAoC,IAAZ,GAAA3oC,IAAA,IAAYA,EAAAsP,GAAAo5B,EAAA1oC,GAAA2oC,UACpC5T,UAAA,WAAuC,IAAZ,GAAA/0B,IAAA,IAAYA,EAAAsP,GAAAo5B,EAAA1oC,GAAA+0B,aACvCC,QAAA,WAAqC,IAAZ,GAAAh1B,IAAA,IAAYA,EAAAsP,GAAAo5B,EAAA1oC,GAAAg1B,WACrCE,aAAA,WAA0C,IAAZ,GAAAl1B,IAAA,IAAYA,EAAAsP,GAAAo5B,EAAA1oC,GAAAk1B,gBAC1CC,WAAA,WAAwC,IAAZ,GAAAn1B,IAAA,IAAYA,EAAAsP,GAAAo5B,EAAA1oC,GAAAm1B,eAyFxC,QAAAyT,IAAAp8B,GACA,gBAAAvF,EAAAI,GACA,GAAAmzB,GAAAxE,GAAA/uB,GACAwzB,EAAAzE,GAAA3uB,GACAgH,EAAA7B,EAAAguB,EAAAC,EACA,QACApsB,EAAAosB,EAAApG,GAAAptB,GACAoH,EAAAgmB,GAAAhtB,KAKA,QAAAwhC,IAAAzQ,GACA,gBAAAnxB,EAAAI,GACA,GAAA6U,GAAAY,GAAA7V,IAAAI,KACAvH,EAAAs4B,EAAAlc,GACA4sB,EAAAzU,GAAAv0B,GACAipC,EAAA/S,GAAAl2B,EACA,QACA8c,GAAA3V,EAAA6hC,EAAA5sB,EAAA6sB,GACA7U,GAAAhY,GAAA7U,EAAAyhC,EAAA5sB,KAiCA,QAAA8sB,IAAArT,EAAAC,GACA,OAAAD,EAAA5pB,GAAAk9B,IAAA9U,GAAAyB,GAAA,KAYA,QAAAsT,IAAAzD,GACA,GAIA0D,GAJAtpC,EAAAqlC,GAAAO,GACAj5B,EAAA3M,EAAA2M,MACAwT,EAAAngB,EAAAmgB,UACA0c,EAAA78B,EAAA68B,UAsBA,OAnBA78B,GAAA2M,MAAA,SAAAuC,GACA,MAAAC,WAAA7L,QAAAqJ,EAAAuC,GAAAo6B,GAAAtpC,EAAA68B,WAAA,MAAA78B,GAAA2M,KAGA3M,EAAAmgB,UAAA,SAAAjR,GACA,MAAAC,WAAA7L,QAAA6c,EAAAjR,GAAAo6B,GAAAtpC,EAAA68B,WAAA,MAAA78B,GAAAmgB,KAGAngB,EAAA68B,WAAA,SAAA3tB,GACA,IAAAC,UAAA7L,OAAA,MAAAgmC,GAAA,KAAAzM,GACA,IAAAyM,EAAA,MAAAp6B,EAAA,CACA,GAAAV,GAAA4lB,GAAAznB,IACA6C,EAAA2Q,GACAjR,KAAAM,EAAA,GAAAhB,EAAAgB,EAAA,GAAAhB,IAAAgB,EAAA,GAAAhB,EAAAgB,EAAA,GAAAhB,IAGA,MADAquB,GAAA3tB,GACAlP,GAGAA,EAAA68B,WAAA,MAGA,QAAA0M,IAAA/hC,GACA,MAAA4hC,KAAA9U,GAAA9sB,GAAA,GAGA,QAAAgiC,IAAApY,EAAAE,GAOA,QAAAsU,GAAAx+B,EAAAI,GACA8D,EAAA,EAAgB9D,GAAA8sB,GAAA2E,KAAAzxB,GAAA8sB,GAAA2E,IACNzxB,EAAA8sB,GAAA2E,KAAAzxB,EAAA8sB,GAAA2E,GACV,IAAAne,GAAAxP,EAAAW,GAAAs9B,GAAA/hC,GAAAiI,EACA,QAAAqL,EAAA0Z,GAAA/kB,EAAArI,GAAAkE,EAAAwP,EAAAqb,GAAA1mB,EAAArI,IAVA,GAAAqiC,GAAAtT,GAAA/E,GACA3hB,EAAA2hB,IAAAE,EAAAkD,GAAApD,GAAAllB,GAAAu9B,EAAAtT,GAAA7E,IAAAplB,GAAAq9B,GAAAjY,GAAAiY,GAAAnY,IACA9lB,EAAAm+B,EAAAx9B,GAAAs9B,GAAAnY,GAAA3hB,IAEA,OAAAA,IASAm2B,EAAAhK,OAAA,SAAAx0B,EAAAI,GACA,GAAAkiC,GAAAp+B,EAAA9D,EAAAsT,EAAAsY,GAAA3jB,GAAAwN,GAAA7V,IAAAsiC,IACA,QAAA3sB,GAAA3V,EAAA0E,GAAA49B,IAAAj6B,EAAA2jB,GAAAsW,GAAA,EAAA3E,GAAA94B,GAAAX,EAAAwP,EAAA,EAAArL,IAAA6kB,KAGAsR,GAdAuD,GAuBA,QAAAQ,IAAA7T,EAAAC,GACA,OAAAD,EAAAC,GAUA,QAAA6T,IAAAxY,EAAAE,GAOA,QAAAsU,GAAAx+B,EAAAI,GACA,GAAAqiC,GAAA9uB,EAAAvT,EAAAsiC,EAAAr6B,EAAArI,CACA,QAAAyiC,EAAArV,GAAAsV,GAAA/uB,EAAA8uB,EAAA1T,GAAA2T,IARA,GAAAL,GAAAtT,GAAA/E,GACA3hB,EAAA2hB,IAAAE,EAAAkD,GAAApD,IAAAqY,EAAAtT,GAAA7E,OAAAF,GACArW,EAAA0uB,EAAAh6B,EAAA2hB,CAEA,OAAAtlB,IAAA2D,GAAAwpB,GAAA0Q,IAOA/D,EAAAhK,OAAA,SAAAx0B,EAAAI,GACA,GAAAqiC,GAAA9uB,EAAAvT,CACA,QAAAuV,GAAA3V,EAAA0E,GAAA+9B,IAAAp6B,EAAA2jB,GAAAyW,GAAA9uB,EAAAqY,GAAA3jB,GAAAwN,GAAA7V,IAAAyiC,OAGAjE,GASA,QAAAmE,IAAA3iC,EAAAI,GACA,GAAAozB,GAAAzE,GAAA3uB,GAAAgH,EAAA2nB,GAAA/uB,GAAAwzB,CACA,QAAAA,EAAApG,GAAAptB,GAAAoH,EAAAgmB,GAAAhtB,GAAAgH,GAWA,QAAAw7B,IAAAC,EAAAC,EAAAC,EAAAC,GACA,WAAAH,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,EAAAtC,GAAA7C,IACAxZ,MAAA,SAAArkB,EAAAI,GACA1G,KAAA8zB,OAAAnJ,MAAArkB,EAAA6iC,EAAAE,EAAA3iC,EAAA0iC,EAAAE,MA6CA,QAAAC,IAAAjjC,EAAAI,GACA,OAAA2uB,GAAA3uB,GAAAgtB,GAAAptB,GAAAotB,GAAAhtB,IAWA,QAAA8iC,IAAAljC,EAAAI,GACA,GAAAozB,GAAAzE,GAAA3uB,GAAAgH,EAAA,EAAA2nB,GAAA/uB,GAAAwzB,CACA,QAAAA,EAAApG,GAAAptB,GAAAoH,EAAAgmB,GAAAhtB,GAAAgH,GAaA,QAAA+7B,IAAAzU,EAAAC,GACA,OAAA7pB,GAAAk9B,IAAA9U,GAAAyB,GAAA,KAAAD,GAwBA,QAAA0U,IAAA7pC,EAAAC,GACA,MAAAD,GAAAuS,SAAAtS,EAAAsS,OAAA,IAGA,QAAAu3B,IAAAC,GACA,MAAAA,GAAAC,OAAAC,GAAA,GAAAF,EAAApnC,OAGA,QAAAsnC,IAAAxjC,EAAAnH,GACA,MAAAmH,GAAAnH,EAAAmH,EAGA,QAAAyjC,IAAAH,GACA,SAAAA,EAAAC,OAAAG,GAAA,GAGA,QAAAA,IAAAtjC,EAAAvH,GACA,MAAA8H,MAAAgE,IAAAvE,EAAAvH,EAAAuH,GAGA,QAAAujC,IAAAhmC,GAEA,IADA,GAAA2lC,GACAA,EAAA3lC,EAAA2lC,UAAA3lC,EAAA2lC,EAAA,EACA,OAAA3lC,GAGA,QAAAimC,IAAAjmC,GAEA,IADA,GAAA2lC,GACAA,EAAA3lC,EAAA2lC,UAAA3lC,EAAA2lC,IAAApnC,OAAA,EACA,OAAAyB,GAwDA,QAAA6G,IAAA7G,GACA,GAAAkmC,GAAA,EACAP,EAAA3lC,EAAA2lC,SACAvqC,EAAAuqC,KAAApnC,MACA,IAAAnD,EACA,OAAAA,GAAA,GAAA8qC,GAAAP,EAAAvqC,GAAAqD,UADAynC,GAAA,CAEAlmC,GAAAvB,MAAAynC,EAgFA,QAAAC,IAAAvqC,EAAAC,GACA,GAAAD,IAAAC,EAAA,MAAAD,EACA,IAAAwqC,GAAAxqC,EAAAyqC,YACAC,EAAAzqC,EAAAwqC,YACAnrC,EAAA,IAGA,KAFAU,EAAAwqC,EAAAjrB,MACAtf,EAAAyqC,EAAAnrB,MACAvf,IAAAC,GACAX,EAAAU,EACAA,EAAAwqC,EAAAjrB,MACAtf,EAAAyqC,EAAAnrB,KAEA,OAAAjgB,GAuCA,QAAAqrC,IAAAlmC,EAAAslC,GACA,GAEA3lC,GAEAwmC,EACAC,EACArrC,EACAsP,EAPA2I,EAAA,GAAAqzB,IAAArmC,GACAsmC,GAAAtmC,EAAA5B,QAAA4U,EAAA5U,MAAA4B,EAAA5B,OAEA0uB,GAAA9Z,EAQA,KAFA,MAAAsyB,MAAAiB,IAEA5mC,EAAAmtB,EAAAhS,OAEA,GADAwrB,IAAA3mC,EAAAvB,OAAAuB,EAAAK,KAAA5B,QACAgoC,EAAAd,EAAA3lC,EAAAK,SAAAqK,EAAA+7B,EAAAloC,QAEA,IADAyB,EAAA2lC,SAAA,GAAA7jC,OAAA4I,GACAtP,EAAAsP,EAAA,EAAqBtP,GAAA,IAAQA,EAC7B+xB,EAAAtvB,KAAA2oC,EAAAxmC,EAAA2lC,SAAAvqC,GAAA,GAAAsrC,IAAAD,EAAArrC,KACAorC,EAAAr4B,OAAAnO,EACAwmC,EAAArF,MAAAnhC,EAAAmhC,MAAA,CAKA,OAAA9tB,GAAAwzB,WAAAC,IAGA,QAAAC,MACA,MAAAR,IAAAxqC,MAAA8qC,WAAAG,IAGA,QAAAJ,IAAA/hC,GACA,MAAAA,GAAA8gC,SAGA,QAAAqB,IAAAhnC,GACAA,EAAAK,KAAAL,EAAAK,UAGA,QAAAymC,IAAA9mC,GACA,GAAA2D,GAAA,CACA,GAAA3D,GAAA2D,gBACA3D,IAAAmO,SAAAnO,EAAA2D,YAGA,QAAA+iC,IAAArmC,GACAtE,KAAAsE,OACAtE,KAAAolC,MACAplC,KAAA4H,OAAA,EACA5H,KAAAoS,OAAA,KAmBA,QAAA84B,IAAAxoC,GACA1C,KAAAoO,EAAA1L,EACA1C,KAAA2wB,KAAA,KA0BA,QAAAwa,IAAAtrC,EAAAC,GACA,GAAAsY,GAAAtY,EAAAwG,EAAAzG,EAAAyG,EACA+R,EAAAvY,EAAA4G,EAAA7G,EAAA6G,EACA0kC,EAAAvrC,EAAAma,EAAAla,EAAAka,CACA,OAAAoxB,KAAA,KAAAhzB,IAAAC,IAIA,QAAAgzB,IAAAC,EAAAC,GACA,GAAAC,GAGAC,EACAC,EAHAC,EAAA,KACAC,EAAAN,EAAAO,IAIA,QAAAN,EAAA/oC,QACA,OAAAgpC,EAAAM,GAAAP,EAAA,GAAoC,MACpC,QAAAC,EAAAO,GAAAR,EAAA,GAAAA,EAAA,GAA0C,MAC1C,QAAAC,EAAAQ,GAAAT,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGA,KAAAK,GACAF,EAAAE,EAAAx9B,EAAAq9B,EAAAG,EAAAjb,KACA6a,GAAAL,GAAAK,EAAAE,GAgBAC,EAAAC,GAbAD,GAAAL,EAAAW,KAAAN,IAAAhb,KAAA,MACA2a,EAAAO,KAAAP,EAAAW,KAAA,KAEAV,EAAAzpC,KAAA4pC,GACAF,EAAAH,GAAAC,EAAAC,GACAA,EAAAnsB,MAGAksB,EAAAO,MAAAD,EAAAjb,KAAA2a,EAAAO,KAAAP,EAAAO,KAAAD,IACAA,EAAAjb,KAAA,KAAA2a,EAAAO,KAAAP,EAAAW,KAAAL,GACAD,EAAAL,EAAAW,KAAAN,EAAAhb,KAAA8a,GAKAG,EAAAH,CAIA,OADAH,GAAAW,KAAAN,EACAH,EAGA,QAAAM,IAAAjsC,GACA,OACAyG,EAAAzG,EAAAyG,EACAI,EAAA7G,EAAA6G,EACAsT,EAAAna,EAAAma,GAIA,QAAA+xB,IAAAlsC,EAAAC,GACA,GAAAywB,GAAA1wB,EAAAyG,EAAAkqB,EAAA3wB,EAAA6G,EAAAwlC,EAAArsC,EAAAma,EACAurB,EAAAzlC,EAAAwG,EAAAk/B,EAAA1lC,EAAA4G,EAAAylC,EAAArsC,EAAAka,EACAoyB,EAAA7G,EAAAhV,EAAA8b,EAAA7G,EAAAhV,EAAA8b,EAAAH,EAAAD,EACA3xB,EAAAtT,KAAAkV,KAAAiwB,IAAAC,IACA,QACA/lC,GAAAiqB,EAAAgV,EAAA6G,EAAA7xB,EAAA+xB,GAAA,EACA5lC,GAAA8pB,EAAAgV,EAAA6G,EAAA9xB,EAAA+xB,GAAA,EACAtyB,GAAAO,EAAA2xB,EAAAC,GAAA,GAIA,QAAAH,IAAAnsC,EAAAC,EAAAX,GACA,GAAAoxB,GAAA1wB,EAAAyG,EAAAkqB,EAAA3wB,EAAA6G,EAAAwlC,EAAArsC,EAAAma,EACAurB,EAAAzlC,EAAAwG,EAAAk/B,EAAA1lC,EAAA4G,EAAAylC,EAAArsC,EAAAka,EACAuyB,EAAAptC,EAAAmH,EAAAkmC,EAAArtC,EAAAuH,EAAA+lC,EAAAttC,EAAA6a,EACA0yB,EAAA,GAAAnc,EAAAgV,GACAzd,EAAA,GAAA0I,EAAAgV,GACAmH,EAAA,GAAAR,EAAAD,GACA7G,EAAA9U,IAAAC,IAAA0b,IAAA3G,IAAAC,IAAA2G,IACAS,EAAA,GAAArc,EAAAgc,GACA1kB,EAAA,GAAA2I,EAAAgc,GACAK,EAAA,GAAAJ,EAAAP,GACA9lC,EAAAmqB,IAAAC,IAAA0b,IAAAK,IAAAC,IAAAC,IACAvN,EAAA0N,EAAA9kB,EAAA4kB,EAAA7kB,EACAvI,GAAAwI,EAAA1hB,EAAAyhB,EAAAwd,GAAAnG,EAAA3O,EACA/Q,GAAAqI,EAAA8kB,EAAA7kB,EAAA+kB,GAAA3N,EACA3f,GAAAqtB,EAAAvH,EAAAqH,EAAAtmC,GAAA84B,EAAA1O,EACA/Q,GAAAitB,EAAAG,EAAAD,EAAAD,GAAAzN,EACA4N,EAAAttB,IAAAC,IAAA,EACA8rB,EAAA,GAAAjsB,EAAAE,EAAAD,EAAAE,EAAAysB,GACAtvB,EAAA0C,IAAAC,IAAA2sB,IACAlyB,IAAAuxB,EAAAtkC,KAAAkV,KAAAovB,IAAA,EAAAuB,EAAAlwB,KAAA,EAAAkwB,EACA,QACAxmC,EAAAgZ,EAAAE,EAAAxF,EAAAuW,EACA7pB,EAAA6Y,EAAAE,EAAAzF,EAAAwW,EACAxW,KAIA,QAAA+yB,IAAAltC,EAAAC,EAAAX,GACA,GAAA6tC,GAAAntC,EAAAyG,EACA2mC,EAAAptC,EAAA6G,EACAwmC,EAAAptC,EAAAka,EAAA7a,EAAA6a,EACAmzB,EAAAttC,EAAAma,EAAA7a,EAAA6a,EACA5B,EAAAtY,EAAAwG,EAAA0mC,EACA30B,EAAAvY,EAAA4G,EAAAumC,EACAG,EAAAh1B,IAAAC,GACA,IAAA+0B,EAAA,CACA,GAAA9mC,GAAA,KAAA6mC,OAAAD,QAAA,EAAAE,GACA1mC,EAAAO,KAAAkV,KAAAlV,KAAAgE,IAAA,IAAAiiC,GAAAC,EAAAC,IAAAD,GAAAC,GAAAD,EAAAD,OAAA,EAAAE,EACAjuC,GAAAmH,EAAA0mC,EAAA1mC,EAAA8R,EAAA1R,EAAA2R,EACAlZ,EAAAuH,EAAAumC,EAAA3mC,EAAA+R,EAAA3R,EAAA0R,MAEAjZ,GAAAmH,EAAA0mC,EAAAG,EACAhuC,EAAAuH,EAAAumC,EAIA,QAAAI,IAAAxtC,EAAAC,GACA,GAAAsY,GAAAtY,EAAAwG,EAAAzG,EAAAyG,EACA+R,EAAAvY,EAAA4G,EAAA7G,EAAA6G,EACA0kC,EAAAvrC,EAAAma,EAAAla,EAAAka,CACA,OAAAoxB,KAAA,KAAAhzB,IAAAC,IAGA,QAAAi1B,IAAAztC,EAAAC,GAEA,IADA,GAAAya,GAAA1a,EAAAuO,EAAA4L,EACAna,IAAAC,GAAAya,GAAA,GAAA1a,IAAA8wB,MAAAviB,EAAA4L,CACA,OAAAO,GAAAza,EAAAsO,EAAA4L,EAGA,QAAAuzB,IAAAtpC,EAAAqC,EAAAI,GACA,GAAA7G,GAAAoE,EAAAmK,EACAtO,EAAAmE,EAAA0sB,KAAAviB,EACA8wB,EAAAr/B,EAAAma,EAAAla,EAAAka,EACA5B,GAAAvY,EAAAyG,EAAAxG,EAAAka,EAAAla,EAAAwG,EAAAzG,EAAAma,GAAAklB,EAAA54B,EACA+R,GAAAxY,EAAA6G,EAAA5G,EAAAka,EAAAla,EAAA4G,EAAA7G,EAAAma,GAAAklB,EAAAx4B,CACA,OAAA0R,KAAAC,IAGA,QAAAm1B,IAAAhC,GACAxrC,KAAAoO,EAAAo9B,EACAxrC,KAAA2wB,KAAA,KACA3wB,KAAAytC,SAAA,KAGA,QAAAC,IAAAC,GACA,KAAAh/B,EAAAg/B,EAAAnrC,QAAA,QAEA,IAAA3C,GAAAC,EAAAX,EAAAwP,CAIA,IADA9O,EAAA8tC,EAAA,GAAA9tC,EAAAyG,EAAA,EAAAzG,EAAA6G,EAAA,IACAiI,EAAA,SAAA9O,GAAAma,CAIA,IADAla,EAAA6tC,EAAA,GAAA9tC,EAAAyG,GAAAxG,EAAAka,EAAAla,EAAAwG,EAAAzG,EAAAma,EAAAla,EAAA4G,EAAA,IACAiI,EAAA,SAAA9O,GAAAma,EAAAla,EAAAka,CAGA+yB,IAAAjtC,EAAAD,EAAAV,EAAAwuC,EAAA,GAGA,IAMA9T,GAAAC,EAAAz6B,EAAAkS,EAAA7D,EAAAkgC,EAAAC,EANAC,EAAAjuC,EAAAma,EAAAna,EAAAma,EACA+zB,EAAAjuC,EAAAka,EAAAla,EAAAka,EACAuiB,EAAAp9B,EAAA6a,EAAA7a,EAAA6a,EACAg0B,EAAAF,EAAAC,EAAAxR,EACA0R,EAAAH,EAAAjuC,EAAAyG,EAAAynC,EAAAjuC,EAAAwG,EAAAi2B,EAAAp9B,EAAAmH,EACA4nC,EAAAJ,EAAAjuC,EAAA6G,EAAAqnC,EAAAjuC,EAAA4G,EAAA61B,EAAAp9B,EAAAuH,CAIA7G,GAAA,GAAA2tC,IAAA3tC,GAAAC,EAAA,GAAA0tC,IAAA1tC,GAAAX,EAAA,GAAAquC,IAAAruC,GACAU,EAAA8wB,KAAAxxB,EAAAsuC,SAAA3tC,EACAA,EAAA6wB,KAAA9wB,EAAA4tC,SAAAtuC,EACAA,EAAAwxB,KAAA7wB,EAAA2tC,SAAA5tC,CAGAsuC,GAAA,IAAA9uC,EAAA,EAAmBA,EAAAsP,IAAOtP,EAAA,CAC1B0tC,GAAAltC,EAAAuO,EAAAtO,EAAAsO,EAAAjP,EAAAwuC,EAAAtuC,IAAAF,EAAA,GAAAquC,IAAAruC,GAKAoS,EAAAzR,EAAA6wB,KAAAjjB,EAAA7N,EAAA4tC,SAAAG,EAAA9tC,EAAAsO,EAAA4L,EAAA6zB,EAAAhuC,EAAAuO,EAAA4L,CACA,GACA,IAAA4zB,GAAAC,EAAA,CACA,GAAAR,GAAA97B,EAAAnD,EAAAjP,EAAAiP,GAAA,CACAw/B,EAAA/tC,EAAAuO,EAAA4L,EAAAla,EAAAsO,EAAA4L,EAAAszB,GAAA/7B,EAAAzR,GAAAD,EAAA0R,EAA0DzR,EAAAyR,EAC1D1R,EAAA8wB,KAAA7wB,IAAA2tC,SAAA5tC,IAAAR,CACA,SAAA8uC,GAEAP,GAAAr8B,EAAAnD,EAAA4L,EAAAzI,IAAAof,SACO,CACP,GAAA0c,GAAA3/B,EAAAU,EAAAjP,EAAAiP,GAAA,CACAk/B,GAAAztC,EAAA6N,GAAAmgC,EAAAhuC,EAAAuO,EAAA4L,EAAAla,EAAAsO,EAAA4L,EAAAna,EAAA6N,EAA0D5N,EAAA4N,EAC1D7N,EAAA8wB,KAAA7wB,IAAA2tC,SAAA5tC,IAAAR,CACA,SAAA8uC,GAEAN,GAAAngC,EAAAU,EAAA4L,EAAAtM,IAAA+/B,eAEKl8B,IAAA7D,EAAAijB,KAYL,KATAxxB,EAAAsuC,SAAA5tC,EAAAV,EAAAwxB,KAAA7wB,EAAAD,EAAA8wB,KAAA7wB,EAAA2tC,SAAA3tC,EAAAX,EAGA6uC,GAAAzR,EAAAp9B,EAAAiP,EAAA4L,EAAA7a,EAAAiP,EAAA4L,EACAi0B,GAAA1R,EAAAp9B,EAAAiP,EAAA9H,EACA4nC,GAAA3R,EAAAp9B,EAAAiP,EAAA1H,EAGAonC,EAAAP,GAAA1tC,EAAAg6B,EAAAoU,EAAAD,EAAAlU,EAAAoU,EAAAF,IACA7uC,IAAAwxB,QAAA7wB,IACAy8B,EAAAgR,GAAApuC,EAAA06B,EAAAC,IAAAgU,IACAjuC,EAAAV,EAAA2uC,EAAAvR,EAGAz8B,GAAAD,EAAA8wB,KAImB,IAAnB9wB,GAAAC,EAAAsO,GAAAjP,EAAAW,GAAmBX,IAAAwxB,QAAA7wB,GAAAD,EAAAiC,KAAA3C,EAAAiP,EAGnB,KAH2DjP,EAAAivC,GAAAvuC,GAG3DR,EAAA,EAAaA,EAAAsP,IAAOtP,EAAAQ,EAAA8tC,EAAAtuC,GAAAQ,EAAAyG,GAAAnH,EAAAmH,EAAAzG,EAAA6G,GAAAvH,EAAAuH,CAEpB,OAAAvH,GAAA6a,EAQA,QAAAq0B,IAAA7jC,GACA,aAAAA,EAAA,KAAA8jC,GAAA9jC,GAGA,QAAA8jC,IAAA9jC,GACA,qBAAAA,GAAA,SAAAoE,MACA,OAAApE,GAGA,QAAA+jC,MACA,SASA,QAAAC,IAAA1lC,GACA,MAAA7B,MAAAkV,KAAArT,EAAApG,OAuCA,QAAA+rC,IAAAlgB,GACA,gBAAAtqB,GACAA,EAAA2lC,WACA3lC,EAAA+V,EAAA/S,KAAAgE,IAAA,GAAAsjB,EAAAtqB,IAAA,KAKA,QAAAyqC,IAAAC,EAAAjhC,GACA,gBAAAzJ,GACA,GAAA2lC,EAAA3lC,EAAA2lC,SAAA,CACA,GAAAA,GACAvqC,EAGAyf,EAFAnQ,EAAAi7B,EAAApnC,OACAwX,EAAA20B,EAAA1qC,GAAAyJ,GAAA,CAGA,IAAAsM,EAAA,IAAA3a,EAAA,EAAwBA,EAAAsP,IAAOtP,EAAAuqC,EAAAvqC,GAAA2a,IAE/B,IADA8E,EAAA4uB,GAAA9D,GACA5vB,EAAA,IAAA3a,EAAA,EAAwBA,EAAAsP,IAAOtP,EAAAuqC,EAAAvqC,GAAA2a,IAC/B/V,GAAA+V,EAAA8E,EAAA9E,IAKA,QAAA40B,IAAAlhC,GACA,gBAAAzJ,GACA,GAAAmO,GAAAnO,EAAAmO,MACAnO,GAAA+V,GAAAtM,EACA0E,IACAnO,EAAAqC,EAAA8L,EAAA9L,EAAAoH,EAAAzJ,EAAAqC,EACArC,EAAAyC,EAAA0L,EAAA1L,EAAAgH,EAAAzJ,EAAAyC,IA+EA,QAAAmoC,IAAA/lC,GACA,MAAAA,GAAA/J,GAGA,QAAA+vC,IAAAhmC,GACA,MAAAA,GAAAimC,SA8DA,QAAAC,IAAAnvC,EAAAC,GACA,MAAAD,GAAAuS,SAAAtS,EAAAsS,OAAA,IAWA,QAAA68B,IAAAr7B,GACA,GAAAg2B,GAAAh2B,EAAAg2B,QACA,OAAAA,KAAA,GAAAh2B,EAAAlF,EAIA,QAAAwgC,IAAAt7B,GACA,GAAAg2B,GAAAh2B,EAAAg2B,QACA,OAAAA,OAAApnC,OAAA,GAAAoR,EAAAlF,EAKA,QAAAygC,IAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAD,GAAAD,EAAAhwC,EAAA+vC,EAAA/vC,EACAgwC,GAAAlwC,GAAAowC,EACAF,EAAA/0B,GAAAg1B,EACAF,EAAAjwC,GAAAowC,EACAF,EAAA9zB,GAAA+zB,EACAD,EAAAnwC,GAAAowC,EAMA,QAAAE,IAAA57B,GAMA,IALA,GAIAqlB,GAJAqW,EAAA,EACAC,EAAA,EACA3F,EAAAh2B,EAAAg2B,SACAvqC,EAAAuqC,EAAApnC,SAEAnD,GAAA,GACA45B,EAAA2Q,EAAAvqC,GACA45B,EAAA1d,GAAA+zB,EACArW,EAAA/5B,GAAAowC,EACAA,GAAArW,EAAA3e,GAAAi1B,GAAAtW,EAAA95B,GAMA,QAAAswC,IAAAC,EAAA97B,EAAA+7B,GACA,MAAAD,GAAA7vC,EAAAuS,SAAAwB,EAAAxB,OAAAs9B,EAAA7vC,EAAA8vC,EAGA,QAAAC,IAAA3rC,EAAA5E,GACAW,KAAAoO,EAAAnK,EACAjE,KAAAoS,OAAA,KACApS,KAAA4pC,SAAA,KACA5pC,KAAA8sC,EAAA,KACA9sC,KAAAH,EAAAG,KACAA,KAAAub,EAAA,EACAvb,KAAAd,EAAA,EACAc,KAAAb,EAAA,EACAa,KAAAsa,EAAA,EACAta,KAAA0O,EAAA,KACA1O,KAAAX,IAKA,QAAAwwC,IAAAv4B,GASA,IARA,GACArT,GAEAwmC,EACAb,EACAvqC,EACAsP,EANAmhB,EAAA,GAAA8f,IAAAt4B,EAAA,GAEA8Z,GAAAtB,GAMA7rB,EAAAmtB,EAAAhS,OACA,GAAAwqB,EAAA3lC,EAAAmK,EAAAw7B,SAEA,IADA3lC,EAAA2lC,SAAA,GAAA7jC,OAAA4I,EAAAi7B,EAAApnC,QACAnD,EAAAsP,EAAA,EAAqBtP,GAAA,IAAQA,EAC7B+xB,EAAAtvB,KAAA2oC,EAAAxmC,EAAA2lC,SAAAvqC,GAAA,GAAAuwC,IAAAhG,EAAAvqC,OACAorC,EAAAr4B,OAAAnO,CAMA,QADA6rB,EAAA1d,OAAA,GAAAw9B,IAAA,SAAAhG,UAAA9Z,GACAA,EA8JA,QAAAggB,IAAAC,EAAA39B,EAAAie,EAAAC,EAAAC,EAAAC,GAkBA,IAjBA,GAEAlnB,GACA0mC,EAIA53B,EAAAC,EAEA43B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAfA7gB,KACA0B,EAAAhf,EAAAw3B,SAGA4G,EAAA,EACAC,EAAA,EACA9hC,EAAAyiB,EAAA5uB,OAEAE,EAAA0P,EAAA1P,MASA8tC,EAAA7hC,GAAA,CACAyJ,EAAAmY,EAAAF,EAAAhY,EAAAmY,EAAAF,CAGA,GAAA2f,GAAA7e,EAAAqf,KAAA/tC,aAAoCutC,GAAAQ,EAAA9hC,EAOpC,KANAuhC,EAAAC,EAAAF,EACAK,EAAArpC,KAAAgE,IAAAoN,EAAAD,IAAAC,IAAA3V,EAAAqtC,GACAQ,EAAAN,IAAAK,EACAD,EAAAppC,KAAAgE,IAAAklC,EAAAI,IAAAL,GAGUO,EAAA9hC,IAAQ8hC,EAAA,CAMlB,GALAR,GAAAD,EAAA5e,EAAAqf,GAAA/tC,MACAstC,EAAAE,MAAAF,GACAA,EAAAG,MAAAH,GACAO,EAAAN,IAAAK,EACAF,EAAAnpC,KAAAgE,IAAAklC,EAAAI,IAAAL,GACAE,EAAAC,EAAA,CAAgCJ,GAAAD,CAAuB,OACvDK,EAAAD,EAIA1gB,EAAA5tB,KAAAwH,GAAqB5G,MAAAutC,EAAAS,KAAAt4B,EAAAC,EAAAuxB,SAAAxY,EAAAzxB,MAAA6wC,EAAAC,KACrBnnC,EAAAonC,KAAAC,GAAArnC,EAAA+mB,EAAAC,EAAAC,EAAA7tB,EAAA4tB,GAAAjY,EAAA43B,EAAAvtC,EAAA8tB,GACAogB,GAAAtnC,EAAA+mB,EAAAC,EAAA5tB,EAAA2tB,GAAAjY,EAAA63B,EAAAvtC,EAAA6tB,EAAAC,GACA9tB,GAAAutC,EAAAO,EAAAC,EAGA,MAAA/gB,GAyOA,QAAAmhB,IAAAhxC,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,GAMA,QAAAgxC,IAAApV,GAKA,OAJA/sB,GAAA+sB,EAAAl5B,OACAuuC,GAAA,KACAnM,EAAA,EAEAvlC,EAAA,EAAiBA,EAAAsP,IAAOtP,EAAA,CACxB,KAAAulC,EAAA,GAAAoM,GAAAtV,EAAAqV,EAAAnM,EAAA,IAAAlJ,EAAAqV,EAAAnM,EAAA,IAAAlJ,EAAAr8B,KAAA,KAAAulC,CACAmM,GAAAnM,KAAAvlC,EAGA,MAAA0xC,GAAApxC,MAAA,EAAAilC,GA4EA,QAAAqM,IAAArM,GACA,KAAAA,GAAA,YAAAh2B,MACA5O,MAAAkxC,MAAAtM,EACA5kC,KAAAohB,MACAphB,KAAAmxC,OAAA,KACAnxC,KAAAoxC,UACApxC,KAAAqxC,SACArxC,KAAAsxC,SACAtxC,KAAAuxC,QACAvxC,KAAAwxC,OACAxxC,KAAAyxC,OAAA,EAgCA,QAAAC,IAAAhyB,GACA,IAAAA,EAAA+xB,OACA,IAASE,GAAAjyB,GACT,MAAAZ,GACA,GAAAY,EAAA0xB,OAAA1xB,EAAA8xB,OAAA9xB,EAAA6xB,QAAA,GAAAK,GAAAlyB,EAAAZ,OACA,KAAAY,EAAA2xB,MAAA,KAAAvyB,IAKA,QAAA6yB,IAAAjyB,GACA,KAAAA,EAAA+xB,OAAA/xB,EAAA4xB,UAAA5xB,EAAA6xB,QAAA7xB,EAAAwxB,OAAA,CACA,GAAA7xC,GAAAqgB,EAAA8xB,OAAA9xB,EAAA6xB,QACA7iC,EAAAgR,EAAA0xB,OAAA/xC,GACAkS,EAAA7C,EAAAlM,OAAA,EACArD,EAAAuP,EAAA6C,EACA7C,GAAA6C,GAAAgP,GAAAb,EAAArgB,KACAqgB,EAAA4xB,WAAA5xB,EAAA6xB,QACA7iC,EAAAvP,EAAAY,MAAA,KAAA2O,GACAgR,EAAA0xB,OAAA/xC,KACAqgB,EAAA0xB,OAAA/xC,GAAAqP,GAAAmjC,KAIA,QAAAtxB,IAAAb,EAAArgB,GACA,gBAAAyf,EAAA9E,GACA0F,EAAA0xB,OAAA/xC,OACAqgB,EAAA6xB,UAAA7xB,EAAA8xB,OACA9xB,EAAA0xB,OAAA/xC,GAAA,KACA,MAAAqgB,EAAAyxB,SACA,MAAAryB,EACA8yB,GAAAlyB,EAAAZ,IAEAY,EAAA2xB,MAAAhyC,GAAA2a,EACA0F,EAAA4xB,SAAAI,GAAAhyB,GACAoyB,GAAApyB,OAKA,QAAAkyB,IAAAlyB,EAAAZ,GACA,GAAApQ,GAAArP,EAAAqgB,EAAA0xB,OAAA5uC,MAKA,KAJAkd,EAAAyxB,OAAAryB,EACAY,EAAA2xB,MAAA/f,OACA5R,EAAA4xB,SAAAp+B,MAEA7T,GAAA,GACA,IAAAqP,EAAAgR,EAAA0xB,OAAA/xC,MACAqgB,EAAA0xB,OAAA/xC,GAAA,KACAqP,EAAAkjC,OACA,IAAaljC,EAAAkjC,QACb,MAAA9yB,IAKAY,EAAA6xB,QAAAr+B,IACA4+B,GAAApyB,GAGA,QAAAoyB,IAAApyB,GACA,IAAAA,EAAA6xB,SAAA7xB,EAAA0B,MAAA,CACA,GAAAtY,GAAA4W,EAAA2xB,KACA3xB,GAAA2xB,MAAA/f,OACA5R,EAAA0B,MAAA1B,EAAAyxB,OAAAroC,IAIA,QAAA3F,IAAA4uC,GACA,UAAAd,IAAA5iC,UAAA7L,QAAAuvC,EAAA5vB,KAqMA,QAAA6vB,IAAAnuC,GACA,gBAAAyH,EAAA2mC,GACApuC,EAAA,MAAAyH,EAAA2mC,EAAA,OAIA,QAAAC,IAAAD,GACA,GAAA9iC,GAAA8iC,EAAAE,YACA,OAAAhjC,IAAA,SAAAA,EACA8iC,EAAAG,SACAH,EAAAI,aA0CA,QAAAC,IAAAtzB,EAAA1V,GACA,gBAAAipC,GACA,MAAAvzB,GAAAuzB,EAAAF,aAAA/oC,IAeA,QAAAkpC,IAAAvqC,GAOA,QAAA4D,GAAA/C,GACA,GAAApD,GAAAoD,EAAA,GAAAzJ,EAAAkE,EAAA6L,IAAA1J,EACA,KAAArG,EAAA,CACA,GAAAozC,IAAAC,GAAA,MAAAD,EACAlvC,GAAA8L,IAAA3J,EAAArG,EAAA0I,EAAAjG,KAAAgH,IAEA,MAAAb,IAAA5I,EAAA,GAAA4I,EAAAzF,QAZA,GAAAe,GAAAorB,KACA5mB,KACA0qC,EAAAC,EAoCA,OAlCAzqC,GAAA,MAAAA,KAAA0qC,GAAA1zC,KAAAgJ,GAWA4D,EAAA9D,OAAA,SAAAqG,GACA,IAAAC,UAAA7L,OAAA,MAAAuF,GAAApI,OACAoI,MAAAxE,EAAAorB,IAEA,KADA,GAAA7lB,GAAApD,EAAArG,GAAA,EAAAsP,EAAAP,EAAA5L,SACAnD,EAAAsP,GAAApL,EAAAqvC,IAAAltC,GAAAoD,EAAAsF,EAAA/O,IAAA,KAAAkE,EAAA8L,IAAA3J,EAAAqC,EAAAjG,KAAAgH,GACA,OAAA+C,IAGAA,EAAA5D,MAAA,SAAAmG,GACA,MAAAC,WAAA7L,QAAAyF,EAAA0qC,GAAA1zC,KAAAmP,GAAAvC,GAAA5D,EAAAtI,SAGAkM,EAAA4mC,QAAA,SAAArkC,GACA,MAAAC,WAAA7L,QAAAiwC,EAAArkC,EAAAvC,GAAA4mC,GAGA5mC,EAAAoB,KAAA,WACA,MAAAulC,MACAzqC,UACAE,SACAwqC,YAGA5mC,EAGA,QAAAgnC,MAcA,QAAAC,KACA,GAAAnkC,GAAA5G,IAAAvF,OACA09B,EAAA6S,EAAA,GAAAA,EAAA,GACAnoC,EAAAmoC,EAAA7S,EAAA,GACAr1B,EAAAkoC,EAAA,EAAA7S,EACA3E,IAAA1wB,EAAAD,GAAA3D,KAAAgE,IAAA,EAAA0D,EAAAqkC,EAAA,EAAAC,GACAjnC,IAAAuvB,EAAAt0B,KAAAC,MAAAq0B,IACA3wB,IAAAC,EAAAD,EAAA2wB,GAAA5sB,EAAAqkC,IAAA3gB,EACAtmB,EAAAwvB,GAAA,EAAAyX,GACAhnC,IAAApB,EAAA3D,KAAA+E,MAAApB,GAAAmB,EAAA9E,KAAA+E,MAAAD,GACA,IAAAO,GAAAozB,GAAA/wB,GAAAzG,IAAA,SAAA7I,GAA8C,MAAAuL,GAAA2wB,EAAAl8B,GAC9C,OAAA6zC,GAAAhT,EAAA5zB,EAAA4zB,UAAA5zB,GAxBA,GAIAivB,GACAxvB,EALAF,EAAA2mC,KAAAC,QAAAnhB,QACAvpB,EAAA8D,EAAA9D,OACAmrC,EAAArnC,EAAA5D,MACA8qC,GAAA,KAGA/mC,GAAA,EACAgnC,EAAA,EACAC,EAAA,EACA5gB,EAAA,EAoEA,cAlEAxmB,GAAA4mC,QAgBA5mC,EAAA9D,OAAA,SAAAqG,GACA,MAAAC,WAAA7L,QAAAuF,EAAAqG,GAAA0kC,KAAA/qC,KAGA8D,EAAA5D,MAAA,SAAAmG,GACA,MAAAC,WAAA7L,QAAAuwC,IAAA3kC,EAAA,IAAAA,EAAA,IAAA0kC,KAAAC,EAAApzC,SAGAkM,EAAAsnC,WAAA,SAAA/kC,GACA,MAAA2kC,KAAA3kC,EAAA,IAAAA,EAAA,IAAApC,GAAA,EAAA8mC,KAGAjnC,EAAAE,UAAA,WACA,MAAAA,IAGAF,EAAA0vB,KAAA,WACA,MAAAA,IAGA1vB,EAAAG,MAAA,SAAAoC,GACA,MAAAC,WAAA7L,QAAAwJ,IAAAoC,EAAA0kC,KAAA9mC,GAGAH,EAAA8iC,QAAA,SAAAvgC,GACA,MAAAC,WAAA7L,QAAAwwC,EAAAC,EAAAhsC,KAAAgE,IAAA,EAAAhE,KAAAG,IAAA,EAAAgH,IAAA0kC,KAAAE,GAGAnnC,EAAAmnC,aAAA,SAAA5kC,GACA,MAAAC,WAAA7L,QAAAwwC,EAAA/rC,KAAAgE,IAAA,EAAAhE,KAAAG,IAAA,EAAAgH;AAAA0kC,KAAAE,GAGAnnC,EAAAonC,aAAA,SAAA7kC,GACA,MAAAC,WAAA7L,QAAAywC,EAAAhsC,KAAAgE,IAAA,EAAAhE,KAAAG,IAAA,EAAAgH,IAAA0kC,KAAAG,GAGApnC,EAAAwmB,MAAA,SAAAjkB,GACA,MAAAC,WAAA7L,QAAA6vB,EAAAprB,KAAAgE,IAAA,EAAAhE,KAAAG,IAAA,EAAAgH,IAAA0kC,KAAAzgB,GAGAxmB,EAAAoB,KAAA,WACA,MAAA4lC,MACA9qC,YACAE,MAAA8qC,GACA/mC,SACAgnC,gBACAC,gBACA5gB,UAGAygB,IAGA,QAAAM,IAAAvnC,GACA,GAAAoB,GAAApB,EAAAoB,IAUA,OARApB,GAAA8iC,QAAA9iC,EAAAonC,mBACApnC,GAAAmnC,mBACAnnC,GAAAonC,aAEApnC,EAAAoB,KAAA,WACA,MAAAmmC,IAAAnmC,MAGApB,EAGA,QAAAwnC,MACA,MAAAD,IAAAP,KAAAG,aAAA,IAeA,QAAAM,IAAAzzC,EAAAC,GACA,OAAAA,GAAAD,MACA,SAAAyG,GAAqB,OAAAA,EAAAzG,GAAAC,GACrByzC,GAAAzzC,GAGA,QAAA0zC,IAAAC,GACA,gBAAA5zC,EAAAC,GACA,GAAAgJ,GAAA2qC,EAAA5zC,KAAAC,KACA,iBAAAwG,GAAwB,MAAAA,IAAAzG,EAAA,EAAAyG,GAAAxG,EAAA,EAAAgJ,EAAAxC,KAIxB,QAAAotC,IAAA/zB,GACA,gBAAA9f,EAAAC,GACA,GAAAka,GAAA2F,EAAA9f,KAAAC,KACA,iBAAA4O,GAAwB,MAAAA,IAAA,EAAA7O,EAAA6O,GAAA,EAAA5O,EAAAka,EAAAtL,KAIxB,QAAAilC,IAAA5rC,EAAAgrC,EAAAU,EAAA9zB,GACA,GAAAi0B,GAAA7rC,EAAA,GAAA8rC,EAAA9rC,EAAA,GAAA4/B,EAAAoL,EAAA,GAAA7G,EAAA6G,EAAA,EAGA,OAFAc,GAAAD,KAAAH,EAAAI,EAAAD,GAAAjM,EAAAhoB,EAAAusB,EAAAvE,KACAiM,EAAAH,EAAAG,EAAAC,GAAAlM,EAAAhoB,EAAAgoB,EAAAuE,IACA,SAAA5lC,GAAsB,MAAAqhC,GAAAiM,EAAAttC,KAGtB,QAAAwtC,IAAA/rC,EAAAgrC,EAAAU,EAAA9zB,GACA,GAAApO,GAAAtK,KAAAG,IAAAW,EAAAvF,OAAAuwC,EAAAvwC,QAAA,EACAsG,EAAA,GAAA/C,OAAAwL,GACAyI,EAAA,GAAAjU,OAAAwL,GACAlS,GAAA,CAQA,KALA0I,EAAAwJ,GAAAxJ,EAAA,KACAA,IAAApI,QAAAugC,UACA6S,IAAApzC,QAAAugC,aAGA7gC,EAAAkS,GACAzI,EAAAzJ,GAAAo0C,EAAA1rC,EAAA1I,GAAA0I,EAAA1I,EAAA,IACA2a,EAAA3a,GAAAsgB,EAAAozB,EAAA1zC,GAAA0zC,EAAA1zC,EAAA,GAGA,iBAAAiH,GACA,GAAAjH,GAAA00C,GAAAhsC,EAAAzB,EAAA,EAAAiL,GAAA,CACA,OAAAyI,GAAA3a,GAAAyJ,EAAAzJ,GAAAiH,KAIA,QAAA2G,IAAA6gB,EAAA7V,GACA,MAAAA,GACAlQ,OAAA+lB,EAAA/lB,UACAE,MAAA6lB,EAAA7lB,SACAg0B,YAAAnO,EAAAmO,eACA+X,MAAAlmB,EAAAkmB,SAKA,QAAAC,IAAAR,EAAA9zB,GASA,QAAAmzB,KAGA,MAFAoB,GAAAjtC,KAAAG,IAAAW,EAAAvF,OAAAuwC,EAAAvwC,QAAA,EAAAsxC,GAAAH,GACAvqB,EAAAmE,EAAA,KACA1hB,EAGA,QAAAA,GAAAvF,GACA,OAAA8iB,MAAA8qB,EAAAnsC,EAAAgrC,EAAAiB,EAAAR,GAAAC,KAAArvB,MAAA9d,GAfA,GAIA4tC,GACA9qB,EACAmE,EANAxlB,EAAAosC,GACApB,EAAAoB,GACA/vB,EAAAoJ,GACAwmB,GAAA,CAuCA,OAxBAnoC,GAAAivB,OAAA,SAAAp0B,GACA,OAAA6mB,MAAA2mB,EAAAnB,EAAAhrC,EAAAurC,GAAAU,EAAAN,GAAA/zB,SAAAjZ,IAGAmF,EAAA9D,OAAA,SAAAqG,GACA,MAAAC,WAAA7L,QAAAuF,EAAAqsC,GAAAn1C,KAAAmP,EAAAimC,IAAAvB,KAAA/qC,EAAApI,SAGAkM,EAAA5D,MAAA,SAAAmG,GACA,MAAAC,WAAA7L,QAAAuwC,EAAAJ,GAAA1zC,KAAAmP,GAAA0kC,KAAAC,EAAApzC,SAGAkM,EAAAsnC,WAAA,SAAA/kC,GACA,MAAA2kC,GAAAJ,GAAA1zC,KAAAmP,GAAAgW,EAAAkwB,GAAAxB,KAGAjnC,EAAAmoC,MAAA,SAAA5lC,GACA,MAAAC,WAAA7L,QAAAwxC,IAAA5lC,EAAA0kC,KAAAkB,GAGAnoC,EAAAowB,YAAA,SAAA7tB,GACA,MAAAC,WAAA7L,QAAA4hB,EAAAhW,EAAA0kC,KAAA1uB,GAGA0uB,IAgCA,QAAAyB,IAAA1oC,GACA,GAAA9D,GAAA8D,EAAA9D,MA6BA,OA3BA8D,GAAAtF,MAAA,SAAAuE,GACA,GAAAhC,GAAAf,GACA,OAAAxB,IAAAuC,EAAA,GAAAA,IAAAtG,OAAA,SAAAsI,EAAA,GAAAA,IAGAe,EAAAxB,WAAA,SAAAS,EAAAknB,GACA,MAAA3nB,IAAAtC,IAAA+C,EAAAknB,IAGAnmB,EAAA2oC,KAAA,SAAA1pC,GACA,GAAAhC,GAAAf,IACA1I,EAAAyJ,EAAAtG,OAAA,EACAmM,EAAA,MAAA7D,EAAA,GAAAA,EACAF,EAAA9B,EAAA,GACA+B,EAAA/B,EAAAzJ,GACAk8B,EAAA5wB,EAAAC,EAAAC,EAAA8D,EASA,OAPA4sB,KACAA,EAAA5wB,EAAA1D,KAAAC,MAAA0D,EAAA2wB,KAAAt0B,KAAA64B,KAAAj1B,EAAA0wB,KAAA5sB,GACA7F,EAAA,GAAA7B,KAAAC,MAAA0D,EAAA2wB,KACAzyB,EAAAzJ,GAAA4H,KAAA64B,KAAAj1B,EAAA0wB,KACAxzB,EAAAe,IAGA+C,GAGAA,EAGA,QAAA4oC,MACA,GAAA5oC,GAAAooC,GAAAX,GAAA3zB,GAMA,OAJA9T,GAAAoB,KAAA,WACA,MAAAA,IAAApB,EAAA4oC,OAGAF,GAAA1oC,GAGA,QAAA6oC,MAGA,QAAA7oC,GAAAvF,GACA,OAAAA,EAHA,GAAAyB,IAAA,IAgBA,OAVA8D,GAAAivB,OAAAjvB,EAEAA,EAAA9D,OAAA8D,EAAA5D,MAAA,SAAAmG,GACA,MAAAC,WAAA7L,QAAAuF,EAAAqsC,GAAAn1C,KAAAmP,EAAAimC,IAAAxoC,GAAA9D,EAAApI,SAGAkM,EAAAoB,KAAA,WACA,MAAAynC,MAAA3sC,WAGAwsC,GAAA1oC,GAsBA,QAAA4nC,IAAA5zC,EAAAC,GACA,OAAAA,EAAAmH,KAAAmE,IAAAtL,EAAAD,IACA,SAAAyG,GAAqB,MAAAW,MAAAmE,IAAA9E,EAAAzG,GAAAC,GACrByzC,GAAAzzC,GAGA,QAAA60C,IAAA90C,EAAAC,GACA,MAAAD,GAAA,EACA,SAAA6O,GAAqB,OAAAzH,KAAAkE,KAAArL,EAAA4O,GAAAzH,KAAAkE,KAAAtL,EAAA,EAAA6O,IACrB,SAAAA,GAAqB,MAAAzH,MAAAkE,IAAArL,EAAA4O,GAAAzH,KAAAkE,IAAAtL,EAAA,EAAA6O,IAGrB,QAAAkmC,IAAAtuC,GACA,MAAAuH,UAAAvH,KAAA,KAAAA,KAAA,IAAAA,EAGA,QAAAuuC,IAAAC,GACA,YAAAA,EAAAF,GACAE,IAAA7tC,KAAA0V,EAAA1V,KAAAiZ,IACA,SAAA5Z,GAAqB,MAAAW,MAAAkE,IAAA2pC,EAAAxuC,IAGrB,QAAAyuC,IAAAD,GACA,MAAAA,KAAA7tC,KAAA0V,EAAA1V,KAAAmE,IACA,KAAA0pC,GAAA7tC,KAAA+tC,OACA,IAAAF,GAAA7tC,KAAAguC,OACAH,EAAA7tC,KAAAmE,IAAA0pC,GAAA,SAAAxuC,GAA8C,MAAAW,MAAAmE,IAAA9E,GAAAwuC,IAG9C,QAAAI,IAAA1qC,GACA,gBAAAlE,GACA,OAAAkE,GAAAlE,IAIA,QAAA6uC,MAOA,QAAArC,KAGA,MAFAsC,GAAAL,GAAAD,GAAAO,EAAAR,GAAAC,GACA/sC,IAAA,OAAAqtC,EAAAF,GAAAE,GAAAC,EAAAH,GAAAG,IACAxpC,EATA,GAAAA,GAAAooC,GAAAR,GAAAkB,IAAA5sC,QAAA,OACAA,EAAA8D,EAAA9D,OACA+sC,EAAA,GACAM,EAAAL,GAAA,IACAM,EAAAR,GAAA,GAgFA,OAxEAhpC,GAAAipC,KAAA,SAAA1mC,GACA,MAAAC,WAAA7L,QAAAsyC,GAAA1mC,EAAA0kC,KAAAgC,GAGAjpC,EAAA9D,OAAA,SAAAqG,GACA,MAAAC,WAAA7L,QAAAuF,EAAAqG,GAAA0kC,KAAA/qC,KAGA8D,EAAAtF,MAAA,SAAAuE,GACA,GAGAkP,GAHAlR,EAAAf,IACA8tB,EAAA/sB,EAAA,GACA8K,EAAA9K,IAAAtG,OAAA,IAGAwX,EAAApG,EAAAiiB,KAAAx2B,EAAAw2B,IAAAjiB,IAAAvU,EAEA,IAEAD,GACAsO,EACAgB,EAJArP,EAAA+1C,EAAAvf,GACAtkB,EAAA6jC,EAAAxhC,GAIAjF,EAAA,MAAA7D,EAAA,IAAAA,EACAyQ,IAEA,MAAAu5B,EAAA,IAAAvjC,EAAAlS,EAAAsP,GAEA,GADAtP,EAAA4H,KAAA+E,MAAA3M,GAAA,EAAAkS,EAAAtK,KAAA+E,MAAAuF,GAAA,EACAskB,EAAA,QAAuBx2B,EAAAkS,IAAOlS,EAC9B,IAAAqO,EAAA,EAAAtO,EAAAi2C,EAAAh2C,GAAgCqO,EAAAonC,IAAUpnC,EAE1C,GADAgB,EAAAtP,EAAAsO,IACAgB,EAAAmnB,GAAA,CACA,GAAAnnB,EAAAkF,EAAA,KACA2H,GAAAzZ,KAAA4M,QAEO,MAAYrP,EAAAkS,IAAOlS,EAC1B,IAAAqO,EAAAonC,EAAA,EAAA11C,EAAAi2C,EAAAh2C,GAAuCqO,GAAA,IAAQA,EAE/C,GADAgB,EAAAtP,EAAAsO,IACAgB,EAAAmnB,GAAA,CACA,GAAAnnB,EAAAkF,EAAA,KACA2H,GAAAzZ,KAAA4M,QAIA6M,GAAAhV,GAAAlH,EAAAkS,EAAAtK,KAAAG,IAAAmK,EAAAlS,EAAAsP,IAAAzG,IAAAmtC,EAGA,OAAAr7B,GAAAuB,EAAA2kB,UAAA3kB,GAGA1P,EAAAxB,WAAA,SAAAS,EAAAknB,GAGA,GAFA,MAAAA,MAAA,KAAA8iB,EAAA,WACA,kBAAA9iB,OAAAnzB,EAAA4N,OAAAulB,IACAlnB,IAAAqX,IAAA,MAAA6P,EACA,OAAAlnB,MAAA,GACA,IAAA4C,GAAAzG,KAAAgE,IAAA,EAAA6pC,EAAAhqC,EAAAe,EAAAtF,QAAA/D,OACA,iBAAAsG,GACA,GAAAzJ,GAAAyJ,EAAAusC,EAAApuC,KAAA+E,MAAAopC,EAAAtsC,IAEA,OADAzJ,GAAAy1C,IAAA,KAAAz1C,GAAAy1C,GACAz1C,GAAAqO,EAAAskB,EAAAlpB,GAAA,KAIA+C,EAAA2oC,KAAA,WACA,MAAAzsC,GAAAysC,GAAAzsC,KACAb,MAAA,SAAAZ,GAA0B,MAAA+uC,GAAApuC,KAAAC,MAAAkuC,EAAA9uC,MAC1Bw5B,KAAA,SAAAx5B,GAAyB,MAAA+uC,GAAApuC,KAAA64B,KAAAsV,EAAA9uC,UAIzBuF,EAAAoB,KAAA,WACA,MAAAA,IAAApB,EAAAspC,KAAAL,UAGAjpC,EAGA,QAAAypC,IAAAhvC,EAAAivC,GACA,MAAAjvC,GAAA,GAAAW,KAAAkE,KAAA7E,EAAAivC,GAAAtuC,KAAAkE,IAAA7E,EAAAivC,GAGA,QAAAC,MAKA,QAAA/B,GAAA5zC,EAAAC,GACA,OAAAA,EAAAw1C,GAAAx1C,EAAAy1C,IAAA11C,EAAAy1C,GAAAz1C,EAAA01C,KACA,SAAAjvC,GAAuB,OAAAgvC,GAAAhvC,EAAAivC,GAAA11C,GAAAC,GACvByzC,GAAAzzC,GAGA,QAAA6f,GAAA9f,EAAAC,GAEA,MADAA,GAAAw1C,GAAAx1C,EAAAy1C,IAAA11C,EAAAy1C,GAAAz1C,EAAA01C,IACA,SAAA7mC,GAAwB,MAAA4mC,IAAAz1C,EAAAC,EAAA4O,EAAA,EAAA6mC,IAZxB,GAAAA,GAAA,EACA1pC,EAAAooC,GAAAR,EAAA9zB,GACA5X,EAAA8D,EAAA9D,MAqBA,OARA8D,GAAA0pC,SAAA,SAAAnnC,GACA,MAAAC,WAAA7L,QAAA+yC,GAAAnnC,EAAArG,QAAAwtC,GAGA1pC,EAAAoB,KAAA,WACA,MAAAA,IAAApB,EAAA2pC,KAAAD,cAGAhB,GAAA1oC,GAGA,QAAA4pC,MACA,MAAAD,MAAAD,SAAA,IAGA,QAAAG,MAKA,QAAA5C,KACA,GAAAzzC,GAAA,EAAAsP,EAAA1H,KAAAgE,IAAA,EAAA8nC,EAAAvwC,OAEA,KADAmzC,EAAA,GAAA5vC,OAAA4I,EAAA,KACAtP,EAAAsP,GAAAgnC,EAAAt2C,EAAA,GAAAu2C,GAAA7tC,EAAA1I,EAAAsP,EACA,OAAA9C,GAGA,QAAAA,GAAAvF,GACA,IAAAiX,MAAAjX,MAAA,MAAAysC,GAAAgB,GAAA4B,EAAArvC,IAZA,GAAAyB,MACAgrC,KACA4C,IA2CA,OA9BA9pC,GAAAgqC,aAAA,SAAAnvC,GACA,GAAArH,GAAA0zC,EAAAhqC,QAAArC,EACA,OAAArH,GAAA,GAAA6T,UACA7T,EAAA,EAAAs2C,EAAAt2C,EAAA,GAAA0I,EAAA,GACA1I,EAAAs2C,EAAAnzC,OAAAmzC,EAAAt2C,GAAA0I,IAAAvF,OAAA,KAIAqJ,EAAA9D,OAAA,SAAAqG,GACA,IAAAC,UAAA7L,OAAA,MAAAuF,GAAApI,OACAoI,KACA,QAAAe,GAAAzJ,EAAA,EAAAsP,EAAAP,EAAA5L,OAAoCnD,EAAAsP,IAAOtP,EAAAyJ,EAAAsF,EAAA/O,GAAA,MAAAyJ,GAAAyU,MAAAzU,OAAAf,EAAAjG,KAAAgH,EAE3C,OADAf,GAAA+tC,KAAArrC,IACAqoC,KAGAjnC,EAAA5D,MAAA,SAAAmG,GACA,MAAAC,WAAA7L,QAAAuwC,EAAAJ,GAAA1zC,KAAAmP,GAAA0kC,KAAAC,EAAApzC,SAGAkM,EAAAkqC,UAAA,WACA,MAAAJ,GAAAh2C,SAGAkM,EAAAoB,KAAA,WACA,MAAAyoC,MACA3tC,UACAE,MAAA8qC,IAGAlnC,EAGA,QAAAmqC,MAOA,QAAAnqC,GAAAvF,GACA,GAAAA,KAAA,MAAAysC,GAAAgB,GAAAhsC,EAAAzB,EAAA,EAAAqI,IAGA,QAAAmkC,KACA,GAAAzzC,IAAA,CAEA,KADA0I,EAAA,GAAAhC,OAAA4I,KACAtP,EAAAsP,GAAA5G,EAAA1I,OAAA,GAAAkxB,GAAAlxB,EAAAsP,GAAA0hB,IAAA1hB,EAAA,EACA,OAAA9C,GAdA,GAAAwkB,GAAA,EACAE,EAAA,EACA5hB,EAAA,EACA5G,GAAA,IACAgrC,GAAA,IAmCA,OAtBAlnC,GAAA9D,OAAA,SAAAqG,GACA,MAAAC,WAAA7L,QAAA6tB,GAAAjiB,EAAA,GAAAmiB,GAAAniB,EAAA,GAAA0kC,MAAAziB,EAAAE,IAGA1kB,EAAA5D,MAAA,SAAAmG,GACA,MAAAC,WAAA7L,QAAAmM,GAAAokC,EAAAJ,GAAA1zC,KAAAmP,IAAA5L,OAAA,EAAAswC,KAAAC,EAAApzC,SAGAkM,EAAAgqC,aAAA,SAAAnvC,GACA,GAAArH,GAAA0zC,EAAAhqC,QAAArC,EACA,OAAArH,GAAA,GAAA6T,SACA7T,EAAA,GAAAgxB,EAAAtoB,EAAA,IACA1I,GAAAsP,GAAA5G,EAAA4G,EAAA,GAAA4hB,IACAxoB,EAAA1I,EAAA,GAAA0I,EAAA1I,KAGAwM,EAAAoB,KAAA,WACA,MAAA+oC,MACAjuC,QAAAsoB,EAAAE,IACAtoB,MAAA8qC,IAGAwB,GAAA1oC,GAGA,QAAAoqC,MAKA,QAAApqC,GAAAvF,GACA,GAAAA,KAAA,MAAAysC,GAAAgB,GAAAhsC,EAAAzB,EAAA,EAAAqI,IALA,GAAA5G,IAAA,IACAgrC,GAAA,KACApkC,EAAA,CAyBA,OAnBA9C,GAAA9D,OAAA,SAAAqG,GACA,MAAAC,WAAA7L,QAAAuF,EAAA4qC,GAAA1zC,KAAAmP,GAAAO,EAAA1H,KAAAG,IAAAW,EAAAvF,OAAAuwC,EAAAvwC,OAAA,GAAAqJ,GAAA9D,EAAApI,SAGAkM,EAAA5D,MAAA,SAAAmG,GACA,MAAAC,WAAA7L,QAAAuwC,EAAAJ,GAAA1zC,KAAAmP,GAAAO,EAAA1H,KAAAG,IAAAW,EAAAvF,OAAAuwC,EAAAvwC,OAAA,GAAAqJ,GAAAknC,EAAApzC,SAGAkM,EAAAgqC,aAAA,SAAAnvC,GACA,GAAArH,GAAA0zC,EAAAhqC,QAAArC,EACA,QAAAqB,EAAA1I,EAAA,GAAA0I,EAAA1I,KAGAwM,EAAAoB,KAAA,WACA,MAAAgpC,MACAluC,UACAE,MAAA8qC,IAGAlnC,EAMA,QAAAqqC,IAAAC,EAAAC,EAAAtrC,EAAAurC,GAEA,QAAA/zB,GAAAg0B,GACA,MAAAH,GAAAG,EAAA,GAAAC,OAAAD,MAqDA,MAlDAh0B,GAAApb,MAAAob,EAEAA,EAAAwd,KAAA,SAAAwW,GACA,MAAAH,GAAAG,EAAA,GAAAC,MAAAD,EAAA,IAAAF,EAAAE,EAAA,GAAAH,EAAAG,MAGAh0B,EAAAtW,MAAA,SAAAsqC,GACA,GAAA1C,GAAAtxB,EAAAg0B,GACAzC,EAAAvxB,EAAAwd,KAAAwW,EACA,OAAAA,GAAA1C,EAAAC,EAAAyC,EAAA1C,EAAAC,GAGAvxB,EAAAxW,OAAA,SAAAwqC,EAAA/a,GACA,MAAA6a,GAAAE,EAAA,GAAAC,OAAAD,GAAA,MAAA/a,EAAA,EAAAt0B,KAAAC,MAAAq0B,IAAA+a,GAGAh0B,EAAAra,MAAA,SAAA2C,EAAAC,EAAA0wB,GACA,GAAAtzB,KAGA,IAFA2C,EAAA0X,EAAAwd,KAAAl1B,GACA2wB,EAAA,MAAAA,EAAA,EAAAt0B,KAAAC,MAAAq0B,KACA3wB,EAAAC,GAAA0wB,EAAA,SAAAtzB,EACA,GAAAA,GAAAnG,KAAA,GAAAy0C,OAAA3rC,UAAoCwrC,EAAAxrC,EAAA2wB,GAAA4a,EAAAvrC,KAAAC,EACpC,OAAA5C,IAGAqa,EAAAtZ,OAAA,SAAAwtC,GACA,MAAAN,IAAA,SAAAI,GACA,GAAAA,KAAA,KAAAH,EAAAG,IAAAE,EAAAF,MAAAG,QAAAH,EAAA,IACK,SAAAA,EAAA/a,GACL,GAAA+a,KAAA,OAAA/a,GAAA,QAAA6a,EAAAE,EAAA,IAAAE,EAAAF,SAIAxrC,IACAwX,EAAAxX,MAAA,SAAAF,EAAA2V,GAGA,MAFAm2B,IAAAD,SAAA7rC,GAAA+rC,GAAAF,SAAAl2B,GACA41B,EAAAO,IAAAP,EAAAQ,IACA1vC,KAAAC,MAAA4D,EAAA4rC,GAAAC,MAGAr0B,EAAAgD,MAAA,SAAAiW,GAEA,MADAA,GAAAt0B,KAAAC,MAAAq0B,GACA1tB,SAAA0tB,MAAA,EACAA,EAAA,EACAjZ,EAAAtZ,OAAAqtC,EACA,SAAAvtC,GAA6B,MAAAutC,GAAAvtC,GAAAyyB,IAAA,GAC7B,SAAAzyB,GAA6B,MAAAwZ,GAAAxX,MAAA,EAAAhC,GAAAyyB,IAAA,IAH7BjZ,EADA,OAQAA,EAmFA,QAAAs0B,IAAAv3C,GACA,MAAA62C,IAAA,SAAAI,GACAA,EAAAO,QAAAP,EAAAQ,WAAAR,EAAAS,SAAA,EAAA13C,GAAA,GACAi3C,EAAAU,SAAA,UACG,SAAAV,EAAA/a,GACH+a,EAAAO,QAAAP,EAAAQ,UAAA,EAAAvb,IACG,SAAA3wB,EAAA2V,GACH,OAAAA,EAAA3V,GAAA2V,EAAA02B,oBAAArsC,EAAAqsC,qBAAAC,IAAAC,KA6FA,QAAAC,IAAA/3C,GACA,MAAA62C,IAAA,SAAAI,GACAA,EAAAe,WAAAf,EAAAgB,cAAAhB,EAAAiB,YAAA,EAAAl4C,GAAA,GACAi3C,EAAAkB,YAAA,UACG,SAAAlB,EAAA/a,GACH+a,EAAAe,WAAAf,EAAAgB,aAAA,EAAA/b,IACG,SAAA3wB,EAAA2V,GACH,OAAAA,EAAA3V,GAAAusC,KAyDA,QAAAM,IAAA3uC,GACA,MAAAA,EAAApC,GAAAoC,EAAApC,EAAA,KACA,GAAA4vC,GAAA,GAAAC,OAAA,EAAAztC,EAAA5J,EAAA4J,MAAA4uC,EAAA5uC,EAAA6uC,EAAA7uC,EAAA8iB,EAAA9iB,EAAAwiC,EAEA,OADAgL,GAAAsB,YAAA9uC,EAAApC,GACA4vC,EAEA,UAAAC,MAAAztC,EAAApC,EAAAoC,EAAA5J,EAAA4J,MAAA4uC,EAAA5uC,EAAA6uC,EAAA7uC,EAAA8iB,EAAA9iB,EAAAwiC,GAGA,QAAAuM,IAAA/uC,GACA,MAAAA,EAAApC,GAAAoC,EAAApC,EAAA,KACA,GAAA4vC,GAAA,GAAAC,WAAAuB,KAAA,EAAAhvC,EAAA5J,EAAA4J,MAAA4uC,EAAA5uC,EAAA6uC,EAAA7uC,EAAA8iB,EAAA9iB,EAAAwiC,GAEA,OADAgL,GAAAyB,eAAAjvC,EAAApC,GACA4vC,EAEA,UAAAC,WAAAuB,IAAAhvC,EAAApC,EAAAoC,EAAA5J,EAAA4J,MAAA4uC,EAAA5uC,EAAA6uC,EAAA7uC,EAAA8iB,EAAA9iB,EAAAwiC,IAGA,QAAA0M,IAAAtxC,GACA,OAAUA,IAAAxH,EAAA,EAAA4J,EAAA,EAAA4uC,EAAA,EAAAC,EAAA,EAAA/rB,EAAA,EAAA0f,EAAA,GAGV,QAAA2M,IAAAC,GA8GA,QAAAC,GAAAnmB,EAAAomB,GACA,gBAAA9B,GACA,GAIAn3C,GACAk5C,EACA5rC,EANA+H,KACAnV,GAAA,EACAkS,EAAA,EACA5C,EAAAqjB,EAAAxvB,MAOA,KAFA8zC,YAAAC,QAAAD,EAAA,GAAAC,OAAAD,MAEAj3C,EAAAsP,GACA,KAAAqjB,EAAAsmB,WAAAj5C,KACAmV,EAAA1S,KAAAkwB,EAAAryB,MAAA4R,EAAAlS,IACA,OAAAg5C,EAAAE,GAAAp5C,EAAA6yB,EAAAwmB,SAAAn5C,KAAAF,EAAA6yB,EAAAwmB,SAAAn5C,GACAg5C,EAAA,MAAAl5C,EAAA,SACAsN,EAAA2rC,EAAAj5C,QAAAsN,EAAA6pC,EAAA+B,IACA7jC,EAAA1S,KAAA3C,GACAoS,EAAAlS,EAAA,EAKA,OADAmV,GAAA1S,KAAAkwB,EAAAryB,MAAA4R,EAAAlS,IACAmV,EAAAwL,KAAA,KAIA,QAAAy4B,GAAAzmB,EAAA0mB,GACA,gBAAAlkC,GACA,GAAA1L,GAAAkvC,GAAA,MACA34C,EAAAs5C,EAAA7vC,EAAAkpB,EAAAxd,GAAA,KACA,IAAAnV,GAAAmV,EAAAhS,OAAA,WAMA,IAHA,KAAAsG,OAAA4uC,EAAA5uC,EAAA4uC,EAAA,MAAA5uC,EAAA1J,GAGA,KAAA0J,IAAA,KAAAA,GAAA,CACA,KAAAA,OAAAmwB,EAAA,KAAAnwB,GAAA,IACA,IAAA8vC,GAAA,KAAA9vC,GAAA+uC,GAAAG,GAAAlvC,EAAApC,IAAA6wC,YAAAmB,EAAAV,GAAAlvC,EAAApC,IAAAqwC,QACAjuC,GAAA5J,EAAA,EACA4J,IAAA,KAAAA,MAAAmwB,EAAA,OAAAnwB,EAAAsiB,GAAAwtB,EAAA,KAAA9vC,EAAAmwB,EAAA,EAAAnwB,EAAA+vC,GAAAD,EAAA,KAKA,WAAA9vC,IACAA,EAAA4uC,GAAA5uC,EAAAgwC,EAAA,MACAhwC,EAAA6uC,GAAA7uC,EAAAgwC,EAAA,IACAjB,GAAA/uC,IAIA4vC,EAAA5vC,IAIA,QAAA6vC,GAAA7vC,EAAAkpB,EAAAxd,EAAAjD,GAOA,IANA,GAGApS,GACA6f,EAJA3f,EAAA,EACAsP,EAAAqjB,EAAAxvB,OACAtD,EAAAsV,EAAAhS,OAIAnD,EAAAsP,GAAA,CACA,GAAA4C,GAAArS,EAAA,QAEA,IADAC,EAAA6yB,EAAAsmB,WAAAj5C,KACA,KAAAF,GAGA,GAFAA,EAAA6yB,EAAAwmB,OAAAn5C,KACA2f,EAAA+5B,EAAA55C,IAAAo5C,IAAAvmB,EAAAwmB,OAAAn5C,KAAAF,IACA6f,IAAAzN,EAAAyN,EAAAlW,EAAA0L,EAAAjD,IAAA,eACO,IAAApS,GAAAqV,EAAA8jC,WAAA/mC,KACP,SAIA,MAAAA,GAGA,QAAAynC,GAAAlwC,EAAA0L,EAAAnV,GACA,GAAAsP,GAAAsqC,EAAA//B,KAAA1E,EAAA7U,MAAAN,GACA,OAAAsP,IAAA7F,EAAA1J,EAAA85C,EAAAvqC,EAAA,GAAAqK,eAAA3Z,EAAAsP,EAAA,GAAAnM,SAAA,EAGA,QAAA22C,GAAArwC,EAAA0L,EAAAnV,GACA,GAAAsP,GAAAyqC,EAAAlgC,KAAA1E,EAAA7U,MAAAN,GACA,OAAAsP,IAAA7F,EAAAmwB,EAAAogB,EAAA1qC,EAAA,GAAAqK,eAAA3Z,EAAAsP,EAAA,GAAAnM,SAAA,EAGA,QAAA82C,GAAAxwC,EAAA0L,EAAAnV,GACA,GAAAsP,GAAA4qC,EAAArgC,KAAA1E,EAAA7U,MAAAN,GACA,OAAAsP,IAAA7F,EAAAmwB,EAAAugB,EAAA7qC,EAAA,GAAAqK,eAAA3Z,EAAAsP,EAAA,GAAAnM,SAAA,EAGA,QAAAi3C,GAAA3wC,EAAA0L,EAAAnV,GACA,GAAAsP,GAAA+qC,EAAAxgC,KAAA1E,EAAA7U,MAAAN,GACA,OAAAsP,IAAA7F,EAAA5J,EAAAy6C,EAAAhrC,EAAA,GAAAqK,eAAA3Z,EAAAsP,EAAA,GAAAnM,SAAA,EAGA,QAAAo3C,GAAA9wC,EAAA0L,EAAAnV,GACA,GAAAsP,GAAAkrC,EAAA3gC,KAAA1E,EAAA7U,MAAAN,GACA,OAAAsP,IAAA7F,EAAA5J,EAAA46C,EAAAnrC,EAAA,GAAAqK,eAAA3Z,EAAAsP,EAAA,GAAAnM,SAAA,EAGA,QAAAu3C,GAAAjxC,EAAA0L,EAAAnV,GACA,MAAAs5C,GAAA7vC,EAAAkxC,EAAAxlC,EAAAnV,GAGA,QAAA46C,GAAAnxC,EAAA0L,EAAAnV,GACA,MAAAs5C,GAAA7vC,EAAAoxC,EAAA1lC,EAAAnV,GAGA,QAAA86C,GAAArxC,EAAA0L,EAAAnV,GACA,MAAAs5C,GAAA7vC,EAAAsxC,EAAA5lC,EAAAnV,GAGA,QAAAg7C,GAAAvxC,GACA,MAAAwxC,GAAAxxC,EAAAiuC,UAGA,QAAAwD,GAAAzxC,GACA,MAAA0xC,GAAA1xC,EAAAiuC,UAGA,QAAA0D,GAAA3xC,GACA,MAAA4xC,GAAA5xC,EAAA6xC,YAGA,QAAAC,GAAA9xC,GACA,MAAA+xC,GAAA/xC,EAAA6xC,YAGA,QAAAG,GAAAhyC,GACA,MAAAiyC,KAAAjyC,EAAAkyC,YAAA,KAGA,QAAAC,GAAAnyC,GACA,MAAAwxC,GAAAxxC,EAAAyuC,aAGA,QAAA2D,GAAApyC,GACA,MAAA0xC,GAAA1xC,EAAAyuC,aAGA,QAAA4D,GAAAryC,GACA,MAAA4xC,GAAA5xC,EAAAsyC,eAGA,QAAAC,GAAAvyC,GACA,MAAA+xC,GAAA/xC,EAAAsyC,eAGA,QAAAE,GAAAxyC,GACA,MAAAiyC,KAAAjyC,EAAAyyC,eAAA,KAvQA,GAAAvB,GAAA9B,EAAAsD,SACAtB,EAAAhC,EAAA5B,KACA8D,EAAAlC,EAAA12B,KACAu5B,EAAA7C,EAAAuD,QACAjB,EAAAtC,EAAAwD,KACApB,EAAApC,EAAAyD,UACAd,EAAA3C,EAAA0D,OACAlB,EAAAxC,EAAA2D,YAEA5C,EAAA6C,GAAAf,GACA7B,EAAA6C,GAAAhB,GACAxB,EAAAuC,GAAAtB,GACAhB,EAAAuC,GAAAvB,GACApB,EAAA0C,GAAAxB,GACAjB,EAAA0C,GAAAzB,GACAT,EAAAiC,GAAAjB,GACAf,EAAAiC,GAAAlB,GACAnB,EAAAoC,GAAApB,GACAf,EAAAoC,GAAArB,GAEAtC,GACAv4C,EAAAw6C,EACAvN,EAAAyN,EACAz6C,EAAA26C,EACAlP,EAAAqP,EACAz7C,EAAA,KACA2J,EAAAkzC,GACAl9B,EAAAk9B,GACAtE,EAAAuE,GACAC,EAAAC,GACA5qC,EAAA6qC,GACA9Q,EAAA+Q,GACAn9C,EAAAo9C,GACA3E,EAAA4E,GACAn9C,EAAA07C,EACAlvB,EAAA4wB,GACA3D,EAAA4D,GACAxjB,EAAAyjB,GACAtxB,EAAAuxB,GACAr2C,EAAA,KACAijB,EAAA,KACA7iB,EAAAk2C,GACAnzB,EAAAozB,GACA/D,EAAAgE,GACAC,IAAAC,IAGAC,GACAp9C,EAAAo7C,EACAnO,EAAAoO,EACAp7C,EAAAq7C,EACA5P,EAAA8P,EACAl8C,EAAA,KACA2J,EAAAo0C,GACAp+B,EAAAo+B,GACAxF,EAAAyF,GACAjB,EAAAkB,GACA7rC,EAAA8rC,GACA/R,EAAAgS,GACAp+C,EAAAq+C,GACA5F,EAAA6F,GACAp+C,EAAAk8C,EACA1vB,EAAA6xB,GACA5E,EAAA6E,GACAzkB,EAAA0kB,GACAvyB,EAAAwyB,GACAt3C,EAAA,KACAijB,EAAA,KACA7iB,EAAAm3C,GACAp0B,EAAAq0B,GACAhF,EAAAiF,GACAhB,IAAAC,IAGAjE,GACAl5C,EAAAs5C,EACArM,EAAAwM,EACAx5C,EAAA25C,EACAlO,EAAAqO,EACAz6C,EAAA46C,EACAjxC,EAAAk1C,GACAl/B,EAAAk/B,GACAtG,EAAAuG,GACA/B,EAAA+B,GACA1sC,EAAA2sC,GACA5S,EAAA6S,GACAj/C,EAAAk/C,GACAzG,EAAA0G,GACAj/C,EAAA45C,EACAptB,EAAA0yB,GACAzF,EAAA0F,GACAtlB,EAAAulB,GACApzB,EAAAqzB,GACAn4C,EAAA2zC,EACA1wB,EAAA4wB,EACAzzC,EAAAg4C,GACAj1B,EAAAk1B,GACA7F,EAAA8F,GACA7B,IAAA8B,GAwKA,OApKAzG,GAAA9xC,EAAA6xC,EAAA+B,EAAA9B,GACAA,EAAA7uB,EAAA4uB,EAAAiC,EAAAhC,GACAA,EAAAj5C,EAAAg5C,EAAA6B,EAAA5B,GACA6E,EAAA32C,EAAA6xC,EAAA+B,EAAA+C,GACAA,EAAA1zB,EAAA4uB,EAAAiC,EAAA6C,GACAA,EAAA99C,EAAAg5C,EAAA6B,EAAAiD,IAgKAxwC,OAAA,SAAAulB,GACA,GAAAxnB,GAAA2tC,EAAAnmB,GAAA,GAAAomB,EAEA,OADA5tC,GAAA6F,SAAA,WAA+B,MAAA2hB,IAC/BxnB,GAEAwU,MAAA,SAAAgT,GACA,GAAA5yB,GAAAq5C,EAAAzmB,GAAA,GAAAylB,GAEA,OADAr4C,GAAAiR,SAAA,WAA+B,MAAA2hB,IAC/B5yB,GAEA0/C,UAAA,SAAA9sB,GACA,GAAAxnB,GAAA2tC,EAAAnmB,GAAA,GAAAirB,EAEA,OADAzyC,GAAA6F,SAAA,WAA+B,MAAA2hB,IAC/BxnB,GAEAu0C,SAAA,SAAA/sB,GACA,GAAA5yB,GAAAq5C,EAAAzmB,EAAA6lB,GAEA,OADAz4C,GAAAiR,SAAA,WAA+B,MAAA2hB,IAC/B5yB,IAUA,QAAAi5C,IAAA31C,EAAA0vB,EAAAzqB,GACA,GAAA2qB,GAAA5vB,EAAA,SACA8R,GAAA8d,GAAA5vB,KAAA,GACAF,EAAAgS,EAAAhS,MACA,OAAA8vB,IAAA9vB,EAAAmF,EAAA,GAAA5B,OAAA4B,EAAAnF,EAAA,GAAAwd,KAAAoS,GAAA5d,KAGA,QAAAwqC,IAAA1kC,GACA,MAAAA,GAAA2kC,QAAAC,GAAA,QAGA,QAAApD,IAAAhnC,GACA,UAAAqqC,QAAA,OAAArqC,EAAA5M,IAAA82C,IAAAh/B,KAAA,cAGA,QAAA+7B,IAAAjnC,GAEA,IADA,GAAA5M,MAAc7I,GAAA,EAAAsP,EAAAmG,EAAAtS,SACdnD,EAAAsP,GAAAzG,EAAA4M,EAAAzV,GAAA2Z,eAAA3Z,CACA,OAAA6I,GAGA,QAAAs2C,IAAA11C,EAAA0L,EAAAnV,GACA,GAAAsP,GAAAywC,GAAAlmC,KAAA1E,EAAA7U,MAAAN,IAAA,GACA,OAAAsP,IAAA7F,EAAAmwB,GAAAtqB,EAAA,GAAAtP,EAAAsP,EAAA,GAAAnM,SAAA,EAGA,QAAA+7C,IAAAz1C,EAAA0L,EAAAnV,GACA,GAAAsP,GAAAywC,GAAAlmC,KAAA1E,EAAA7U,MAAAN,GACA,OAAAsP,IAAA7F,EAAA+vC,GAAAlqC,EAAA,GAAAtP,EAAAsP,EAAA,GAAAnM,SAAA,EAGA,QAAAi8C,IAAA31C,EAAA0L,EAAAnV,GACA,GAAAsP,GAAAywC,GAAAlmC,KAAA1E,EAAA7U,MAAAN,GACA,OAAAsP,IAAA7F,EAAAsiB,GAAAzc,EAAA,GAAAtP,EAAAsP,EAAA,GAAAnM,SAAA,EAGA,QAAAm8C,IAAA71C,EAAA0L,EAAAnV,GACA,GAAAsP,GAAAywC,GAAAlmC,KAAA1E,EAAA7U,MAAAN,IAAA,GACA,OAAAsP,IAAA7F,EAAApC,GAAAiI,EAAA,GAAAtP,EAAAsP,EAAA,GAAAnM,SAAA,EAGA,QAAAk8C,IAAA51C,EAAA0L,EAAAnV,GACA,GAAAsP,GAAAywC,GAAAlmC,KAAA1E,EAAA7U,MAAAN,IAAA,GACA,OAAAsP,IAAA7F,EAAApC,GAAAiI,EAAA,KAAAA,EAAA,gBAAAtP,EAAAsP,EAAA,GAAAnM,SAAA,EAGA,QAAAo8C,IAAA91C,EAAA0L,EAAAnV,GACA,GAAAsP,GAAA,gCAAAuK,KAAA1E,EAAA7U,MAAAN,IAAA,GACA,OAAAsP,IAAA7F,EAAAgwC,EAAAnqC,EAAA,OAAAA,EAAA,IAAAA,EAAA,WAAAtP,EAAAsP,EAAA,GAAAnM,SAAA,EAGA,QAAA47C,IAAAt1C,EAAA0L,EAAAnV,GACA,GAAAsP,GAAAywC,GAAAlmC,KAAA1E,EAAA7U,MAAAN,IAAA,GACA,OAAAsP,IAAA7F,EAAA5J,EAAAyP,EAAA,KAAAtP,EAAAsP,EAAA,GAAAnM,SAAA,EAGA,QAAAw7C,IAAAl1C,EAAA0L,EAAAnV,GACA,GAAAsP,GAAAywC,GAAAlmC,KAAA1E,EAAA7U,MAAAN,IAAA,GACA,OAAAsP,IAAA7F,KAAA6F,EAAA,GAAAtP,EAAAsP,EAAA,GAAAnM,SAAA,EAGA,QAAA07C,IAAAp1C,EAAA0L,EAAAnV,GACA,GAAAsP,GAAAywC,GAAAlmC,KAAA1E,EAAA7U,MAAAN,IAAA,GACA,OAAAsP,IAAA7F,EAAA5J,EAAA,EAAA4J,KAAA6F,EAAA,GAAAtP,EAAAsP,EAAA,GAAAnM,SAAA,EAGA,QAAAy7C,IAAAn1C,EAAA0L,EAAAnV,GACA,GAAAsP,GAAAywC,GAAAlmC,KAAA1E,EAAA7U,MAAAN,IAAA,GACA,OAAAsP,IAAA7F,EAAA4uC,GAAA/oC,EAAA,GAAAtP,EAAAsP,EAAA,GAAAnM,SAAA,EAGA,QAAA67C,IAAAv1C,EAAA0L,EAAAnV,GACA,GAAAsP,GAAAywC,GAAAlmC,KAAA1E,EAAA7U,MAAAN,IAAA,GACA,OAAAsP,IAAA7F,EAAA6uC,GAAAhpC,EAAA,GAAAtP,EAAAsP,EAAA,GAAAnM,SAAA,EAGA,QAAA87C,IAAAx1C,EAAA0L,EAAAnV,GACA,GAAAsP,GAAAywC,GAAAlmC,KAAA1E,EAAA7U,MAAAN,IAAA,GACA,OAAAsP,IAAA7F,EAAA8iB,GAAAjd,EAAA,GAAAtP,EAAAsP,EAAA,GAAAnM,SAAA,EAGA,QAAA27C,IAAAr1C,EAAA0L,EAAAnV,GACA,GAAAsP,GAAAywC,GAAAlmC,KAAA1E,EAAA7U,MAAAN,IAAA,GACA,OAAAsP,IAAA7F,EAAAwiC,GAAA38B,EAAA,GAAAtP,EAAAsP,EAAA,GAAAnM,SAAA,EAGA,QAAAq8C,IAAA/1C,EAAA0L,EAAAnV,GACA,GAAAsP,GAAA0wC,GAAAnmC,KAAA1E,EAAA7U,MAAAN,IAAA,GACA,OAAAsP,GAAAtP,EAAAsP,EAAA,GAAAnM,QAAA,EAGA,QAAAw5C,IAAAlzC,EAAA1J,GACA,MAAAi5C,IAAAvvC,EAAAguC,UAAA13C,EAAA,GAGA,QAAA68C,IAAAnzC,EAAA1J,GACA,MAAAi5C,IAAAvvC,EAAAkyC,WAAA57C,EAAA,GAGA,QAAA+8C,IAAArzC,EAAA1J,GACA,MAAAi5C,IAAAvvC,EAAAkyC,WAAA,OAAA57C,EAAA,GAGA,QAAAg9C,IAAAtzC,EAAA1J,GACA,MAAAi5C,IAAA,EAAAiH,GAAAx0C,MAAAy0C,GAAAz2C,MAAA1J,EAAA,GAGA,QAAAi9C,IAAAvzC,EAAA1J,GACA,MAAAi5C,IAAAvvC,EAAA02C,kBAAApgD,EAAA,GAGA,QAAAk9C,IAAAxzC,EAAA1J,GACA,MAAAi5C,IAAAvvC,EAAA6xC,WAAA,EAAAv7C,EAAA,GAGA,QAAAm9C,IAAAzzC,EAAA1J,GACA,MAAAi5C,IAAAvvC,EAAA22C,aAAArgD,EAAA,GAGA,QAAAo9C,IAAA1zC,EAAA1J,GACA,MAAAi5C,IAAAvvC,EAAA42C,aAAAtgD,EAAA,GAGA,QAAAq9C,IAAA3zC,EAAA1J,GACA,MAAAi5C,IAAAsH,GAAA70C,MAAAy0C,GAAAz2C,MAAA1J,EAAA,GAGA,QAAAs9C,IAAA5zC,GACA,MAAAA,GAAAiuC,SAGA,QAAA4F,IAAA7zC,EAAA1J,GACA,MAAAi5C,IAAAuH,GAAA90C,MAAAy0C,GAAAz2C,MAAA1J,EAAA,GAGA,QAAAw9C,IAAA9zC,EAAA1J,GACA,MAAAi5C,IAAAvvC,EAAA+2C,cAAA,IAAAzgD,EAAA,GAGA,QAAAy9C,IAAA/zC,EAAA1J,GACA,MAAAi5C,IAAAvvC,EAAA+2C,cAAA,IAAAzgD,EAAA,GAGA,QAAA09C,IAAAh0C,GACA,GAAAyS,GAAAzS,EAAAmuC,mBACA,QAAA17B,EAAA,OAAAA,IAAA,QACA88B,GAAA98B,EAAA,YACA88B,GAAA98B,EAAA,UAGA,QAAA2hC,IAAAp0C,EAAA1J,GACA,MAAAi5C,IAAAvvC,EAAAwuC,aAAAl4C,EAAA,GAGA,QAAA+9C,IAAAr0C,EAAA1J,GACA,MAAAi5C,IAAAvvC,EAAAyyC,cAAAn8C,EAAA,GAGA,QAAAg+C,IAAAt0C,EAAA1J,GACA,MAAAi5C,IAAAvvC,EAAAyyC,cAAA,OAAAn8C,EAAA,GAGA,QAAAi+C,IAAAv0C,EAAA1J,GACA,MAAAi5C,IAAA,EAAAyH,GAAAh1C,MAAAi1C,GAAAj3C,MAAA1J,EAAA,GAGA,QAAAk+C,IAAAx0C,EAAA1J,GACA,MAAAi5C,IAAAvvC,EAAAk3C,qBAAA5gD,EAAA,GAGA,QAAAm+C,IAAAz0C,EAAA1J,GACA,MAAAi5C,IAAAvvC,EAAAsyC,cAAA,EAAAh8C,EAAA,GAGA,QAAAo+C,IAAA10C,EAAA1J,GACA,MAAAi5C,IAAAvvC,EAAAm3C,gBAAA7gD,EAAA,GAGA,QAAAq+C,IAAA30C,EAAA1J,GACA,MAAAi5C,IAAAvvC,EAAAo3C,gBAAA9gD,EAAA,GAGA,QAAAs+C,IAAA50C,EAAA1J,GACA,MAAAi5C,IAAA8H,GAAAr1C,MAAAi1C,GAAAj3C,MAAA1J,EAAA,GAGA,QAAAu+C,IAAA70C,GACA,MAAAA,GAAAyuC,YAGA,QAAAqG,IAAA90C,EAAA1J,GACA,MAAAi5C,IAAA+H,GAAAt1C,MAAAi1C,GAAAj3C,MAAA1J,EAAA,GAGA,QAAAy+C,IAAA/0C,EAAA1J,GACA,MAAAi5C,IAAAvvC,EAAAu3C,iBAAA,IAAAjhD,EAAA,GAGA,QAAA0+C,IAAAh1C,EAAA1J,GACA,MAAAi5C,IAAAvvC,EAAAu3C,iBAAA,IAAAjhD,EAAA,GAGA,QAAA2+C,MACA,cAGA,QAAAf,MACA,UAoBA,QAAAsD,IAAA1nC,GAMA,MALA2nC,IAAAtI,GAAAr/B,GACA/Z,EAAA2hD,WAAAD,GAAA9zC,OACA5N,EAAAgJ,UAAA04C,GAAAvhC,MACAngB,EAAAigD,UAAAyB,GAAAzB,UACAjgD,EAAAkgD,SAAAwB,GAAAxB,SACAwB,GAKA,QAAAE,IAAAnK,GACA,MAAAA,GAAAoK,cAOA,QAAAC,IAAAnsC,GACA,GAAA8hC,GAAA,GAAAC,MAAA/hC,EACA,OAAA+I,OAAA+4B,GAAA,KAAAA,EAeA,QAAAsK,IAAAlyC,GACA,UAAA6nC,MAAA7nC,GAGA,QAAAmyC,IAAAnyC,GACA,MAAAA,aAAA6nC,OAAA7nC,GAAA,GAAA6nC,OAAA7nC,GAGA,QAAAoyC,IAAAC,EAAAC,EAAAC,EAAArI,EAAAsI,EAAAC,EAAAC,EAAAC,EAAA50C,GAmCA,QAAApC,GAAAisC,GACA,OAAA8K,EAAA9K,KAAAgL,EACAH,EAAA7K,KAAAiL,EACAL,EAAA5K,KAAAkL,EACA5I,EAAAtC,KAAAmL,EACAT,EAAA1K,KAAA2K,EAAA3K,KAAAoL,EAAAC,EACAZ,EAAAzK,KAAAsE,EACAgC,GAAAtG,GAGA,QAAAsL,GAAAt/B,EAAA1X,EAAAC,EAAA0wB,GAMA,GALA,MAAAjZ,MAAA,IAKA,gBAAAA,GAAA,CACA,GAAArK,GAAAhR,KAAA+D,IAAAH,EAAAD,GAAA0X,EACAjjB,EAAAwiD,GAAA,SAAAxiD,GAAoC,MAAAA,GAAA,KAAemI,MAAAs6C,EAAA7pC,EACnD5Y,KAAAyiD,EAAAt/C,QACA+4B,EAAA5wB,EAAAC,EAAAm3C,GAAAl3C,EAAAk3C,GAAAz/B,GACAA,EAAAy+B,GACO1hD,GACPA,EAAAyiD,EAAA7pC,EAAA6pC,EAAAziD,EAAA,MAAAyiD,EAAAziD,GAAA,GAAA4Y,EAAA5Y,EAAA,EAAAA,GACAk8B,EAAAl8B,EAAA,GACAijB,EAAAjjB,EAAA,KAEAk8B,EAAA5wB,EAAAC,EAAAC,EAAAyX,GACAA,EAAA++B,GAIA,aAAA9lB,EAAAjZ,IAAAgD,MAAAiW,GAlEA,GAAA1vB,GAAAooC,GAAAX,GAAA3zB,IACAmb,EAAAjvB,EAAAivB,OACA/yB,EAAA8D,EAAA9D,OAEAu5C,EAAA70C,EAAA,OACA80C,EAAA90C,EAAA,OACA+0C,EAAA/0C,EAAA,SACAg1C,EAAAh1C,EAAA,SACAi1C,EAAAj1C,EAAA,SACAk1C,EAAAl1C,EAAA,SACAmuC,EAAAnuC,EAAA,MACAmwC,EAAAnwC,EAAA,MAEAq1C,IACAV,EAAA,EAAAY,KACAZ,EAAA,IAAAY,KACAZ,EAAA,MAAAY,KACAZ,EAAA,MAAAY,KACAb,EAAA,EAAAc,KACAd,EAAA,IAAAc,KACAd,EAAA,MAAAc,KACAd,EAAA,MAAAc,KACAf,EAAA,EAAAgB,KACAhB,EAAA,IAAAgB,KACAhB,EAAA,IAAAgB,KACAhB,EAAA,MAAAgB,KACAtJ,EAAA,EAAAuJ,KACAvJ,EAAA,IAAAuJ,KACAlB,EAAA,EAAAmB,KACApB,EAAA,EAAAqB,KACArB,EAAA,IAAAqB,KACAtB,EAAA,EAAAgB,IAyEA,OAnCAl2C,GAAAivB,OAAA,SAAAp0B,GACA,UAAA6vC,MAAAzb,EAAAp0B,KAGAmF,EAAA9D,OAAA,SAAAqG,GACA,MAAAC,WAAA7L,OAAAuF,EAAAqsC,GAAAn1C,KAAAmP,EAAAyyC,KAAA94C,IAAAG,IAAA04C,KAGA/0C,EAAAtF,MAAA,SAAA+b,EAAAiZ,GACA,GAIA7sB,GAJA5F,EAAAf,IACA6T,EAAA9S,EAAA,GACAgT,EAAAhT,IAAAtG,OAAA,GACAwX,EAAA8B,EAAAF,CAKA,OAHA5B,KAAAtL,EAAAkN,IAAAE,IAAApN,GACAA,EAAAkzC,EAAAt/B,EAAA1G,EAAAE,EAAAyf,GACA7sB,MAAAzG,MAAA2T,EAAAE,EAAA,MACA9B,EAAAtL,EAAAwxB,UAAAxxB,GAGA7C,EAAAxB,WAAA,SAAAS,EAAAknB,GACA,aAAAA,EAAA3nB,EAAAoC,EAAAulB,IAGAnmB,EAAA2oC,KAAA,SAAAlyB,EAAAiZ,GACA,GAAAzyB,GAAAf,GACA,QAAAua,EAAAs/B,EAAAt/B,EAAAxZ,EAAA,GAAAA,IAAAtG,OAAA,GAAA+4B,IACAxzB,EAAAysC,GAAA1rC,EAAAwZ,IACAzW,GAGAA,EAAAoB,KAAA,WACA,MAAAA,IAAApB,EAAAi1C,GAAAC,EAAAC,EAAAC,EAAArI,EAAAsI,EAAAC,EAAAC,EAAAC,EAAA50C,KAGAZ,EA0CA,QAAAy2C,IAAAr6C,GACA,GAAA0G,GAAA1G,EAAAzF,MACA,iBAAAkM,GACA,MAAAzG,GAAAhB,KAAAgE,IAAA,EAAAhE,KAAAG,IAAAuH,EAAA,EAAA1H,KAAAC,MAAAwH,EAAAC,OAYA,QAAA4zC,IAAAC,GAKA,QAAA32C,GAAAvF,GACA,GAAAoI,IAAApI,EAAA+pB,IAAAE,EAAAF,EACA,OAAAmyB,GAAAxO,EAAA/sC,KAAAgE,IAAA,EAAAhE,KAAAG,IAAA,EAAAsH,OANA,GAAA2hB,GAAA,EACAE,EAAA,EACAyjB,GAAA,CAuBA,OAhBAnoC,GAAA9D,OAAA,SAAAqG,GACA,MAAAC,WAAA7L,QAAA6tB,GAAAjiB,EAAA,GAAAmiB,GAAAniB,EAAA,GAAAvC,IAAAwkB,EAAAE,IAGA1kB,EAAAmoC,MAAA,SAAA5lC,GACA,MAAAC,WAAA7L,QAAAwxC,IAAA5lC,EAAAvC,GAAAmoC,GAGAnoC,EAAA22C,aAAA,SAAAp0C,GACA,MAAAC,WAAA7L,QAAAggD,EAAAp0C,EAAAvC,GAAA22C,GAGA32C,EAAAoB,KAAA,WACA,MAAAs1C,IAAAC,GAAAz6C,QAAAsoB,EAAAE,IAAAyjB,UAGAO,GAAA1oC,GAsBA,QAAA42C,IAAAn8C,GACA,MAAAA,GAAA,IAAAA,GAAA,EAAAo8C,GAAAz7C,KAAAosB,KAAA/sB,GAGA,QAAAq8C,IAAAr8C,GACA,MAAAA,IAAA,EAAAs8C,GAAAt8C,IAAA,GAAAs8C,GAAA37C,KAAAssB,KAAAjtB,GAGA,QAAAu8C,IAAA/5C,GACA,MAAAA,GAAAe,YAGA,QAAAi5C,IAAAh6C,GACA,MAAAA,GAAAgB,YAGA,QAAAi5C,IAAAj6C,GACA,MAAAA,GAAAmB,WAGA,QAAA+4C,IAAAl6C,GACA,MAAAA,GAAAoB,SAGA,QAAA+4C,IAAAn6C,GACA,MAAAA,MAAAkB,SAGA,QAAAk5C,IAAA7yB,EAAAC,EAAAC,EAAAC,EAAA+U,EAAAC,EAAA+G,EAAAC,GACA,GAAA2W,GAAA5yB,EAAAF,EAAA+yB,EAAA5yB,EAAAF,EACA+yB,EAAA9W,EAAAhH,EAAA+d,EAAA9W,EAAAhH,EACA92B,GAAA20C,GAAA/yB,EAAAkV,GAAA8d,GAAAjzB,EAAAkV,KAAA+d,EAAAH,EAAAE,EAAAD,EACA,QAAA/yB,EAAA3hB,EAAAy0C,EAAA7yB,EAAA5hB,EAAA00C,GAKA,QAAAG,IAAAlzB,EAAAC,EAAAC,EAAAC,EAAA0b,EAAAsX,EAAAC,GACA,GAAAC,GAAArzB,EAAAE,EACAozB,EAAArzB,EAAAE,EACAozB,GAAAH,EAAAD,MAAAK,GAAAH,IAAAC,KACA1V,EAAA2V,EAAAD,EACAzV,GAAA0V,EAAAF,EACAI,EAAAzzB,EAAA4d,EACA8V,EAAAzzB,EAAA4d,EACAiV,EAAA5yB,EAAA0d,EACAmV,EAAA5yB,EAAA0d,EACAtN,GAAAkjB,EAAAX,GAAA,EACAriB,GAAAijB,EAAAX,GAAA,EACAhrC,EAAA+qC,EAAAW,EACAzrC,EAAA+qC,EAAAW,EACA1e,EAAAjtB,IAAAC,IACA2B,EAAAkyB,EAAAsX,EACA3mC,EAAAinC,EAAAV,EAAAD,EAAAY,EACAj7C,GAAAuP,EAAA,QAAAwrC,GAAAG,GAAA,EAAAhqC,IAAAqrB,EAAAxoB,MACAonC,GAAApnC,EAAAxE,EAAAD,EAAAtP,GAAAu8B,EACAsD,IAAA9rB,EAAAzE,EAAAC,EAAAvP,GAAAu8B,EACA6e,GAAArnC,EAAAxE,EAAAD,EAAAtP,GAAAu8B,EACA8e,IAAAtnC,EAAAzE,EAAAC,EAAAvP,GAAAu8B,EACA+e,EAAAH,EAAArjB,EACAyjB,EAAA1b,EAAA7H,EACAwjB,EAAAJ,EAAAtjB,EACA2jB,EAAAJ,EAAArjB,CAMA,OAFAsjB,KAAAC,IAAAC,IAAAC,MAAAN,EAAAC,EAAAvb,EAAAwb,IAGAtqB,GAAAoqB,EACAnqB,GAAA6O,EACA+a,KAAAzV,EACA0V,KAAAzV,EACA4V,IAAAG,GAAA/X,EAAAlyB,EAAA,GACA+pC,IAAApb,GAAAuD,EAAAlyB,EAAA,IA8LA,QAAAwqC,IAAAn4C,GACArM,KAAA6iC,SAAAx2B,EA+BA,QAAAo4C,IAAArlD,GACA,MAAAA,GAAA,GAGA,QAAAslD,IAAAtlD,GACA,MAAAA,GAAA,GAmPA,QAAAulD,IAAA/7C,GACA5I,KAAA4kD,OAAAh8C,EAqBA,QAAAi8C,IAAAj8C,GAEA,QAAAk8C,GAAAz4C,GACA,UAAAs4C,IAAA/7C,EAAAyD,IAKA,MAFAy4C,GAAAF,OAAAh8C,EAEAk8C,EAGA,QAAAC,IAAAxqC,GACA,GAAApb,GAAAob,EAAA3R,KASA,OAPA2R,GAAAkd,MAAAld,EAAAjU,QAAAiU,GAAAjU,EACAiU,EAAAgU,OAAAhU,EAAA7T,QAAA6T,GAAA7T,EAEA6T,EAAA3R,MAAA,SAAAwF,GACA,MAAAC,WAAA7L,OAAArD,EAAA0lD,GAAAz2C,IAAAjP,IAAAylD,QAGArqC,EAwLA,QAAAyqC,IAAAjzC,EAAAzL,EAAAI,GACAqL,EAAA8wB,SAAAoiB,eACA,EAAAlzC,EAAAic,IAAAjc,EAAAmc,KAAA,GACA,EAAAnc,EAAAkc,IAAAlc,EAAAoc,KAAA,GACApc,EAAAic,IAAA,EAAAjc,EAAAmc,KAAA,GACAnc,EAAAkc,IAAA,EAAAlc,EAAAoc,KAAA,GACApc,EAAAic,IAAA,EAAAjc,EAAAmc,IAAA5nB,GAAA,GACAyL,EAAAkc,IAAA,EAAAlc,EAAAoc,IAAAznB,GAAA,GAIA,QAAAw+C,IAAA74C,GACArM,KAAA6iC,SAAAx2B,EAwCA,QAAA84C,IAAA94C,GACArM,KAAA6iC,SAAAx2B,EAiDA,QAAA+4C,IAAA/4C,GACArM,KAAA6iC,SAAAx2B,EAqCA,QAAAg5C,IAAAh5C,EAAAkkC,GACAvwC,KAAAslD,OAAA,GAAAJ,IAAA74C,GACArM,KAAAulD,MAAAhV,EAqDA,QAAAiV,IAAAzzC,EAAAzL,EAAAI,GACAqL,EAAA8wB,SAAAoiB,cACAlzC,EAAAmc,IAAAnc,EAAA0zC,IAAA1zC,EAAA2zC,IAAA3zC,EAAAic,KACAjc,EAAAoc,IAAApc,EAAA0zC,IAAA1zC,EAAA4zC,IAAA5zC,EAAAkc,KACAlc,EAAA2zC,IAAA3zC,EAAA0zC,IAAA1zC,EAAAmc,IAAA5nB,GACAyL,EAAA4zC,IAAA5zC,EAAA0zC,IAAA1zC,EAAAoc,IAAAznB,GACAqL,EAAA2zC,IACA3zC,EAAA4zC,KAIA,QAAAC,IAAAv5C,EAAAw5C,GACA7lD,KAAA6iC,SAAAx2B,EACArM,KAAAylD,IAAA,EAAAI,GAAA,EAiDA,QAAAC,IAAAz5C,EAAAw5C,GACA7lD,KAAA6iC,SAAAx2B,EACArM,KAAAylD,IAAA,EAAAI,GAAA,EAyDA,QAAAE,IAAA15C,EAAAw5C,GACA7lD,KAAA6iC,SAAAx2B,EACArM,KAAAylD,IAAA,EAAAI,GAAA,EA8CA,QAAAG,IAAAj0C,EAAAzL,EAAAI,GACA,GAAA6pB,GAAAxe,EAAAmc,IACAsC,EAAAze,EAAAoc,IACAoX,EAAAxzB,EAAA2zC,IACAlgB,EAAAzzB,EAAA4zC,GAEA,IAAA5zC,EAAAk0C,OAAAC,GAAA,CACA,GAAArmD,GAAA,EAAAkS,EAAAo0C,QAAA,EAAAp0C,EAAAk0C,OAAAl0C,EAAAq0C,OAAAr0C,EAAAs0C,QACA13C,EAAA,EAAAoD,EAAAk0C,QAAAl0C,EAAAk0C,OAAAl0C,EAAAq0C,OACA71B,MAAA1wB,EAAAkS,EAAAic,IAAAjc,EAAAs0C,QAAAt0C,EAAA2zC,IAAA3zC,EAAAo0C,SAAAx3C,EACA6hB,KAAA3wB,EAAAkS,EAAAkc,IAAAlc,EAAAs0C,QAAAt0C,EAAA4zC,IAAA5zC,EAAAo0C,SAAAx3C,EAGA,GAAAoD,EAAAu0C,OAAAJ,GAAA,CACA,GAAApmD,GAAA,EAAAiS,EAAAw0C,QAAA,EAAAx0C,EAAAu0C,OAAAv0C,EAAAq0C,OAAAr0C,EAAAs0C,QACAnnD,EAAA,EAAA6S,EAAAu0C,QAAAv0C,EAAAu0C,OAAAv0C,EAAAq0C,OACA7gB,MAAAzlC,EAAAiS,EAAAmc,IAAAnc,EAAAw0C,QAAAjgD,EAAAyL,EAAAs0C,SAAAnnD,EACAsmC,KAAA1lC,EAAAiS,EAAAoc,IAAApc,EAAAw0C,QAAA7/C,EAAAqL,EAAAs0C,SAAAnnD,EAGA6S,EAAA8wB,SAAAoiB,cAAA10B,EAAAC,EAAA+U,EAAAC,EAAAzzB,EAAA2zC,IAAA3zC,EAAA4zC,KAGA,QAAAa,IAAAn6C,EAAAikC,GACAtwC,KAAA6iC,SAAAx2B,EACArM,KAAAymD,OAAAnW,EA6DA,QAAAoW,IAAAr6C,EAAAikC,GACAtwC,KAAA6iC,SAAAx2B,EACArM,KAAAymD,OAAAnW,EAqEA,QAAAqW,IAAAt6C,EAAAikC,GACAtwC,KAAA6iC,SAAAx2B,EACArM,KAAAymD,OAAAnW,EA0DA,QAAAsW,IAAAv6C,GACArM,KAAA6iC,SAAAx2B,EAuBA,QAAAw6C,IAAAvgD,GACA,MAAAA,GAAA,OAOA,QAAAwgD,IAAA/0C,EAAAwzB,EAAAC,GACA,GAAAuhB,GAAAh1C,EAAAmc,IAAAnc,EAAAic,IACAg5B,EAAAzhB,EAAAxzB,EAAAmc,IACArC,GAAA9Z,EAAAoc,IAAApc,EAAAkc,MAAA84B,GAAAC,EAAA,OACAj7B,GAAAyZ,EAAAzzB,EAAAoc,MAAA64B,GAAAD,EAAA,OACA3nD,GAAAysB,EAAAm7B,EAAAj7B,EAAAg7B,MAAAC,EACA,QAAAH,GAAAh7B,GAAAg7B,GAAA96B,IAAA9kB,KAAAG,IAAAH,KAAA+D,IAAA6gB,GAAA5kB,KAAA+D,IAAA+gB,GAAA,GAAA9kB,KAAA+D,IAAA5L,KAAA,EAIA,QAAA6nD,IAAAl1C,EAAArD,GACA,GAAA2L,GAAAtI,EAAAmc,IAAAnc,EAAAic,GACA,OAAA3T,IAAA,GAAAtI,EAAAoc,IAAApc,EAAAkc,KAAA5T,EAAA3L,GAAA,EAAAA,EAMA,QAAAw4C,IAAAn1C,EAAA6J,EAAAE,GACA,GAAAuU,GAAAte,EAAAic,IACAsC,EAAAve,EAAAkc,IACAsC,EAAAxe,EAAAmc,IACAsC,EAAAze,EAAAoc,IACA/V,GAAAmY,EAAAF,GAAA,CACAte,GAAA8wB,SAAAoiB,cAAA50B,EAAAjY,EAAAkY,EAAAlY,EAAAwD,EAAA2U,EAAAnY,EAAAoY,EAAApY,EAAA0D,EAAAyU,EAAAC,GAGA,QAAA22B,IAAA96C,GACArM,KAAA6iC,SAAAx2B,EA0CA,QAAA+6C,IAAA/6C,GACArM,KAAA6iC,SAAA,GAAAwkB,IAAAh7C,GAOA,QAAAg7C,IAAAh7C,GACArM,KAAA6iC,SAAAx2B,EAUA,QAAAi7C,IAAAj7C,GACA,UAAA86C,IAAA96C,GAGA,QAAAk7C,IAAAl7C,GACA,UAAA+6C,IAAA/6C,GAGA,QAAAm7C,IAAAn7C,GACArM,KAAA6iC,SAAAx2B,EA2CA,QAAAo7C,IAAAnhD,GACA,GAAAjH,GAEAH,EADAyP,EAAArI,EAAA9D,OAAA,EAEA3C,EAAA,GAAAkG,OAAA4I,GACA7O,EAAA,GAAAiG,OAAA4I,GACAqL,EAAA,GAAAjU,OAAA4I,EAEA,KADA9O,EAAA,KAAAC,EAAA,KAAAka,EAAA,GAAA1T,EAAA,KAAAA,EAAA,GACAjH,EAAA,EAAaA,EAAAsP,EAAA,IAAWtP,EAAAQ,EAAAR,GAAA,EAAAS,EAAAT,GAAA,EAAA2a,EAAA3a,GAAA,EAAAiH,EAAAjH,GAAA,EAAAiH,EAAAjH,EAAA,EAExB,KADAQ,EAAA8O,EAAA,KAAA7O,EAAA6O,EAAA,KAAAqL,EAAArL,EAAA,KAAArI,EAAAqI,EAAA,GAAArI,EAAAqI,GACAtP,EAAA,EAAaA,EAAAsP,IAAOtP,EAAAH,EAAAW,EAAAR,GAAAS,EAAAT,EAAA,GAAAS,EAAAT,IAAAH,EAAA8a,EAAA3a,IAAAH,EAAA8a,EAAA3a,EAAA,EAEpB,KADAQ,EAAA8O,EAAA,GAAAqL,EAAArL,EAAA,GAAA7O,EAAA6O,EAAA,GACAtP,EAAAsP,EAAA,EAAiBtP,GAAA,IAAQA,EAAAQ,EAAAR,IAAA2a,EAAA3a,GAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAEzB,KADAS,EAAA6O,EAAA,IAAArI,EAAAqI,GAAA9O,EAAA8O,EAAA,MACAtP,EAAA,EAAaA,EAAAsP,EAAA,IAAWtP,EAAAS,EAAAT,GAAA,EAAAiH,EAAAjH,EAAA,GAAAQ,EAAAR,EAAA,EACxB,QAAAQ,EAAAC,GAOA,QAAA4nD,IAAAr7C,EAAAqC,GACA1O,KAAA6iC,SAAAx2B,EACArM,KAAA2nD,GAAAj5C,EA4CA,QAAAk5C,IAAAv7C,GACA,UAAAq7C,IAAAr7C,EAAA,GAGA,QAAAw7C,IAAAx7C,GACA,UAAAq7C,IAAAr7C,EAAA,GAqBA,QAAAy7C,IAAAh/C,EAAApD,GACA,MAAAoD,GAAApD,GAkGA,QAAAqiD,IAAAC,GAEA,IADA,GAAAp0C,GAAA0G,EAAA,EAAAjb,GAAA,EAAAsP,EAAAq5C,EAAAxlD,SACAnD,EAAAsP,IAAAiF,GAAAo0C,EAAA3oD,GAAA,MAAAib,GAAA1G,EACA,OAAA0G,GA0CA,QAAA2tC,IAAAn/C,GACA,MAAAA,GAAA,GAGA,QAAAo/C,IAAAp/C,GACA,MAAAA,GAAA,GAGA,QAAAq/C,MACAnoD,KAAAoO,EAAA,KAGA,QAAAg6C,IAAAnkD,GACAA,EAAA40C,EACA50C,EAAA2Y,EACA3Y,EAAAqnC,EACArnC,EAAAokD,EACApkD,EAAAqkD,EACArkD,EAAAynB,EAAA,KAuLA,QAAA68B,IAAAz4B,EAAA7rB,GACA,GAAA7E,GAAA6E,EACAyb,EAAAzb,EAAAokD,EACAj2C,EAAAhT,EAAAy5C,CAEAzmC,GACAA,EAAAk5B,IAAAlsC,EAAAgT,EAAAk5B,EAAA5rB,EACAtN,EAAAi2C,EAAA3oC,EAEAoQ,EAAA1hB,EAAAsR,EAGAA,EAAAm5B,EAAAzmC,EACAhT,EAAAy5C,EAAAn5B,EACAtgB,EAAAipD,EAAA3oC,EAAA4rB,EACAlsC,EAAAipD,IAAAjpD,EAAAipD,EAAAxP,EAAAz5C,GACAsgB,EAAA4rB,EAAAlsC,EAGA,QAAAopD,IAAA14B,EAAA7rB,GACA,GAAA7E,GAAA6E,EACAyb,EAAAzb,EAAAqnC,EACAl5B,EAAAhT,EAAAy5C,CAEAzmC,GACAA,EAAAk5B,IAAAlsC,EAAAgT,EAAAk5B,EAAA5rB,EACAtN,EAAAi2C,EAAA3oC,EAEAoQ,EAAA1hB,EAAAsR,EAGAA,EAAAm5B,EAAAzmC,EACAhT,EAAAy5C,EAAAn5B,EACAtgB,EAAAksC,EAAA5rB,EAAA2oC,EACAjpD,EAAAksC,IAAAlsC,EAAAksC,EAAAuN,EAAAz5C,GACAsgB,EAAA2oC,EAAAjpD,EAGA,QAAAqpD,IAAAxkD,GACA,KAAAA,EAAAqnC,GAAArnC,IAAAqnC,CACA,OAAArnC,GAGA,QAAAykD,IAAAhhD,EAAAF,EAAAwV,EAAAC,GACA,GAAA0rC,IAAA,WACAplD,EAAAqlD,GAAA9mD,KAAA6mD,GAAA,CAOA,OANAA,GAAAjhD,OACAihD,EAAAnhD,QACAwV,GAAA6rC,GAAAF,EAAAjhD,EAAAF,EAAAwV,GACAC,GAAA4rC,GAAAF,EAAAnhD,EAAAE,EAAAuV,GACA6rC,GAAAphD,EAAAnE,OAAAwlD,UAAAjnD,KAAAyB,GACAulD,GAAAthD,EAAAjE,OAAAwlD,UAAAjnD,KAAAyB,GACAolD,EAGA,QAAAK,IAAAthD,EAAAsV,EAAAC,GACA,GAAA0rC,IAAA3rC,EAAAC,EAEA,OADA0rC,GAAAjhD,OACAihD,EAGA,QAAAE,IAAAF,EAAAjhD,EAAAF,EAAAyhD,GACAN,EAAA,IAAAA,EAAA,GAIGA,EAAAjhD,OAAAF,EACHmhD,EAAA,GAAAM,EAEAN,EAAA,GAAAM,GANAN,EAAA,GAAAM,EACAN,EAAAjhD,OACAihD,EAAAnhD,SASA,QAAA0hD,IAAAP,EAAAt4B,EAAAC,EAAAC,EAAAC,GACA,GAUAxW,GAVAna,EAAA8oD,EAAA,GACA7oD,EAAA6oD,EAAA,GACA3b,EAAAntC,EAAA,GACAotC,EAAAptC,EAAA,GACAspD,EAAArpD,EAAA,GACAspD,EAAAtpD,EAAA,GACA8b,EAAA,EACAE,EAAA,EACA1D,EAAA+wC,EAAAnc,EACA30B,EAAA+wC,EAAAnc,CAIA,IADAjzB,EAAAqW,EAAA2c,EACA50B,KAAA4B,EAAA,IAEA,GADAA,GAAA5B,EACAA,EAAA,GACA,GAAA4B,EAAA4B,EAAA,MACA5B,GAAA8B,MAAA9B,OACG,IAAA5B,EAAA,GACH,GAAA4B,EAAA8B,EAAA,MACA9B,GAAA4B,MAAA5B,GAIA,GADAA,EAAAuW,EAAAyc,EACA50B,KAAA4B,EAAA,IAEA,GADAA,GAAA5B,EACAA,EAAA,GACA,GAAA4B,EAAA8B,EAAA,MACA9B,GAAA4B,MAAA5B,OACG,IAAA5B,EAAA,GACH,GAAA4B,EAAA4B,EAAA,MACA5B,GAAA8B,MAAA9B,GAIA,GADAA,EAAAsW,EAAA2c,EACA50B,KAAA2B,EAAA,IAEA,GADAA,GAAA3B,EACAA,EAAA,GACA,GAAA2B,EAAA4B,EAAA,MACA5B,GAAA8B,MAAA9B,OACG,IAAA3B,EAAA,GACH,GAAA2B,EAAA8B,EAAA,MACA9B,GAAA4B,MAAA5B,GAIA,GADAA,EAAAwW,EAAAyc,EACA50B,KAAA2B,EAAA,IAEA,GADAA,GAAA3B,EACAA,EAAA,GACA,GAAA2B,EAAA8B,EAAA,MACA9B,GAAA4B,MAAA5B,OACG,IAAA3B,EAAA,GACH,GAAA2B,EAAA4B,EAAA,MACA5B,GAAA8B,MAAA9B,GAGA,QAAA4B,EAAA,GAAAE,EAAA,KAEAF,EAAA,IAAA+sC,EAAA,IAAA3b,EAAApxB,EAAAxD,EAAA60B,EAAArxB,EAAAvD,IACAyD,EAAA,IAAA6sC,EAAA,IAAA3b,EAAAlxB,EAAA1D,EAAA60B,EAAAnxB,EAAAzD,KACA,OAGA,QAAAgxC,IAAAV,EAAAt4B,EAAAC,EAAAC,EAAAC,GACA,GAAAvT,GAAA0rC,EAAA,EACA,IAAA1rC,EAAA,QAEA,IASAqsC,GACAC,EAVAvsC,EAAA2rC,EAAA,GACAjhD,EAAAihD,EAAAjhD,KACAF,EAAAmhD,EAAAnhD,MACAgiD,EAAA9hD,EAAA,GACA+hD,EAAA/hD,EAAA,GACAgiD,EAAAliD,EAAA,GACAmiD,EAAAniD,EAAA,GACAoiD,GAAAJ,EAAAE,GAAA,EACA9gB,GAAA6gB,EAAAE,GAAA,CAIA,IAAAA,IAAAF,EAAA,CACA,GAAAG,EAAAv5B,GAAAu5B,GAAAr5B,EAAA,MACA,IAAAi5B,EAAAE,EAAA,CACA,GAAA1sC,GACA,GAAAA,EAAA,IAAAwT,EAAA,WADAxT,IAAA4sC,EAAAt5B,EAEArT,IAAA2sC,EAAAp5B,OACK,CACL,GAAAxT,GACA,GAAAA,EAAA,GAAAsT,EAAA,WADAtT,IAAA4sC,EAAAp5B,EAEAvT,IAAA2sC,EAAAt5B,QAKA,IAFAg5B,GAAAE,EAAAE,IAAAC,EAAAF,GACAF,EAAA3gB,EAAA0gB,EAAAM,EACAN,GAAA,GAAAA,EAAA,EACA,GAAAE,EAAAE,EAAA,CACA,GAAA1sC,GACA,GAAAA,EAAA,IAAAwT,EAAA,WADAxT,KAAAsT,EAAAi5B,GAAAD,EAAAh5B,EAEArT,KAAAuT,EAAA+4B,GAAAD,EAAA94B,OACO,CACP,GAAAxT,GACA,GAAAA,EAAA,GAAAsT,EAAA,WADAtT,KAAAwT,EAAA+4B,GAAAD,EAAA94B,EAEAvT,KAAAqT,EAAAi5B,GAAAD,EAAAh5B,OAGA,IAAAm5B,EAAAE,EAAA,CACA,GAAA3sC,GACA,GAAAA,EAAA,IAAAuT,EAAA,WADAvT,IAAAqT,EAAAi5B,EAAAj5B,EAAAk5B,EAEAtsC,IAAAsT,EAAA+4B,EAAA/4B,EAAAg5B,OACO,CACP,GAAAvsC,GACA,GAAAA,EAAA,GAAAqT,EAAA,WADArT,IAAAuT,EAAA+4B,EAAA/4B,EAAAg5B,EAEAtsC,IAAAoT,EAAAi5B,EAAAj5B,EAAAk5B,GAOA,MAFAZ,GAAA,GAAA3rC,EACA2rC,EAAA,GAAA1rC,GACA,EAGA,QAAA4sC,IAAAx5B,EAAAC,EAAAC,EAAAC,GAIA,IAHA,GACAm4B,GADAtpD,EAAAupD,GAAApmD,OAGAnD,KACAgqD,GAAAV,EAAAC,GAAAvpD,GAAAgxB,EAAAC,EAAAC,EAAAC,IACA04B,GAAAP,EAAAt4B,EAAAC,EAAAC,EAAAC,KACAvpB,KAAA+D,IAAA29C,EAAA,MAAAA,EAAA,OAAAmB,IACA7iD,KAAA+D,IAAA29C,EAAA,MAAAA,EAAA,OAAAmB,WACAlB,IAAAvpD,GAKA,QAAA0qD,IAAAC,GACA,MAAAlB,IAAAkB,EAAAzmD,QACAymD,OACAjB,cAIA,QAAAkB,IAAAC,EAAAvB,GACA,GAAAqB,GAAAE,EAAAF,KACAG,EAAAxB,EAAAjhD,KACA0iD,EAAAzB,EAAAnhD,KAEA,OADAwiD,KAAAI,MAAAD,IAAAH,GACAI,EAAAnjD,KAAAgV,MAAAmuC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,KACAH,IAAAG,KAAAxB,EAAA,GAAAyB,EAAAzB,EAAA,KACAwB,EAAAxB,EAAA,GAAAyB,EAAAzB,EAAA,IACA1hD,KAAAgV,MAAAkuC,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,KAGA,QAAAE,IAAAH,EAAAvB,GACA,MAAAA,OAAAjhD,OAAAwiD,EAAAF,OAGA,QAAAM,IAAAJ,EAAAvB,GACA,MAAAA,OAAAjhD,OAAAwiD,EAAAF,OAGA,QAAAO,MACA,OAAAL,GAAAnB,EAAAx3C,EAAArS,EAAAG,EAAA,EAAAsP,EAAAm6C,GAAAtmD,OAA0DnD,EAAAsP,IAAOtP,EACjE,IAAA6qD,EAAApB,GAAAzpD,MAAAH,GAAA6pD,EAAAmB,EAAAnB,WAAAvmD,QAAA,CACA,GAAAe,GAAA,GAAAwC,OAAA7G,GACA48B,EAAA,GAAA/1B,OAAA7G,EACA,KAAAqS,EAAA,EAAiBA,EAAArS,IAAOqS,EAAAhO,EAAAgO,KAAAuqB,EAAAvqB,GAAA04C,GAAAC,EAAAtB,GAAAG,EAAAx3C,IAExB,KADAhO,EAAAuyC,KAAA,SAAAz2C,EAAAkS,GAAiC,MAAAuqB,GAAAvqB,GAAAuqB,EAAAz8B,KACjCkS,EAAA,EAAiBA,EAAArS,IAAOqS,EAAAuqB,EAAAvqB,GAAAw3C,EAAAxlD,EAAAgO,GACxB,KAAAA,EAAA,EAAiBA,EAAArS,IAAOqS,EAAAw3C,EAAAx3C,GAAAuqB,EAAAvqB,IAKxB,QAAAi5C,IAAAn6B,EAAAC,EAAAC,EAAAC,GACA,GACAi6B,GACAP,EACAF,EACAU,EACA3B,EACA4B,EACA//C,EACAggD,EACAC,EACAtqC,EACAuqC,EACAC,EAZAC,EAAAlC,GAAAtmD,OAaAuuB,GAAA,CAEA,KAAA05B,EAAA,EAAiBA,EAAAO,IAAgBP,EACjC,GAAAP,EAAApB,GAAA2B,GAAA,CAMA,IALAT,EAAAE,EAAAF,KACAjB,EAAAmB,EAAAnB,UACA2B,EAAA3B,EAAAvmD,OAGAkoD,KACA9B,GAAAG,EAAA2B,KACA3B,EAAAllC,OAAA6mC,EAAA,EAMA,KADAA,EAAA,EAAAC,EAAA5B,EAAAvmD,OACAkoD,EAAAC,GACApqC,EAAA+pC,GAAAJ,EAAAtB,GAAAG,EAAA2B,KAAAI,EAAAvqC,EAAA,GAAAwqC,EAAAxqC,EAAA,GACA3V,EAAAy/C,GAAAH,EAAAtB,GAAAG,IAAA2B,EAAAC,KAAAC,EAAAhgD,EAAA,GAAAigD,EAAAjgD,EAAA,IACA3D,KAAA+D,IAAA8/C,EAAAF,GAAAd,IAAA7iD,KAAA+D,IAAA+/C,EAAAF,GAAAf,MACAf,EAAAllC,OAAA6mC,EAAA,EAAA9B,GAAA9mD,KAAAknD,GAAAgB,EAAAzpC,EACAtZ,KAAA+D,IAAA8/C,EAAAz6B,GAAAy5B,IAAAt5B,EAAAu6B,EAAAjB,IAAAz5B,EAAAppB,KAAA+D,IAAA4/C,EAAAv6B,GAAAy5B,GAAAe,EAAAr6B,GACAvpB,KAAA+D,IAAA+/C,EAAAv6B,GAAAs5B,IAAAv5B,EAAAu6B,EAAAhB,IAAA7iD,KAAA+D,IAAA6/C,EAAAr6B,GAAAs5B,GAAAc,EAAAr6B,EAAAC,GACAvpB,KAAA+D,IAAA8/C,EAAAv6B,GAAAu5B,IAAAiB,EAAAz6B,EAAAw5B,IAAAv5B,EAAAtpB,KAAA+D,IAAA4/C,EAAAr6B,GAAAu5B,GAAAe,EAAAv6B,GACArpB,KAAA+D,IAAA+/C,EAAAz6B,GAAAw5B,IAAAgB,EAAAz6B,EAAAy5B,IAAA7iD,KAAA+D,IAAA6/C,EAAAv6B,GAAAw5B,GAAAc,EAAAv6B,EAAAC,GACA,YACAq6B,EAIAA,KAAA55B,GAAA,GAMA,GAAAA,EAAA,CACA,GAAA3Y,GAAAC,EAAAgtB,EAAA+H,EAAAjrB,GAEA,KAAAsoC,EAAA,EAAA15B,EAAA,KAAiC05B,EAAAO,IAAgBP,GACjDP,EAAApB,GAAA2B,MACAT,EAAAE,EAAAF,KACA5xC,EAAA4xC,EAAA,GAAA35B,EACAhY,EAAA2xC,EAAA,GAAA15B,EACA+U,EAAAjtB,IAAAC,IACAgtB,EAAA+H,MAAA/H,EAAAtU,EAAAm5B,GAIA,IAAAn5B,EAAA,CACA,GAAAk6B,IAAA56B,EAAAC,GAAA46B,GAAA76B,EAAAG,GAAA26B,GAAA56B,EAAAC,GAAA46B,GAAA76B,EAAAD,EACAS,GAAAg4B,UAAAjnD,KACA8mD,GAAA9mD,KAAAknD,GAAAgB,EAAAj5B,EAAAi5B,KAAAiB,EAAAC,IAAA,EACAtC,GAAA9mD,KAAAknD,GAAAgB,EAAAkB,EAAAC,IAAA,EACAvC,GAAA9mD,KAAAknD,GAAAgB,EAAAmB,EAAAC,IAAA,EACAxC,GAAA9mD,KAAAknD,GAAAgB,EAAAoB,EAAAH,IAAA,IAMA,IAAAR,EAAA,EAAiBA,EAAAO,IAAgBP,GACjCP,EAAApB,GAAA2B,MACAP,EAAAnB,UAAAvmD,cACAsmD,IAAA2B,IAUA,QAAAY,MACAjD,GAAApoD,MACAA,KAAAsG,EACAtG,KAAA0G,EACA1G,KAAA0J,IACA1J,KAAAgqD,KACAhqD,KAAA85B,GAAA,KAGA,QAAAwxB,IAAA5hD,GACA,GAAA6hD,GAAA7hD,EAAA4+C,EACAkD,EAAA9hD,EAAAgiB,CAEA,IAAA6/B,GAAAC,EAAA,CAEA,GAAAC,GAAAF,EAAAvB,KACA0B,EAAAhiD,EAAAsgD,KACA2B,EAAAH,EAAAxB,IAEA,IAAAyB,IAAAE,EAAA,CAEA,GAAAxC,GAAAuC,EAAA,GACAtC,EAAAsC,EAAA,GACA1e,EAAAye,EAAA,GAAAtC,EACAlc,EAAAwe,EAAA,GAAArC,EACAvvB,EAAA8xB,EAAA,GAAAxC,EACArvB,EAAA6xB,EAAA,GAAAvC,EAEAtgD,EAAA,GAAAkkC,EAAAlT,EAAAmT,EAAApT,EACA,MAAA/wB,IAAA8iD,IAAA,CAEA,GAAAC,GAAA7e,IAAAC,IACA6e,EAAAjyB,IAAAC,IACAxzB,GAAAwzB,EAAA+xB,EAAA5e,EAAA6e,GAAAhjD,EACApC,GAAAsmC,EAAA8e,EAAAjyB,EAAAgyB,GAAA/iD,EAEA0iC,EAAAugB,GAAA3sC,OAAA,GAAAisC,GACA7f,GAAA9hC,MACA8hC,EAAAwe,KAAA0B,EACAlgB,EAAAllC,IAAA6iD,EACA3d,EAAA9kC,GAAA8kC,EAAA1R,GAAApzB,EAAA0iD,GAAAniD,KAAAkV,KAAA7V,IAAAI,KAEAgD,EAAA8hC,QAKA,KAHA,GAAAwgB,GAAA,KACA/nD,EAAA0pC,GAAAv/B,EAEAnK,GACA,GAAAunC,EAAA9kC,EAAAzC,EAAAyC,GAAA8kC,EAAA9kC,IAAAzC,EAAAyC,GAAA8kC,EAAAllC,GAAArC,EAAAqC,EAAA,CACA,IAAArC,EAAAqnC,EACA,CAAY0gB,EAAA/nD,EAAAqkD,CAAiB,OAD7BrkD,IAAAqnC,MAEK,CACL,IAAArnC,EAAAokD,EACA,CAAY2D,EAAA/nD,CAAe,OAD3BA,IAAAokD,EAKA1a,GAAAlgC,OAAAu+C,EAAAxgB,GACAwgB,IAAAC,GAAAzgB,MAGA,QAAA0gB,IAAAxiD,GACA,GAAA8hC,GAAA9hC,EAAA8hC,MACAA,KACAA,EAAA8c,IAAA2D,GAAAzgB,EAAA9f,GACAiiB,GAAA1/B,OAAAu9B,GACAugB,GAAAjqD,KAAA0pC,GACA4c,GAAA5c,GACA9hC,EAAA8hC,OAAA,MAMA,QAAA2gB,MACA/D,GAAApoD,MACAA,KAAA2oD,KACA3oD,KAAAgqD,KACAhqD,KAAAwrC,OAAA,KAGA,QAAA4gB,IAAApC,GACA,GAAAqC,GAAAC,GAAAltC,OAAA,GAAA+sC,GAEA,OADAE,GAAArC,OACAqC,EAGA,QAAAE,IAAAF,GACAH,GAAAG,GACAG,GAAAv+C,OAAAo+C,GACAC,GAAAxqD,KAAAuqD,GACAjE,GAAAiE,GAGA,QAAAI,IAAAJ,GACA,GAAA7gB,GAAA6gB,EAAA7gB,OACAllC,EAAAklC,EAAAllC,EACAI,EAAA8kC,EAAA1R,GACAmvB,GAAA3iD,EAAAI,GACA+mC,EAAA4e,EAAA/D,EACA33B,EAAA07B,EAAA3gC,EACAghC,GAAAL,EAEAE,IAAAF,EAGA,KADA,GAAAd,GAAA9d,EACA8d,EAAA/f,QACAvkC,KAAA+D,IAAA1E,EAAAilD,EAAA/f,OAAAllC,GAAAwjD,IACA7iD,KAAA+D,IAAAtE,EAAA6kD,EAAA/f,OAAA1R,IAAAgwB,IACArc,EAAA8d,EAAAjD,EACAoE,EAAAC,QAAApB,GACAgB,GAAAhB,GACAA,EAAA9d,CAGAif,GAAAC,QAAApB,GACAW,GAAAX,EAGA,KADA,GAAAC,GAAA76B,EACA66B,EAAAhgB,QACAvkC,KAAA+D,IAAA1E,EAAAklD,EAAAhgB,OAAAllC,GAAAwjD,IACA7iD,KAAA+D,IAAAtE,EAAA8kD,EAAAhgB,OAAA1R,IAAAgwB,IACAn5B,EAAA66B,EAAA9/B,EACAghC,EAAA5qD,KAAA0pD,GACAe,GAAAf,GACAA,EAAA76B,CAGA+7B,GAAA5qD,KAAA0pD,GACAU,GAAAV,EAEA,IACAoB,GADAC,EAAAH,EAAAlqD,MAEA,KAAAoqD,EAAA,EAAgBA,EAAAC,IAAcD,EAC9BpB,EAAAkB,EAAAE,GACArB,EAAAmB,EAAAE,EAAA,GACA/D,GAAA2C,EAAA7C,KAAA4C,EAAAvB,KAAAwB,EAAAxB,KAAAf,EAGAsC,GAAAmB,EAAA,GACAlB,EAAAkB,EAAAG,EAAA,GACArB,EAAA7C,KAAAD,GAAA6C,EAAAvB,KAAAwB,EAAAxB,KAAA,KAAAf,GAEAqC,GAAAC,GACAD,GAAAE,GAGA,QAAAsB,IAAA9C,GASA,IARA,GAEAuB,GACAC,EACAuB,EACAC,EALA1mD,EAAA0jD,EAAA,GACAiD,EAAAjD,EAAA,GAKA/lD,EAAAuoD,GAAAp+C,EAEAnK,GAEA,GADA8oD,EAAAG,GAAAjpD,EAAAgpD,GAAA3mD,EACAymD,EAAAjD,GAAA7lD,IAAAqnC,MAAuC,CAEvC,GADA0hB,EAAA1mD,EAAA6mD,GAAAlpD,EAAAgpD,KACAD,EAAAlD,IAMO,CACPiD,GAAAjD,IACAyB,EAAAtnD,EAAAqkD,EACAkD,EAAAvnD,GACS+oD,GAAAlD,IACTyB,EAAAtnD,EACAunD,EAAAvnD,EAAAynB,GAEA6/B,EAAAC,EAAAvnD,CAEA,OAfA,IAAAA,EAAAokD,EAAA,CACAkD,EAAAtnD,CACA,OAEAA,IAAAokD,EAgBA0B,GAAAC,EACA,IAAAoD,GAAAhB,GAAApC,EAGA,IAFAwC,GAAA/+C,OAAA89C,EAAA6B,GAEA7B,GAAAC,EAAA,CAEA,GAAAD,IAAAC,EAOA,MANAU,IAAAX,GACAC,EAAAY,GAAAb,EAAAvB,MACAwC,GAAA/+C,OAAA2/C,EAAA5B,GACA4B,EAAAzE,KAAA6C,EAAA7C,KAAAD,GAAA6C,EAAAvB,KAAAoD,EAAApD,MACAsB,GAAAC,OACAD,IAAAE,EAIA,KAAAA,EAEA,YADA4B,EAAAzE,KAAAD,GAAA6C,EAAAvB,KAAAoD,EAAApD,MAKAkC,IAAAX,GACAW,GAAAV,EAEA,IAAAC,GAAAF,EAAAvB,KACAhd,EAAAye,EAAA,GACAxe,EAAAwe,EAAA,GACAtC,EAAAa,EAAA,GAAAhd,EACAoc,EAAAY,EAAA,GAAA/c,EACA0e,EAAAH,EAAAxB,KACAnwB,EAAA8xB,EAAA,GAAA3e,EACAlT,EAAA6xB,EAAA,GAAA1e,EACAnkC,EAAA,GAAAqgD,EAAArvB,EAAAsvB,EAAAvvB,GACAwzB,EAAAlE,IAAAC,IACA0C,EAAAjyB,IAAAC,IACAmvB,IAAAnvB,EAAAuzB,EAAAjE,EAAA0C,GAAAhjD,EAAAkkC,GAAAmc,EAAA2C,EAAAjyB,EAAAwzB,GAAAvkD,EAAAmkC,EAEA4b,IAAA2C,EAAA7C,KAAA8C,EAAAE,EAAA1C,GACAmE,EAAAzE,KAAAD,GAAA+C,EAAAzB,EAAA,KAAAf,GACAuC,EAAA7C,KAAAD,GAAAsB,EAAA2B,EAAA,KAAA1C,GACAqC,GAAAC,GACAD,GAAAE,IAGA,QAAA0B,IAAAxjD,EAAAujD,GACA,GAAAjD,GAAAtgD,EAAAsgD,KACAsD,EAAAtD,EAAA,GACAuD,EAAAvD,EAAA,GACAwD,EAAAD,EAAAN,CAEA,KAAAO,EAAA,MAAAF,EAEA,IAAA/B,GAAA7hD,EAAA4+C,CACA,KAAAiD,EAAA,QAAAppC,IAEA6nC,GAAAuB,EAAAvB,IACA,IAAAyD,GAAAzD,EAAA,GACA0D,EAAA1D,EAAA,GACA2D,EAAAD,EAAAT,CAEA,KAAAU,EAAA,MAAAF,EAEA,IAAAG,GAAAH,EAAAH,EACAO,EAAA,EAAAL,EAAA,EAAAG,EACA7tD,EAAA8tD,EAAAD,CAEA,OAAAE,KAAA/tD,EAAAmH,KAAAkV,KAAArc,IAAA,EAAA+tD,GAAAD,MAAA,EAAAD,GAAAD,EAAAC,EAAA,EAAAJ,EAAAC,EAAA,KAAAK,EAAAP,GAEAA,EAAAG,GAAA,EAGA,QAAAN,IAAAzjD,EAAAujD,GACA,GAAAzB,GAAA9hD,EAAAgiB,CACA,IAAA8/B,EAAA,MAAA0B,IAAA1B,EAAAyB,EACA,IAAAjD,GAAAtgD,EAAAsgD,IACA,OAAAA,GAAA,KAAAiD,EAAAjD,EAAA,GAAA7nC,IAUA,QAAA2rC,IAAAjuD,EAAAC,EAAAX,GACA,OAAAU,EAAA,GAAAV,EAAA,KAAAW,EAAA,GAAAD,EAAA,KAAAA,EAAA,GAAAC,EAAA,KAAAX,EAAA,GAAAU,EAAA,IAGA,QAAAkuD,IAAAluD,EAAAC,GACA,MAAAA,GAAA,GAAAD,EAAA,IACAC,EAAA,GAAAD,EAAA,GAGA,QAAAmuD,IAAAC,EAAAhlC,GACA,GACA3iB,GACAI,EACA8kC,EAHAwe,EAAAiE,EAAAnY,KAAAiY,IAAA3uC,KAUA,KALAwpC,MACAE,GAAA,GAAA/iD,OAAAkoD,EAAAzrD,QACAgqD,GAAA,GAAArE,IACAxa,GAAA,GAAAwa,MAIA,GADA3c,EAAAygB,GACAjC,KAAAxe,GAAAwe,EAAA,GAAAxe,EAAA9kC,GAAAsjD,EAAA,KAAAxe,EAAA9kC,GAAAsjD,EAAA,GAAAxe,EAAAllC,GACA0jD,EAAA,KAAA1jD,GAAA0jD,EAAA,KAAAtjD,IACAomD,GAAA9C,GACA1jD,EAAA0jD,EAAA,GAAAtjD,EAAAsjD,EAAA,IAEAA,EAAAiE,EAAA7uC,UACK,KAAAosB,EAGL,KAFAihB,IAAAjhB,EAAA9hC,KAQA,GAFA6gD,KAEAthC,EAAA,CACA,GAAAoH,IAAApH,EAAA,MACAqH,GAAArH,EAAA,MACAsH,GAAAtH,EAAA,MACAuH,GAAAvH,EAAA,KACA4gC,IAAAx5B,EAAAC,EAAAC,EAAAC,GACAg6B,GAAAn6B,EAAAC,EAAAC,EAAAC,GAGAxwB,KAAA4oD,SACA5oD,KAAA8oD,SAEA0D,GACA7e,GACAib,GACAE,GAAA,KAiIA,QAAAoF,IAAAj2C,EAAA9I,EAAArB,GACA9N,KAAAiY,SACAjY,KAAAmP,OACAnP,KAAA8N,YAGA,QAAAqgD,IAAAzgD,EAAApH,EAAAI,GACA1G,KAAA0N,IACA1N,KAAAsG,IACAtG,KAAA0G,IA4CA,QAAA0nD,IAAAnqD,GACA,MAAAA,GAAAoqD,QAAAC,GAGA,QAAAC,MACA1vD,EAAA6R,MAAA8G,2BASA,QAAAg3C,MACA,OAAA3vD,EAAA6R,MAAA8H,OAGA,QAAAi2C,MACA,GAAAx1B,GAAA5e,EAAAyE,EAAA9e,IASA,OARA8e,aAAA4vC,aACA5vC,IAAA+J,iBAAA/J,EACAma,EAAAna,EAAAnX,MAAAgX,QAAAjc,MACA2X,EAAAyE,EAAAlX,OAAA+W,QAAAjc,QAEAu2B,EAAAna,EAAA6vC,YACAt0C,EAAAyE,EAAA8vC,gBAEA,MAAA31B,EAAA5e,IAGA,QAAAw0C,MACA,MAAA7uD,MAAAquD,QAAAC,GAt8eA,GAAAQ,IAAA,QAEArkD,GAAA,SAAA5K,EAAAC,GACA,MAAAD,GAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAAoT,KAGA2uC,GAAA,SAAAh0B,GAEA,MADA,KAAAA,EAAArrB,SAAAqrB,EAAAtjB,EAAAsjB,KAEAnmB,KAAA,SAAA7H,EAAAyG,EAAAs9C,EAAAmL,GAGA,IAFA,MAAAnL,MAAA,GACA,MAAAmL,MAAAlvD,EAAA2C,QACAohD,EAAAmL,GAAA,CACA,GAAAC,GAAApL,EAAAmL,IAAA,CACAlhC,GAAAhuB,EAAAmvD,GAAA1oD,GAAA,EAAAs9C,EAAAoL,EAAA,EACAD,EAAAC,EAEA,MAAApL,IAEAp8C,MAAA,SAAA3H,EAAAyG,EAAAs9C,EAAAmL,GAGA,IAFA,MAAAnL,MAAA,GACA,MAAAmL,MAAAlvD,EAAA2C,QACAohD,EAAAmL,GAAA,CACA,GAAAC,GAAApL,EAAAmL,IAAA,CACAlhC,GAAAhuB,EAAAmvD,GAAA1oD,GAAA,EAAAyoD,EAAAC,EACApL,EAAAoL,EAAA,EAEA,MAAApL,MAWAqL,GAAApN,GAAAp3C,IACAspC,GAAAkb,GAAAznD,MACA0nD,GAAAD,GAAAvnD,KAEAynD,GAAA,SAAArzB,EAAAtxB,GACA,MAAAA,MAAAE,EAEA,KADA,GAAArL,GAAA,EAAAsP,EAAAmtB,EAAAt5B,OAAA,EAAApD,EAAA08B,EAAA,GAAAqzB,EAAA,GAAAppD,OAAA4I,EAAA,IAAAA,GACAtP,EAAAsP,GAAAwgD,EAAA9vD,GAAAmL,EAAApL,IAAA08B,IAAAz8B,GACA,OAAA8vD,IAOAC,GAAA,SAAAvvD,EAAAC,EAAA0K,GACA,GAAA6kD,GAAAC,EAAAC,EAAApF,EAAAqF,EAAA3vD,EAAA2C,OAAAitD,EAAA3vD,EAAA0C,OAAArD,EAAA,GAAA4G,OAAAypD,EAAAC,EAEA,KADA,MAAAjlD,MAAAE,GACA2kD,EAAAE,EAAA,EAAmBF,EAAAG,IAASH,EAAA,IAAAlF,EAAAtqD,EAAAwvD,GAAAC,EAAA,EAA+BA,EAAAG,IAASH,IAAAC,EAAApwD,EAAAowD,GAAA/kD,EAAA2/C,EAAArqD,EAAAwvD,GACpE,OAAAnwD,IAGAuwD,GAAA,SAAA7vD,EAAAC,GACA,MAAAA,GAAAD,GAAA,EAAAC,EAAAD,EAAA,EAAAC,GAAAD,EAAA,EAAAqT,KAGAy8C,GAAA,SAAArpD,GACA,cAAAA,EAAA4M,KAAA5M,GAGAspD,GAAA,SAAA9zB,EAAAtxB,GACA,GAEA3K,GACAiJ,EAHA6F,EAAAmtB,EAAAt5B,OACAtD,EAAA,EAGAob,EAAA,EACAjb,GAAA,EACAkS,EAAA,CAEA,UAAA/G,EACA,OAAAnL,EAAAsP,GACA4O,MAAA1d,EAAA8vD,GAAA7zB,EAAAz8B,OACAyJ,EAAAjJ,EAAAX,EACAA,GAAA4J,IAAAyI,EACA+I,GAAAxR,GAAAjJ,EAAAX,QAMA,QAAAG,EAAAsP,GACA4O,MAAA1d,EAAA8vD,GAAAnlD,EAAAsxB,EAAAz8B,KAAAy8B,OACAhzB,EAAAjJ,EAAAX,EACAA,GAAA4J,IAAAyI,EACA+I,GAAAxR,GAAAjJ,EAAAX,GAKA,IAAAqS,EAAA,QAAA+I,IAAA/I,EAAA,IAGAs+C,GAAA,SAAA/zB,EAAAtxB,GACA,GAAAoJ,GAAAg8C,GAAA9zB,EAAAtxB,EACA,OAAAoJ,GAAA3M,KAAAkV,KAAAvI,MAGAqV,GAAA,SAAA6S,EAAAtxB,GACA,GAEA3K,GACAC,EACAX,EAJAE,GAAA,EACAsP,EAAAmtB,EAAAt5B,MAKA,UAAAgI,EAAA,CACA,OAAAnL,EAAAsP,GAAA,UAAA7O,EAAAg8B,EAAAz8B,KAAAS,KAAA,CAA2DD,EAAAV,EAAAW,CAAW,OACtE,OAAAT,EAAAsP,GAAA,OAAA7O,EAAAg8B,EAAAz8B,MACAQ,EAAAC,IAAAD,EAAAC,GACAX,EAAAW,IAAAX,EAAAW,QAIA,CACA,OAAAT,EAAAsP,GAAA,UAAA7O,EAAA0K,EAAAsxB,EAAAz8B,KAAAy8B,KAAAh8B,KAAA,CAAwED,EAAAV,EAAAW,CAAW,OACnF,OAAAT,EAAAsP,GAAA,OAAA7O,EAAA0K,EAAAsxB,EAAAz8B,KAAAy8B,MACAj8B,EAAAC,IAAAD,EAAAC,GACAX,EAAAW,IAAAX,EAAAW,IAIA,OAAAD,EAAAV,IAGA28B,GAAA/1B,MAAAxG,UAEAI,GAAAm8B,GAAAn8B,MACAuI,GAAA4zB,GAAA5zB,IAEA4nD,GAAA,SAAAxpD,GACA,kBACA,MAAAA,KAIAypD,GAAA,SAAAzpD,GACA,MAAAA,IAGAo5B,GAAA,SAAA90B,EAAAC,EAAA0wB,GACA3wB,KAAAC,KAAA0wB,GAAA5sB,EAAAN,UAAA7L,QAAA,GAAAqI,EAAAD,IAAA,KAAA+D,EAAA,KAAA4sB,CAMA,KAJA,GAAAl8B,IAAA,EACAsP,EAAA,EAAA1H,KAAAgE,IAAA,EAAAhE,KAAA64B,MAAAj1B,EAAAD,GAAA2wB,IACAtzB,EAAA,GAAAlC,OAAA4I,KAEAtP,EAAAsP,GACA1G,EAAA5I,GAAAuL,EAAAvL,EAAAk8B,CAGA,OAAAtzB,IAGAsD,GAAAtE,KAAAkV,KAAA,IACA3Q,GAAAvE,KAAAkV,KAAA,IACA1Q,GAAAxE,KAAAkV,KAAA,GAEA5V,GAAA,SAAAqE,EAAAC,EAAAC,GACA,GAAAywB,GAAA5wB,EAAAC,EAAAC,EAAAC,EACA,OAAA40B,IACAz4B,KAAA64B,KAAAl1B,EAAA2wB,KACAt0B,KAAAC,MAAA2D,EAAA0wB,OAAA,EACAA,IAcAy0B,GAAA,SAAA1jD,GACA,MAAArF,MAAA64B,KAAA74B,KAAAmE,IAAAkB,EAAA9J,QAAAyE,KAAAgpD,KAAA,GAGAC,GAAA,WAKA,QAAAA,GAAA5rD,GACA,GAAAjF,GAEAiH,EADAqI,EAAArK,EAAA9B,OAEA8J,EAAA,GAAAvG,OAAA4I,EAEA,KAAAtP,EAAA,EAAeA,EAAAsP,IAAOtP,EACtBiN,EAAAjN,GAAAqD,EAAA4B,EAAAjF,KAAAiF,EAGA,IAAAusB,GAAA9oB,EAAAuE,GACA+jB,EAAAQ,EAAA,GACAN,EAAAM,EAAA,GACAs/B,EAAAva,EAAAtpC,EAAA+jB,EAAAE,EAGAxqB,OAAAC,QAAAmqD,OAAA5pD,GAAA8pB,EAAAE,EAAA4/B,GAIA,KADA,GAAAjxD,GAAAixD,EAAA3tD,OACA2tD,EAAA,IAAA9/B,GAAA8/B,EAAA7gB,UAAApwC,CACA,MAAAixD,EAAAjxD,EAAA,IAAAqxB,GAAA4/B,EAAA/wC,QAAAlgB,CAEA,IACAkxD,GADAC,EAAA,GAAAtqD,OAAA7G,EAAA,EAIA,KAAAG,EAAA,EAAeA,GAAAH,IAAQG,EACvB+wD,EAAAC,EAAAhxD,MACA+wD,EAAA//B,GAAAhxB,EAAA,EAAA8wD,EAAA9wD,EAAA,GAAAgxB,EACA+/B,EAAA7/B,GAAAlxB,EAAAH,EAAAixD,EAAA9wD,GAAAkxB,CAIA,KAAAlxB,EAAA,EAAeA,EAAAsP,IAAOtP,EACtBiH,EAAAgG,EAAAjN,GACAgxB,GAAA/pB,MAAAiqB,GACA8/B,EAAAtc,GAAAoc,EAAA7pD,EAAA,EAAApH,IAAA4C,KAAAwC,EAAAjF,GAIA,OAAAgxD,GA7CA,GAAA3tD,GAAAqtD,GACAhoD,EAAAkhB,GACA2sB,EAAAoa,EA0DA,OAZAE,GAAAxtD,MAAA,SAAA0L,GACA,MAAAC,WAAA7L,QAAAE,EAAA,kBAAA0L,KAAA0hD,GAAA1hD,GAAA8hD,GAAAxtD,GAGAwtD,EAAAnoD,OAAA,SAAAqG,GACA,MAAAC,WAAA7L,QAAAuF,EAAA,kBAAAqG,KAAA0hD,IAAA1hD,EAAA,GAAAA,EAAA,KAAA8hD,GAAAnoD,GAGAmoD,EAAAva,WAAA,SAAAvnC,GACA,MAAAC,WAAA7L,QAAAozC,EAAA,kBAAAxnC,KAAA0hD,GAAA/pD,MAAAC,QAAAoI,GAAAzO,GAAAV,KAAAmP,MAAA8hD,GAAAta,GAGAsa,GAGAta,GAAA,SAAA9Z,EAAA18B,EAAAoL,GAEA,GADA,MAAAA,MAAAmlD,IACAhhD,EAAAmtB,EAAAt5B,OAAA,CACA,IAAApD,OAAA,GAAAuP,EAAA,SAAAnE,EAAAsxB,EAAA,KAAAA,EACA,IAAA18B,GAAA,SAAAoL,EAAAsxB,EAAAntB,EAAA,GAAAA,EAAA,EAAAmtB,EACA,IAAAntB,GACA0L,GAAA1L,EAAA,GAAAvP,EACAC,EAAA4H,KAAAC,MAAAmT,GACAxa,GAAA2K,EAAAsxB,EAAAz8B,KAAAy8B,GACAh8B,GAAA0K,EAAAsxB,EAAAz8B,EAAA,GAAAA,EAAA,EAAAy8B,EACA,OAAAj8B,IAAAC,EAAAD,IAAAwa,EAAAhb,KAGAixD,GAAA,SAAAhkD,EAAAlF,EAAA6D,GAEA,MADAqB,GAAApE,GAAAjJ,KAAAqN,EAAAqjD,IAAA7Z,KAAArrC,IACAxD,KAAA64B,MAAA70B,EAAA7D,IAAA,GAAAwuC,GAAAtpC,EAAA,KAAAspC,GAAAtpC,EAAA,MAAArF,KAAAkE,IAAAmB,EAAA9J,QAAA,QAGA+tD,GAAA,SAAAjkD,EAAAlF,EAAA6D,GACA,MAAAhE,MAAA64B,MAAA70B,EAAA7D,IAAA,IAAAyoD,GAAAvjD,GAAArF,KAAAkE,IAAAmB,EAAA9J,QAAA,QAGAyI,GAAA,SAAA6wB,EAAAtxB,GACA,GAEA3K,GACAC,EAHAT,GAAA,EACAsP,EAAAmtB,EAAAt5B,MAIA,UAAAgI,EAAA,CACA,OAAAnL,EAAAsP,GAAA,UAAA7O,EAAAg8B,EAAAz8B,KAAAS,KAAA,CAA2DD,EAAAC,CAAO,OAClE,OAAAT,EAAAsP,GAAA,OAAA7O,EAAAg8B,EAAAz8B,KAAAS,EAAAD,MAAAC,OAGA,CACA,OAAAT,EAAAsP,GAAA,UAAA7O,EAAA0K,EAAAsxB,EAAAz8B,KAAAy8B,KAAAh8B,KAAA,CAAwED,EAAAC,CAAO,OAC/E,OAAAT,EAAAsP,GAAA,OAAA7O,EAAA0K,EAAAsxB,EAAAz8B,KAAAy8B,KAAAh8B,EAAAD,MAAAC,GAGA,MAAAD,IAGA2wD,GAAA,SAAA10B,EAAAtxB,GACA,GAEA3K,GAFAya,EAAA,EACA3L,EAAAmtB,EAAAt5B,OAEAnD,GAAA,EACAkS,EAAA5C,CAEA,UAAAnE,EACA,OAAAnL,EAAAsP,GAAA4O,MAAA1d,EAAA8vD,GAAA7zB,EAAAz8B,OAA6DkS,EAA7D+I,GAAAza,MAIA,QAAAR,EAAAsP,GAAA4O,MAAA1d,EAAA8vD,GAAAnlD,EAAAsxB,EAAAz8B,KAAAy8B,OAA0EvqB,EAA1E+I,GAAAza,CAGA,IAAA0R,EAAA,MAAA+I,GAAA/I,GAGAk/C,GAAA,SAAA30B,EAAAtxB,GACA,GAEA3K,GAFA6wD,KACA/hD,EAAAmtB,EAAAt5B,OAEAnD,GAAA,CAEA,UAAAmL,EACA,OAAAnL,EAAAsP,GAAA4O,MAAA1d,EAAA8vD,GAAA7zB,EAAAz8B,MAAAqxD,EAAA5uD,KAAAjC,OAIA,QAAAR,EAAAsP,GAAA4O,MAAA1d,EAAA8vD,GAAAnlD,EAAAsxB,EAAAz8B,KAAAy8B,MAAA40B,EAAA5uD,KAAAjC,EAGA,OAAA+1C,IAAA8a,EAAA5a,KAAArrC,IAAA,KAGA+C,GAAA,SAAAmjD,GAQA,IAPA,GACAzxD,GAGA0xD,EACA90B,EALAntB,EAAAgiD,EAAAnuD,OAEAnD,GAAA,EACAkS,EAAA,IAIAlS,EAAAsP,GAAA4C,GAAAo/C,EAAAtxD,GAAAmD,MAGA,KAFAouD,EAAA,GAAA7qD,OAAAwL,KAEA5C,GAAA,GAGA,IAFAmtB,EAAA60B,EAAAhiD,GACAzP,EAAA48B,EAAAt5B,SACAtD,GAAA,GACA0xD,IAAAr/C,GAAAuqB,EAAA58B,EAIA,OAAA0xD,IAGAxpD,GAAA,SAAA00B,EAAAtxB,GACA,GAEA3K,GACAC,EAHAT,GAAA,EACAsP,EAAAmtB,EAAAt5B,MAIA,UAAAgI,EAAA,CACA,OAAAnL,EAAAsP,GAAA,UAAA7O,EAAAg8B,EAAAz8B,KAAAS,KAAA,CAA2DD,EAAAC,CAAO,OAClE,OAAAT,EAAAsP,GAAA,OAAA7O,EAAAg8B,EAAAz8B,KAAAQ,EAAAC,IAAAD,EAAAC,OAGA,CACA,OAAAT,EAAAsP,GAAA,UAAA7O,EAAA0K,EAAAsxB,EAAAz8B,KAAAy8B,KAAAh8B,KAAA,CAAwED,EAAAC,CAAO,OAC/E,OAAAT,EAAAsP,GAAA,OAAA7O,EAAA0K,EAAAsxB,EAAAz8B,KAAAy8B,KAAAj8B,EAAAC,IAAAD,EAAAC,GAGA,MAAAD,IAGAgxD,GAAA,SAAA/0B,EAAAiV,GAEA,IADA,GAAA1xC,GAAA0xC,EAAAvuC,OAAAsuD,EAAA,GAAA/qD,OAAA1G,GACAA,KAAAyxD,EAAAzxD,GAAAy8B,EAAAiV,EAAA1xC,GACA,OAAAyxD,IAGAptD,GAAA,SAAAo4B,EAAAjO,GACA,GAAAlf,EAAAmtB,EAAAt5B,OAAA,CACA,GACAmM,GAEAoiD,EAHA1xD,EAAA,EAEAkS,EAAA,EAEAy/C,EAAAl1B,EAAAvqB,EAIA,KAFAsc,MAAApjB,MAEApL,EAAAsP,IAAAkf,EAAAkjC,EAAAj1B,EAAAz8B,GAAA2xD,GAAA,OAAAnjC,EAAAmjC,UAAAD,EAAAx/C,EAAAlS,EAEA,YAAAwuB,EAAAmjC,KAAAz/C,EAAA,SAGA0/C,GAAA,SAAAn1B,EAAA0U,EAAAC,GAKA,IAJA,GACA/hC,GACArP,EAFAH,GAAA,MAAAuxC,EAAA3U,EAAAt5B,OAAAiuC,IAAAD,EAAA,MAAAA,EAAA,GAAAA,GAIAtxC,GACAG,EAAA4H,KAAAiqD,SAAAhyD,IAAA,EACAwP,EAAAotB,EAAA58B,EAAAsxC,GACA1U,EAAA58B,EAAAsxC,GAAA1U,EAAAz8B,EAAAmxC,GACA1U,EAAAz8B,EAAAmxC,GAAA9hC,CAGA,OAAAotB,IAGAqO,GAAA,SAAArO,EAAAtxB,GACA,GAEA3K,GAFAya,EAAA,EACA3L,EAAAmtB,EAAAt5B,OAEAnD,GAAA,CAEA,UAAAmL,EACA,OAAAnL,EAAAsP,IAAA9O,GAAAi8B,EAAAz8B,MAAAib,GAAAza,OAIA,QAAAR,EAAAsP,IAAA9O,GAAA2K,EAAAsxB,EAAAz8B,KAAAy8B,MAAAxhB,GAAAza,EAGA,OAAAya,IAGA62C,GAAA,SAAAtyC,GACA,KAAAlQ,EAAAkQ,EAAArc,QAAA,QACA,QAAAnD,IAAA,EAAAH,EAAAkI,GAAAyX,EAAArc,GAAA2uD,EAAA,GAAAprD,OAAA7G,KAAqEG,EAAAH,GACrE,OAAAyP,GAAA4C,GAAA,EAAAjI,EAAA6nD,EAAA9xD,GAAA,GAAA0G,OAAA4I,KAA0D4C,EAAA5C,GAC1DrF,EAAAiI,GAAAsN,EAAAtN,GAAAlS,EAGA,OAAA8xD,IAOAC,GAAA,WACA,MAAAD,IAAA9iD,YAGAC,GAAAvI,MAAAxG,UAAAI,MAEA+M,GAAA,SAAApG,GACA,MAAAA,IAGAiB,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAkG,GAAA,KAqKA1N,IAAYwC,MAAA,aAuBZmM,GAAAtP,UAAAkP,EAAAlP,WACA+B,YAAAuN,EACAuC,GAAA,SAAAD,EAAAtN,GACA,GAEA6K,GAFAN,EAAApO,KAAAoO,EACAijD,EAAAviD,EAAAqC,EAAA,GAAA/C,GAEA/O,GAAA,EACAsP,EAAA0iD,EAAA7uD,MAGA,OAAA6L,UAAA7L,OAAA,IAOA,SAAAqB,GAAA,kBAAAA,GAAA,SAAA+K,OAAA,qBAAA/K,EACA,QAAAxE,EAAAsP,GACA,GAAAD,GAAAyC,EAAAkgD,EAAAhyD,IAAA8P,KAAAf,EAAAM,GAAAW,EAAAjB,EAAAM,GAAAyC,EAAAjM,KAAArB,OACA,UAAAA,EAAA,IAAA6K,IAAAN,KAAAM,GAAAW,EAAAjB,EAAAM,GAAAyC,EAAAjM,KAAA,KAGA,OAAAlF,MAZA,OAAAX,EAAAsP,GAAA,IAAAD,GAAAyC,EAAAkgD,EAAAhyD,IAAA8P,QAAAT,EAAAU,EAAAhB,EAAAM,GAAAyC,EAAAjM,OAAA,MAAAwJ,KAcAzB,KAAA,WACA,GAAAA,MAAiBmB,EAAApO,KAAAoO,CACjB,QAAAM,KAAAN,GAAAnB,EAAAyB,GAAAN,EAAAM,GAAA/O,OACA,WAAAkP,GAAA5B,IAEAhO,KAAA,SAAAkQ,EAAA4C,GACA,IAAApD,EAAAN,UAAA7L,OAAA,YAAAmM,GAAAD,EAAAhP,EAAA,GAAAqG,OAAA4I,GAAAtP,EAAA,EAAkFA,EAAAsP,IAAOtP,EAAAK,EAAAL,GAAAgP,UAAAhP,EAAA,EACzF,KAAAW,KAAAoO,EAAA5O,eAAA2P,GAAA,SAAAP,OAAA,iBAAAO,EACA,KAAAT,EAAA1O,KAAAoO,EAAAe,GAAA9P,EAAA,EAAAsP,EAAAD,EAAAlM,OAA+CnD,EAAAsP,IAAOtP,EAAAqP,EAAArP,GAAAqD,MAAA3C,MAAAgS,EAAArS,IAEtDK,MAAA,SAAAoP,EAAA4C,EAAArS,GACA,IAAAM,KAAAoO,EAAA5O,eAAA2P,GAAA,SAAAP,OAAA,iBAAAO,EACA,QAAAT,GAAA1O,KAAAoO,EAAAe,GAAA9P,EAAA,EAAAsP,EAAAD,EAAAlM,OAAmDnD,EAAAsP,IAAOtP,EAAAqP,EAAArP,GAAAqD,MAAA3C,MAAAgS,EAAArS,IAuB1D,IAAAgQ,IAAA,+BAEA4hD,IACA1oC,IAAA,6BACAlZ,SACA6hD,MAAA,+BACAC,IAAA,uCACAC,MAAA,iCAGAC,GAAA,SAAAxsD,GACA,GAAAysD,GAAAzsD,GAAA,GAAA7F,EAAAsyD,EAAA5oD,QAAA,IAEA,OADA1J,IAAA,cAAAsyD,EAAAzsD,EAAAvF,MAAA,EAAAN,MAAA6F,IAAAvF,MAAAN,EAAA,IACAiyD,GAAA9xD,eAAAmyD,IAA8C3hD,MAAAshD,GAAAK,GAAA1hD,MAAA/K,GAAuCA,GAmBrF0sD,GAAA,SAAA1sD,GACA,GAAA6K,GAAA2hD,GAAAxsD,EACA,QAAA6K,EAAAE,MACAH,EACAR,GAAAS,IAGAK,GAAA,CAUAD,GAAA5Q,UAAA2Q,EAAA3Q,WACA+B,YAAA6O,EACAf,IAAA,SAAAnL,GAEA,IADA,GAAAlF,GAAAiB,KAAAoO,IACArP,IAAAkF,KAAA,KAAAA,IAAA+J,YAAA,MACA,OAAA/J,GAAAlF,IAEAsQ,IAAA,SAAApL,EAAAvB,GACA,MAAAuB,GAAAjE,KAAAoO,GAAA1L,GAEAuL,OAAA,SAAAhK,GACA,MAAAjE,MAAAoO,IAAAnK,aAAAjE,KAAAoO,IAEAiC,SAAA,WACA,MAAArQ,MAAAoO,GAIA,IAAAyjD,IAAA,SAAAC,GACA,kBACA,MAAA9xD,MAAA+xD,QAAAD,IAIA,uBAAA5tD,UAAA,CACA,GAAA8tD,IAAA9tD,SAAAyL,eACA,KAAAqiD,GAAAD,QAAA,CACA,GAAAE,IAAAD,GAAAE,uBACAF,GAAAG,mBACAH,GAAAI,oBACAJ,GAAAK,gBACAR,IAAA,SAAAC,GACA,kBACA,MAAAG,IAAAhzD,KAAAe,KAAA8xD,MAMA,GAAAQ,IAAAT,GAEAjgD,KAIA,IAFA/S,EAAA6R,MAAA,KAEA,mBAAAxM,UAAA;AACA,GAAAquD,IAAAruD,SAAAyL,eACA,iBAAA4iD,MACA3gD,IAAoB4gD,WAAA,YAAAC,WAAA,aAqEpB,GAAAC,IAAA,SAAAvhD,EAAAzO,EAAA+O,GACA,GAAApS,GAAAqP,EAAAK,EAAAkC,EAAAE,EAAA,IAAAxC,EAAAI,EAAAvM,MAEA,OAAA6L,UAAA7L,OAAA,IAcA,IAFA4O,EAAA1O,EAAAgP,EAAAR,EACA,MAAAO,OAAA,GACApS,EAAA,EAAaA,EAAAsP,IAAOtP,EAAAW,KAAAmO,KAAAiD,EAAArC,EAAA1P,GAAAqD,EAAA+O,GACpB,OAAAzR,MAdA,GAAAoR,GAAApR,KAAAiE,OAAAoN,IACA,IAAAD,EAAA,OAAAE,GAAAC,EAAA,EAAArS,EAAAkS,EAAA5O,OAA6C+O,EAAArS,IAAOqS,EACpD,IAAAlS,EAAA,EAAAiS,EAAAF,EAAAG,GAA4BlS,EAAAsP,IAAOtP,EACnC,IAAAqP,EAAAK,EAAA1P,IAAA8P,OAAAmC,EAAAnC,MAAAT,EAAAxJ,OAAAoM,EAAApM,KACA,MAAAoM,GAAA5O,QAwBAsP,GAAA,WAEA,IADA,GAAA8b,GAAA6kC,EAAA9zD,EAAA6R,MACAod,EAAA6kC,EAAA3gD,aAAA2gD,EAAA7kC,CACA,OAAA6kC,IAGAhoC,GAAA,SAAA1mB,EAAAyM,GACA,GAAAkY,GAAA3kB,EAAA4kB,iBAAA5kB,CAEA,IAAA2kB,EAAAgqC,eAAA,CACA,GAAAjoC,GAAA/B,EAAAgqC,gBAGA,OAFAjoC,GAAArkB,EAAAoK,EAAAmiD,QAAAloC,EAAAjkB,EAAAgK,EAAAoiD,QACAnoC,IAAAooC,gBAAA9uD,EAAA+uD,eAAAC,YACAtoC,EAAArkB,EAAAqkB,EAAAjkB,GAGA,GAAAwsD,GAAAjvD,EAAAkvD,uBACA,QAAAziD,EAAAmiD,QAAAK,EAAAxrD,KAAAzD,EAAAmvD,WAAA1iD,EAAAoiD,QAAAI,EAAA3rD,IAAAtD,EAAAovD,YAGA9oC,GAAA,SAAAtmB,GACA,GAAAyM,GAAAsB,IAEA,OADAtB,GAAAkc,iBAAAlc,IAAAkc,eAAA,IACAjC,GAAA1mB,EAAAyM,IAKAohD,GAAA,SAAAA,GACA,aAAAA,EAAA7/C,EAAA,WACA,MAAAjS,MAAAszD,cAAAxB,KAIAyB,GAAA,SAAAlrD,GACA,kBAAAA,OAAAypD,GAAAzpD,GAEA,QAAA6O,GAAAlX,KAAAoX,QAAAlY,EAAAgY,EAAA1U,OAAAgxD,EAAA,GAAAztD,OAAA7G,GAAAqS,EAAA,EAAqFA,EAAArS,IAAOqS,EAC5F,OAAAtN,GAAAwvD,EAAAjjD,EAAA0G,EAAA3F,GAAA5C,EAAA6B,EAAAhO,OAAAkxD,EAAAF,EAAAjiD,GAAA,GAAAxL,OAAA4I,GAAAtP,EAAA,EAA+GA,EAAAsP,IAAOtP,GACtH4E,EAAAuM,EAAAnR,MAAAo0D,EAAAprD,EAAApJ,KAAAgF,IAAA+M,SAAA3R,EAAAmR,MACA,YAAAvM,KAAAwvD,EAAAziD,SAAA/M,EAAA+M,UACA0iD,EAAAr0D,GAAAo0D,EAKA,WAAAx8C,IAAAu8C,EAAAxzD,KAAAqX,WAOAs8C,GAAA,SAAA7B,GACA,aAAAA,EAAA5/C,EAAA,WACA,MAAAlS,MAAA4zD,iBAAA9B,KAIA+B,GAAA,SAAAxrD,GACA,kBAAAA,OAAAsrD,GAAAtrD,GAEA,QAAA6O,GAAAlX,KAAAoX,QAAAlY,EAAAgY,EAAA1U,OAAAgxD,KAAAr8C,KAAA5F,EAAA,EAAyFA,EAAArS,IAAOqS,EAChG,OAAAtN,GAAAuM,EAAA0G,EAAA3F,GAAA5C,EAAA6B,EAAAhO,OAAAnD,EAAA,EAA8DA,EAAAsP,IAAOtP,GACrE4E,EAAAuM,EAAAnR,MACAm0D,EAAA1xD,KAAAuG,EAAApJ,KAAAgF,IAAA+M,SAAA3R,EAAAmR,IACA2G,EAAArV,KAAAmC,GAKA,WAAAgT,IAAAu8C,EAAAr8C,IAGA28C,GAAA,SAAA5hC,GACA,kBAAAA,OAAAogC,GAAApgC,GAEA,QAAAhb,GAAAlX,KAAAoX,QAAAlY,EAAAgY,EAAA1U,OAAAgxD,EAAA,GAAAztD,OAAA7G,GAAAqS,EAAA,EAAqFA,EAAArS,IAAOqS,EAC5F,OAAAtN,GAAAuM,EAAA0G,EAAA3F,GAAA5C,EAAA6B,EAAAhO,OAAAkxD,EAAAF,EAAAjiD,MAAAlS,EAAA,EAA4FA,EAAAsP,IAAOtP,GACnG4E,EAAAuM,EAAAnR,KAAA6yB,EAAAjzB,KAAAgF,IAAA+M,SAAA3R,EAAAmR,IACAkjD,EAAA5xD,KAAAmC,EAKA,WAAAgT,IAAAu8C,EAAAxzD,KAAAqX,WAGA08C,GAAA,SAAAthD,GACA,UAAA1M,OAAA0M,EAAAjQ,SAGAwxD,GAAA,WACA,UAAA/8C,IAAAjX,KAAAi0D,QAAAj0D,KAAAoX,QAAAlP,IAAA6rD,IAAA/zD,KAAAqX,UAWAlF,GAAA5S,WACA+B,YAAA6Q,EACA4D,YAAA,SAAA00B,GAAgC,MAAAzqC,MAAAuS,QAAA2D,aAAAu0B,EAAAzqC,KAAAsS,QAChC4D,aAAA,SAAAu0B,EAAA9Z,GAAuC,MAAA3wB,MAAAuS,QAAA2D,aAAAu0B,EAAA9Z,IACvC2iC,cAAA,SAAAxB,GAAqC,MAAA9xD,MAAAuS,QAAA+gD,cAAAxB,IACrC8B,iBAAA,SAAA9B,GAAwC,MAAA9xD,MAAAuS,QAAAqhD,iBAAA9B,IAGxC,IAAAoC,IAAA,SAAA5tD,GACA,kBACA,MAAAA,KAIA0M,GAAA,IAwEAmhD,GAAA,SAAAzxD,EAAAgD,GACA,IAAAhD,EAGA,MAFA4B,GAAA,GAAAyB,OAAA/F,KAAA4kC,QAAArzB,GAAA,EACAvR,KAAAmO,KAAA,SAAArF,GAA2BxE,IAAAiN,GAAAzI,IAC3BxE,CAGA,IAAAhC,GAAAoD,EAAAkN,EAAAJ,EACA2E,EAAAnX,KAAAqX,SACAH,EAAAlX,KAAAoX,OAEA,mBAAA1U,OAAAwxD,GAAAxxD,GAEA,QAAAxD,GAAAgY,EAAA1U,OAAAiQ,EAAA,GAAA1M,OAAA7G,GAAAkK,EAAA,GAAArD,OAAA7G,GAAAmK,EAAA,GAAAtD,OAAA7G,GAAAqS,EAAA,EAAsGA,EAAArS,IAAOqS,EAAA,CAC7G,GAAAa,GAAA+E,EAAA5F,GACAf,EAAA0G,EAAA3F,GACAmB,EAAAlC,EAAAhO,OACA8B,EAAA5B,EAAAzD,KAAAmT,OAAApB,SAAAO,EAAA4F,GACAxE,EAAArO,EAAA9B,OACA4xD,EAAAhrD,EAAAmI,GAAA,GAAAxL,OAAA4M,GACA0hD,EAAA5hD,EAAAlB,GAAA,GAAAxL,OAAA4M,GACA2hD,EAAAjrD,EAAAkI,GAAA,GAAAxL,OAAA2M,EAEApQ,GAAA8P,EAAA5B,EAAA4jD,EAAAC,EAAAC,EAAAhwD,EAAAoB,EAKA,QAAA+nC,GAAA9c,EAAA6f,EAAA,EAAAC,EAAA,EAA4CD,EAAA79B,IAAiB69B,EAC7D,GAAA/C,EAAA2mB,EAAA5jB,GAAA,CAEA,IADAA,GAAAC,MAAAD,EAAA,KACA7f,EAAA0jC,EAAA5jB,SAAA99B,IACA86B,EAAAn7B,MAAAqe,GAAA,MAQA,MAHAle,GAAA,GAAAwE,IAAAxE,EAAA0E,GACA1E,EAAAwhD,OAAA7qD,EACAqJ,EAAA8hD,MAAAlrD,EACAoJ,GAGA+hD,GAAA,WACA,UAAAv9C,IAAAjX,KAAAu0D,OAAAv0D,KAAAoX,QAAAlP,IAAA6rD,IAAA/zD,KAAAqX,WAGAo9C,GAAA,SAAAvnD,GAEA,OAAAwnD,GAAA10D,KAAAoX,QAAAu9C,EAAAznD,EAAAkK,QAAAw9C,EAAAF,EAAAlyD,OAAAmY,EAAAg6C,EAAAnyD,OAAAtD,EAAA+H,KAAAG,IAAAwtD,EAAAj6C,GAAAk6C,EAAA,GAAA9uD,OAAA6uD,GAAArjD,EAAA,EAA8JA,EAAArS,IAAOqS,EACrK,OAAAtN,GAAA6wD,EAAAJ,EAAAnjD,GAAAwjD,EAAAJ,EAAApjD,GAAA5C,EAAAmmD,EAAAtyD,OAAAgL,EAAAqnD,EAAAtjD,GAAA,GAAAxL,OAAA4I,GAAAtP,EAAA,EAAwHA,EAAAsP,IAAOtP,GAC/H4E,EAAA6wD,EAAAz1D,IAAA01D,EAAA11D,MACAmO,EAAAnO,GAAA4E,EAKA,MAAQsN,EAAAqjD,IAAQrjD,EAChBsjD,EAAAtjD,GAAAmjD,EAAAnjD,EAGA,WAAA0F,IAAA49C,EAAA70D,KAAAqX,WAGA29C,GAAA,WAEA,OAAA99C,GAAAlX,KAAAoX,QAAA7F,GAAA,EAAArS,EAAAgY,EAAA1U,SAA4D+O,EAAArS,GAC5D,OAAA+E,GAAAuM,EAAA0G,EAAA3F,GAAAlS,EAAAmR,EAAAhO,OAAA,EAAAmuB,EAAAngB,EAAAnR,KAA4EA,GAAA,IAC5E4E,EAAAuM,EAAAnR,MACAsxB,OAAA1sB,EAAA6R,aAAA6a,EAAA3iB,WAAAkI,aAAAjS,EAAA0sB,GACAA,EAAA1sB,EAKA,OAAAjE,OAGAi1D,GAAA,SAAApnC,GAGA,QAAAqnC,GAAAr1D,EAAAC,GACA,MAAAD,IAAAC,EAAA+tB,EAAAhuB,EAAAmR,SAAAlR,EAAAkR,WAAAnR,GAAAC,EAHA+tB,MAAA5a,EAMA,QAAAiE,GAAAlX,KAAAoX,QAAAlY,EAAAgY,EAAA1U,OAAA2yD,EAAA,GAAApvD,OAAA7G,GAAAqS,EAAA,EAAsFA,EAAArS,IAAOqS,EAAA,CAC7F,OAAAtN,GAAAuM,EAAA0G,EAAA3F,GAAA5C,EAAA6B,EAAAhO,OAAA4yD,EAAAD,EAAA5jD,GAAA,GAAAxL,OAAA4I,GAAAtP,EAAA,EAAwGA,EAAAsP,IAAOtP,GAC/G4E,EAAAuM,EAAAnR,MACA+1D,EAAA/1D,GAAA4E,EAGAmxD,GAAAtf,KAAAof,GAGA,UAAAj+C,IAAAk+C,EAAAn1D,KAAAqX,UAAAhK,SAOAgoD,GAAA,WACA,GAAAxxD,GAAAwK,UAAA,EAGA,OAFAA,WAAA,GAAArO,KACA6D,EAAA9D,MAAA,KAAAsO,WACArO,MAGAs1D,GAAA,WACA,GAAAlkC,GAAA,GAAArrB,OAAA/F,KAAA4kC,QAAAvlC,GAAA,CAEA,OADAW,MAAAmO,KAAA,WAAwBijB,IAAA/xB,GAAAW,OACxBoxB,GAGAmkC,GAAA,WAEA,OAAAr+C,GAAAlX,KAAAoX,QAAA7F,EAAA,EAAArS,EAAAgY,EAAA1U,OAA2D+O,EAAArS,IAAOqS,EAClE,OAAAf,GAAA0G,EAAA3F,GAAAlS,EAAA,EAAAsP,EAAA6B,EAAAhO,OAAwDnD,EAAAsP,IAAOtP,EAAA,CAC/D,GAAA4E,GAAAuM,EAAAnR,EACA,IAAA4E,EAAA,MAAAA,GAIA,aAGAuxD,GAAA,WACA,GAAA5wB,GAAA,CAEA,OADA5kC,MAAAmO,KAAA,aAAwBy2B,IACxBA,GAGA6wB,GAAA,WACA,OAAAz1D,KAAAiE,QAGAyxD,GAAA,SAAA7xD,GAEA,OAAAqT,GAAAlX,KAAAoX,QAAA7F,EAAA,EAAArS,EAAAgY,EAAA1U,OAA2D+O,EAAArS,IAAOqS,EAClE,OAAAtN,GAAAuM,EAAA0G,EAAA3F,GAAAlS,EAAA,EAAAsP,EAAA6B,EAAAhO,OAA8DnD,EAAAsP,IAAOtP,GACrE4E,EAAAuM,EAAAnR,KAAAwE,EAAA5E,KAAAgF,IAAA+M,SAAA3R,EAAAmR,EAIA,OAAAxQ,OA2CA21D,GAAA,SAAAzwD,EAAAxC,GACA,GAAAqN,GAAA2hD,GAAAxsD,EAEA,IAAAmJ,UAAA7L,OAAA,GACA,GAAAyB,GAAAjE,KAAAiE,MACA,OAAA8L,GAAAE,MACAhM,EAAAygB,eAAA3U,EAAAC,MAAAD,EAAAE,OACAhM,EAAA8J,aAAAgC,GAGA,MAAA/P,MAAAmO,MAAA,MAAAzL,EACAqN,EAAAE,MAAAoD,EAAAF,EAAA,kBAAAzQ,GACAqN,EAAAE,MAAA4D,EAAAF,EACA5D,EAAAE,MAAAwD,EAAAF,GAAAxD,EAAArN,KAGAI,GAAA,SAAAmB,GACA,MAAAA,GAAAsL,eAAAtL,EAAAsL,cAAA8O,aACApa,EAAAC,UAAAD,GACAA,EAAAoa,aAuBAu3C,GAAA,SAAA1wD,EAAAxC,EAAAuR,GACA,GAAAhQ,EACA,OAAAoK,WAAA7L,OAAA,EACAxC,KAAAmO,MAAA,MAAAzL,EACAoR,EAAA,kBAAApR,GACAyR,EACAH,GAAA9O,EAAAxC,EAAA,MAAAuR,EAAA,GAAAA,IACAnR,GAAAmB,EAAAjE,KAAAiE,QACAqa,iBAAAra,EAAA,MACAsa,iBAAArZ,IAuBA2wD,GAAA,SAAA3wD,EAAAxC,GACA,MAAA2L,WAAA7L,OAAA,EACAxC,KAAAmO,MAAA,MAAAzL,EACA0R,EAAA,kBAAA1R,GACA4R,EACAD,GAAAnP,EAAAxC,IACA1C,KAAAiE,OAAAiB,GAgBAwP,GAAAnV,WACAyV,IAAA,SAAA9P,GACA,GAAA7F,GAAAW,KAAA4U,OAAA7L,QAAA7D,EACA7F,GAAA,IACAW,KAAA4U,OAAA9S,KAAAoD,GACAlF,KAAA2U,MAAAnB,aAAA,QAAAxT,KAAA4U,OAAAoL,KAAA,QAGA/R,OAAA,SAAA/I,GACA,GAAA7F,GAAAW,KAAA4U,OAAA7L,QAAA7D,EACA7F,IAAA,IACAW,KAAA4U,OAAAiP,OAAAxkB,EAAA,GACAW,KAAA2U,MAAAnB,aAAA,QAAAxT,KAAA4U,OAAAoL,KAAA,QAGA81C,SAAA,SAAA5wD,GACA,MAAAlF,MAAA4U,OAAA7L,QAAA7D,IAAA,GAgCA,IAAA6wD,IAAA,SAAA7wD,EAAAxC,GACA,GAAAoS,GAAAP,EAAArP,EAAA,GAEA,IAAAmJ,UAAA7L,OAAA,GAEA,IADA,GAAAuS,GAAAN,EAAAzU,KAAAiE,QAAA5E,GAAA,EAAAsP,EAAAmG,EAAAtS,SACAnD,EAAAsP,GAAA,IAAAoG,EAAA+gD,SAAAhhD,EAAAzV,IAAA,QACA,UAGA,MAAAW,MAAAmO,MAAA,kBAAAzL,GACA0S,GAAA1S,EACAwS,EACAC,GAAAL,EAAApS,KAoBAszD,GAAA,SAAAtzD,GACA,MAAA2L,WAAA7L,OACAxC,KAAAmO,KAAA,MAAAzL,EACA2S,IAAA,kBAAA3S,GACA8S,GACAD,IAAA7S,IACA1C,KAAAiE,OAAAqR,aAoBA2gD,GAAA,SAAAvzD,GACA,MAAA2L,WAAA7L,OACAxC,KAAAmO,KAAA,MAAAzL,EACA+S,IAAA,kBAAA/S,GACAkT,GACAD,IAAAjT,IACA1C,KAAAiE,OAAAyR,WAOAwgD,GAAA,WACA,MAAAl2D,MAAAmO,KAAA0H,KAOAsgD,GAAA,WACA,MAAAn2D,MAAAmO,KAAA6H,KAGAogD,GAAA,SAAAlxD,GACA,GAAA2T,GAAA,kBAAA3T,KAAA0sD,GAAA1sD,EACA,OAAAlF,MAAAqI,OAAA,WACA,MAAArI,MAAA+V,YAAA8C,EAAA9Y,MAAAC,KAAAqO,eAQAgoD,GAAA,SAAAnxD,EAAA8mD,GACA,GAAAnzC,GAAA,kBAAA3T,KAAA0sD,GAAA1sD,GACAmD,EAAA,MAAA2jD,EAAA51C,GAAA,kBAAA41C,KAAA8F,GAAA9F,EACA,OAAAhsD,MAAAqI,OAAA,WACA,MAAArI,MAAAkW,aAAA2C,EAAA9Y,MAAAC,KAAAqO,WAAAhG,EAAAtI,MAAAC,KAAAqO,YAAA,SASAioD,GAAA,WACA,MAAAt2D,MAAAmO,KAAAF,KAGAsoD,GAAA,SAAA7zD,GACA,MAAA2L,WAAA7L,OACAxC,KAAA4pB,SAAA,WAAAlnB,GACA1C,KAAAiE,OAAA+M,UA8BAwlD,GAAA,SAAArnD,EAAAoH,GACA,MAAAvW,MAAAmO,MAAA,kBAAAoI,GACAS,GACAD,IAAA5H,EAAAoH,KAGAe,IAAA,KAWAL,IAAA1X,UAAA2N,GAAA3N,WACA+B,YAAA2V,GACA5O,OAAAkrD,GACApqD,UAAA0qD,GACA7qD,OAAA8qD,GACAxvD,KAAA6vD,GACA/qD,MAAA4qD,GACA3qD,KAAAmrD,GACAhnD,MAAAinD,GACApnD,MAAA2nD,GACAlf,KAAAmf,GACAh2D,KAAAo2D,GACAjkC,MAAAkkC,GACArxD,KAAAsxD,GACA3wB,KAAA4wB,GACAxsC,MAAAysC,GACAtnD,KAAAunD,GACAntD,KAAAotD,GACAtwD,MAAAuwD,GACAhsC,SAAAisC,GACAY,QAAAV,GACA5rD,KAAA6rD,GACAU,KAAAT,GACApgD,MAAAqgD,GACAlgD,MAAAmgD,GACA7tD,OAAA8tD,GACA3oD,OAAA4oD,GACApoD,OAAAqoD,GACAjkD,MAAAkkD,GACAnlD,GAAAshD,GACAjkD,SAAA+nD,GAGA,IAAAnuD,IAAA,SAAAypD,GACA,sBAAAA,GACA,GAAA76C,MAAA/S,SAAAovD,cAAAxB,MAAA5tD,SAAAyL,kBACA,GAAAsH,MAAA66C,IAAAx6C,KAGAnO,GAAA,SAAA2oD,GACA,sBAAAA,GACA,GAAA76C,KAAA/S,SAAA0vD,iBAAA9B,KAAA5tD,SAAAyL,kBACA,GAAAsH,KAAA,MAAA66C,QAAAx6C,KAGAq/C,GAAA,SAAA1yD,EAAAqoB,EAAAhU,GACAjK,UAAA7L,OAAA,IAAA8V,EAAAgU,IAAAta,KAAA4a,eAEA,QAAA+pC,GAAAt3D,EAAA,EAAAsP,EAAA2d,IAAA9pB,OAAA,EAA0DnD,EAAAsP,IAAOtP,EACjE,IAAAs3D,EAAArqC,EAAAjtB,IAAAiZ,eACA,MAAAqS,IAAA1mB,EAAA0yD,EAIA,cAGArqC,GAAA,SAAAroB,EAAAqoB,GACA,MAAAA,MAAAta,KAAAsa,QAEA,QAAAjtB,GAAA,EAAAsP,EAAA2d,IAAA9pB,OAAA,EAAAk5B,EAAA,GAAA31B,OAAA4I,GAA0EtP,EAAAsP,IAAOtP,EACjFq8B,EAAAr8B,GAAAsrB,GAAA1mB,EAAAqoB,EAAAjtB,GAGA,OAAAq8B,IAOA7jB,GAAA,WACAhZ,EAAA6R,MAAAkmD,iBACA/3D,EAAA6R,MAAA8G,4BAGA0V,GAAA,SAAAxV,GACA,GAAAJ,GAAAI,EAAAxT,SAAAyL,gBACAiI,EAAAvP,GAAAqP,GAAAtG,GAAA,iBAAAyG,IAAA,EACA,kBAAAP,GACAM,EAAAxG,GAAA,mBAAAyG,IAAA,IAEAP,EAAAS,WAAAT,EAAAjS,MAAAyS,cACAR,EAAAjS,MAAAyS,cAAA,SAmBA++C,GAAA,SAAAvwD,GACA,kBACA,MAAAA,IAiBA0R,IAAAzY,UAAA6R,GAAA,WACA,GAAA1O,GAAA1C,KAAAoO,EAAAgD,GAAArR,MAAAC,KAAAoO,EAAAC,UACA,OAAA3L,KAAA1C,KAAAoO,EAAApO,KAAA0C,EAgBA,IAAAo0D,IAAA,WAUA,QAAAA,GAAAl/C,GACAA,EACAxG,GAAA,iBAAA2lD,GACA3lD,GAAA,kBAAA4lD,GACA5lD,GAAA,iBAAA6lD,GACA7lD,GAAA,iCAAA8lD,GACA7xD,MAAA,+CAGA,QAAA0xD,KACA,IAAAxqC,GAAAvjB,EAAAjJ,MAAAC,KAAAqO,WAAA,CACA,GAAA8oD,GAAAlqC,EAAA,QAAAmqC,EAAAr3D,MAAAC,KAAAqO,WAAAkc,GAAAvqB,KAAAqO,UACA8oD,KACA9uD,GAAAxJ,EAAA6R,MAAAgH,MAAAtG,GAAA,iBAAAimD,GAAA,GAAAjmD,GAAA,eAAAkmD,GAAA,GACApqC,GAAAruB,EAAA6R,MAAAgH,MACAH,KACAggD,GAAA,EACAJ,EAAA,WAGA,QAAAE,KACAx/C,KACA0/C,GAAA,EACAC,EAAAjtC,MAAA,QAGA,QAAA+sC,KACAjvD,GAAAxJ,EAAA6R,MAAAgH,MAAAtG,GAAA,oCACAqG,GAAA5Y,EAAA6R,MAAAgH,KAAA6/C,GACA1/C,KACA2/C,EAAAjtC,MAAA,OAGA,QAAAysC,KACA,GAAAhuD,EAAAjJ,MAAAC,KAAAqO,WAAA,CACA,GAEAhP,GAAA83D,EAFAM,EAAA54D,EAAA6R,MAAAkc,eACAztB,EAAAi4D,EAAAr3D,MAAAC,KAAAqO,WACAM,EAAA8oD,EAAAj1D,MAEA,KAAAnD,EAAA,EAAeA,EAAAsP,IAAOtP,GACtB83D,EAAAlqC,EAAAwqC,EAAAp4D,GAAAiZ,WAAAnZ,EAAAw3D,GAAA32D,KAAAqO,cACAkJ,KACA4/C,EAAA,WAKA,QAAAF,KACA,GACA53D,GAAA83D,EADAM,EAAA54D,EAAA6R,MAAAkc,eACAje,EAAA8oD,EAAAj1D,MAEA,KAAAnD,EAAA,EAAeA,EAAAsP,IAAOtP,GACtB83D,EAAAK,EAAAC,EAAAp4D,GAAAiZ,eACAT,KACAs/C,EAAA,SAKA,QAAAD,KACA,GACA73D,GAAA83D,EADAM,EAAA54D,EAAA6R,MAAAkc,eACAje,EAAA8oD,EAAAj1D,MAIA,KAFA+pB,GAAA9nB,aAAA8nB,GACAA,EAAA1nB,WAAA,WAAyC0nB,EAAA,MAAsB,KAC/DltB,EAAA,EAAeA,EAAAsP,IAAOtP,GACtB83D,EAAAK,EAAAC,EAAAp4D,GAAAiZ,eACAf,KACA4/C,EAAA,QAKA,QAAAlqC,GAAAluB,EAAAq4D,EAAAzsC,EAAA5Y,EAAArS,GACA,GAAA4a,GAAAlC,EAAAC,EAAAjZ,EAAAurB,EAAAysC,EAAAr4D,GACA24D,EAAAtqC,EAAAngB,MAEA,IAAA6E,EAAA,GAAAkG,IAAA8+C,EAAA,cAAAx8C,EAAAvb,EAAAoZ,EAAA/Y,EAAA,GAAAA,EAAA,OAAAs4D,GAAA,WACA,cAAA74D,EAAA6R,MAAAwH,QAAAoC,EAAApC,EAAAnY,MAAAgS,EAAArS,MACA0Y,EAAAkC,EAAAhU,EAAAlH,EAAA,MACAiZ,EAAAiC,EAAA5T,EAAAtH,EAAA,OACA,KAGA,eAAA+3D,GAAAhoD,GACA,GAAAR,GAAAmoB,EAAA13B,CACA,QAAA+P,GACA,YAAAqoD,EAAAz4D,GAAAo4D,EAAAxoD,EAAAwJ,GAA2D,MAC3D,iBAAAq/C,GAAAz4D,KAAAoZ,CACA,YAAA/Y,EAAAurB,EAAAysC,EAAAr4D,GAAA4P,EAAAwJ,EAEArG,EAAA,GAAAkG,IAAA8+C,EAAA3nD,EAAAmL,EAAAvb,EAAA4P,EAAAvP,EAAA,GAAAgZ,EAAAhZ,EAAA,GAAAiZ,EAAAjZ,EAAA,GAAA03B,EAAA,GAAA13B,EAAA,GAAA03B,EAAA,GAAA4gC,KAAA33D,MAAA23D,GAAAvoD,EAAA4C,EAAArS,KApGA,GAMA63D,GACAhrC,EAPAvjB,EAAAuP,GACA6+C,EAAA3+C,GACAP,EAAAQ,GACA8+C,KACApqC,EAAA3e,EAAA,sBACA0J,EAAA,CAoHA,OAjBA2+C,GAAA9tD,OAAA,SAAAoF,GACA,MAAAC,WAAA7L,QAAAwG,EAAA,kBAAAoF,KAAAyoD,KAAAzoD,GAAA0oD,GAAA9tD,GAGA8tD,EAAAM,UAAA,SAAAhpD,GACA,MAAAC,WAAA7L,QAAA40D,EAAA,kBAAAhpD,KAAAyoD,GAAAzoD,GAAA0oD,GAAAM,GAGAN,EAAA5+C,QAAA,SAAA9J,GACA,MAAAC,WAAA7L,QAAA0V,EAAA,kBAAA9J,KAAAyoD,GAAAzoD,GAAA0oD,GAAA5+C,GAGA4+C,EAAA1lD,GAAA,WACA,GAAA1O,GAAA0qB,EAAAhc,GAAArR,MAAAqtB,EAAA/e,UACA,OAAA3L,KAAA0qB,EAAA0pC,EAAAp0D,GAGAo0D,GAGAa,GAAA,SAAAr2D,EAAAgJ,EAAA/K,GACA+B,EAAA/B,UAAA+K,EAAA/K,YACAA,EAAA+B,eAWAs2D,GAAA,GACAC,GAAA,EAAAD,GAEAE,GAAA,sBACAC,GAAA,gDACAC,GAAA,iDACA/+C,GAAA,mBACAI,GAAA,mBACAE,GAAA,GAAA4lC,QAAA,WAAA2Y,UAAA,QACAt+C,GAAA,GAAA2lC,QAAA,WAAA6Y,UAAA,QACAv+C,GAAA,GAAA0lC,QAAA,YAAA2Y,SAAAC,IAAA,QACAp+C,GAAA,GAAAwlC,QAAA,YAAA6Y,SAAAD,IAAA,QACAn+C,GAAA,GAAAulC,QAAA,WAAA4Y,GAAAC,OAAA,QACAl+C,GAAA,GAAAqlC,QAAA,YAAA4Y,GAAAC,MAAAD,IAAA,QAEAh+C,IACAk+C,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACAn4B,IAAA,SACAo4B,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,SAGAxJ,IAAA7+C,GAAAC,IACAqoD,YAAA,WACA,MAAAphE,MAAAma,MAAAinD,eAEA/wD,SAAA,WACA,MAAArQ,MAAAma,MAAA,MA+CAw9C,GAAAv+C,GAAAe,GAAAxB,GAAAG,IACA++C,SAAA,SAAAnqD,GAEA,MADAA,GAAA,MAAAA,EAAAmqD,GAAA5wD,KAAAkE,IAAA0sD,GAAAnqD,GACA,GAAA0L,IAAApZ,KAAAga,EAAAtM,EAAA1N,KAAAia,EAAAvM,EAAA1N,KAAAF,EAAA4N,EAAA1N,KAAAoa,UAEAw9C,OAAA,SAAAlqD,GAEA,MADAA,GAAA,MAAAA,EAAAkqD,GAAA3wD,KAAAkE,IAAAysD,GAAAlqD,GACA,GAAA0L,IAAApZ,KAAAga,EAAAtM,EAAA1N,KAAAia,EAAAvM,EAAA1N,KAAAF,EAAA4N,EAAA1N,KAAAoa,UAEAD,IAAA,WACA,MAAAna,OAEAohE,YAAA,WACA,UAAAphE,KAAAga,GAAAha,KAAAga,GAAA,KACA,GAAAha,KAAAia,GAAAja,KAAAia,GAAA,KACA,GAAAja,KAAAF,GAAAE,KAAAF,GAAA,KACA,GAAAE,KAAAoa,SAAApa,KAAAoa,SAAA,GAEA/J,SAAA,WACA,GAAAxQ,GAAAG,KAAAoa,OACA,OADyBva,GAAA0d,MAAA1d,GAAA,EAAAoH,KAAAgE,IAAA,EAAAhE,KAAAG,IAAA,EAAAvH,KACzB,IAAAA,EAAA,gBACAoH,KAAAgE,IAAA,EAAAhE,KAAAG,IAAA,IAAAH,KAAA+E,MAAAhM,KAAAga,IAAA,SACA/S,KAAAgE,IAAA,EAAAhE,KAAAG,IAAA,IAAAH,KAAA+E,MAAAhM,KAAAia,IAAA,SACAhT,KAAAgE,IAAA,EAAAhE,KAAAG,IAAA,IAAAH,KAAA+E,MAAAhM,KAAAF,IAAA,KACA,IAAAD,EAAA,SAAAA,EAAA,SAgDA83D,GAAAn9C,GAAAnT,GAAAsR,GAAAG,IACA++C,SAAA,SAAAnqD,GAEA,MADAA,GAAA,MAAAA,EAAAmqD,GAAA5wD,KAAAkE,IAAA0sD,GAAAnqD,GACA,GAAA8M,IAAAxa,KAAAqa,EAAAra,KAAAsa,EAAAta,KAAAua,EAAA7M,EAAA1N,KAAAoa,UAEAw9C,OAAA,SAAAlqD,GAEA,MADAA,GAAA,MAAAA,EAAAkqD,GAAA3wD,KAAAkE,IAAAysD,GAAAlqD,GACA,GAAA8M,IAAAxa,KAAAqa,EAAAra,KAAAsa,EAAAta,KAAAua,EAAA7M,EAAA1N,KAAAoa,UAEAD,IAAA,WACA,GAAAE,GAAAra,KAAAqa,EAAA,SAAAra,KAAAqa,EAAA,GACAC,EAAAiD,MAAAlD,IAAAkD,MAAAvd,KAAAsa,GAAA,EAAAta,KAAAsa,EACAC,EAAAva,KAAAua,EACAK,EAAAL,KAAA,GAAAA,EAAA,EAAAA,GAAAD,EACAK,EAAA,EAAAJ,EAAAK,CACA,WAAAxB,IACAsB,GAAAL,GAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAM,EAAAC,GACAF,GAAAL,EAAAM,EAAAC,GACAF,GAAAL,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAM,EAAAC,GACA5a,KAAAoa,UAGAgnD,YAAA,WACA,UAAAphE,KAAAsa,GAAAta,KAAAsa,GAAA,GAAAiD,MAAAvd,KAAAsa,KACA,GAAAta,KAAAua,GAAAva,KAAAua,GAAA,GACA,GAAAva,KAAAoa,SAAApa,KAAAoa,SAAA,KAYA,IAAAY,IAAA/T,KAAAo6D,GAAA,IACAnlD,GAAA,IAAAjV,KAAAo6D,GAEAC,GAAA,GACAjmD,GAAA,OACAC,GAAA,EACAE,GAAA,QACAI,GAAA,KACAE,GAAA,KACAH,GAAA,EAAAG,MACAJ,GAAAI,QA6BA67C,IAAA78C,GAAAW,GAAA9C,GAAAG,IACA++C,SAAA,SAAAnqD,GACA,UAAAoN,IAAA9a,KAAAua,EAAA+mD,IAAA,MAAA5zD,EAAA,EAAAA,GAAA1N,KAAAH,EAAAG,KAAAF,EAAAE,KAAAoa,UAEAw9C,OAAA,SAAAlqD,GACA,UAAAoN,IAAA9a,KAAAua,EAAA+mD,IAAA,MAAA5zD,EAAA,EAAAA,GAAA1N,KAAAH,EAAAG,KAAAF,EAAAE,KAAAoa,UAEAD,IAAA,WACA,GAAAzT,IAAA1G,KAAAua,EAAA,QACAjU,EAAAiX,MAAAvd,KAAAH,GAAA6G,IAAA1G,KAAAH,EAAA,IACA0b,EAAAgC,MAAAvd,KAAAF,GAAA4G,IAAA1G,KAAAF,EAAA,GAIA,OAHA4G,GAAA4U,GAAAO,GAAAnV,GACAJ,EAAA+U,GAAAQ,GAAAvV,GACAiV,EAAAC,GAAAK,GAAAN,GACA,GAAAnC,IACA2C,GAAA,UAAAzV,EAAA,UAAAI,EAAA,SAAA6U,GACAQ,IAAA,QAAAzV,EAAA,UAAAI,EAAA,QAAA6U,GACAQ,GAAA,SAAAzV,EAAA,SAAAI,EAAA,UAAA6U,GACAvb,KAAAoa,aAuCAu9C,GAAA58C,GAAAqB,GAAAzD,GAAAG,IACA++C,SAAA,SAAAnqD,GACA,UAAAqN,IAAA/a,KAAAqa,EAAAra,KAAAb,EAAAa,KAAAua,EAAA+mD,IAAA,MAAA5zD,EAAA,EAAAA,GAAA1N,KAAAoa,UAEAw9C,OAAA,SAAAlqD,GACA,UAAAqN,IAAA/a,KAAAqa,EAAAra,KAAAb,EAAAa,KAAAua,EAAA+mD,IAAA,MAAA5zD,EAAA,EAAAA,GAAA1N,KAAAoa,UAEAD,IAAA,WACA,MAAAU,IAAA7a,MAAAma,SAIA,IAAA2yB,KAAA,OACAvB,GAAA,QACA3uB,IAAA,OACAC,IAAA,OACAF,GAAA,QACAH,GAAAG,GAAAE,GACAJ,GAAAE,GAAA4uB,GACAhvB,GAAAgvB,GAAA3uB,GAAAC,GAAAiwB,EA2BA6qB,IAAAr7C,GAAAQ,GAAAnE,GAAAG,IACA++C,SAAA,SAAAnqD,GAEA,MADAA,GAAA,MAAAA,EAAAmqD,GAAA5wD,KAAAkE,IAAA0sD,GAAAnqD,GACA,GAAA4O,IAAAtc,KAAAqa,EAAAra,KAAAsa,EAAAta,KAAAua,EAAA7M,EAAA1N,KAAAoa,UAEAw9C,OAAA,SAAAlqD,GAEA,MADAA,GAAA,MAAAA,EAAAkqD,GAAA3wD,KAAAkE,IAAAysD,GAAAlqD,GACA,GAAA4O,IAAAtc,KAAAqa,EAAAra,KAAAsa,EAAAta,KAAAua,EAAA7M,EAAA1N,KAAAoa,UAEAD,IAAA,WACA,GAAAE,GAAAkD,MAAAvd,KAAAqa,GAAA,GAAAra,KAAAqa,EAAA,KAAAW,GACAT,GAAAva,KAAAua,EACA1a,EAAA0d,MAAAvd,KAAAsa,GAAA,EAAAta,KAAAsa,EAAAC,GAAA,EAAAA,GACA0F,EAAAhZ,KAAAgU,IAAAZ,GACA8F,EAAAlZ,KAAAiU,IAAAb,EACA,WAAAjB,IACA,KAAAmB,EAAA1a,GAAAitC,GAAA7sB,EAAAsrB,GAAAprB,IACA,KAAA5F,EAAA1a,GAAA+c,GAAAqD,EAAApD,GAAAsD,IACA,KAAA5F,EAAA1a,GAAA8c,GAAAsD,IACAjgB,KAAAoa,YAaA,IA4QA8D,IACAC,GACAC,GACAM,GA4OAkD,GACAQ,GA5fAm/C,GAAA,SAAAj1D,GACA,GAAAqC,GAAArC,EAAA9J,OAAA,CACA,iBAAAkM,GACA,GAAArP,GAAAqP,GAAA,EAAAA,EAAA,EAAAA,GAAA,GAAAA,EAAA,EAAAC,EAAA,GAAA1H,KAAAC,MAAAwH,EAAAC,GACAsO,EAAA3Q,EAAAjN,GACA6d,EAAA5Q,EAAAjN,EAAA,GACA2d,EAAA3d,EAAA,EAAAiN,EAAAjN,EAAA,KAAA4d,EAAAC,EACAC,EAAA9d,EAAAsP,EAAA,EAAArC,EAAAjN,EAAA,KAAA6d,EAAAD,CACA,OAAAF,KAAArO,EAAArP,EAAAsP,KAAAqO,EAAAC,EAAAC,EAAAC,KAIAqkD,GAAA,SAAAl1D,GACA,GAAAqC,GAAArC,EAAA9J,MACA,iBAAAkM,GACA,GAAArP,GAAA4H,KAAAC,QAAAwH,GAAA,OAAAA,KAAAC,GACAqO,EAAA1Q,GAAAjN,EAAAsP,EAAA,GAAAA,GACAsO,EAAA3Q,EAAAjN,EAAAsP,GACAuO,EAAA5Q,GAAAjN,EAAA,GAAAsP,GACAwO,EAAA7Q,GAAAjN,EAAA,GAAAsP,EACA,OAAAoO,KAAArO,EAAArP,EAAAsP,KAAAqO,EAAAC,EAAAC,EAAAC,KAIAG,GAAA,SAAAhX,GACA,kBACA,MAAAA,KAgCAm7D,GAAA,QAAAC,GAAAh7D,GAGA,QAAAi7D,GAAA/2D,EAAA2V,GACA,GAAAvG,GAAA6D,GAAAjT,EAAAuP,GAAAvP,IAAAoP,GAAAuG,EAAApG,GAAAoG,IAAAvG,GACAC,EAAA4D,EAAAjT,EAAAqP,EAAAsG,EAAAtG,GACAna,EAAA+d,EAAAjT,EAAA9K,EAAAygB,EAAAzgB,GACAsa,EAAAqD,GAAA7S,EAAAwP,QAAAmG,EAAAnG,QACA,iBAAA1L,GAKA,MAJA9D,GAAAoP,IAAAtL,GACA9D,EAAAqP,IAAAvL,GACA9D,EAAA9K,IAAA4O,GACA9D,EAAAwP,UAAA1L,GACA9D,EAAA,IAZA,GAAAiT,GAAAL,GAAA9W,EAkBA,OAFAi7D,GAAAnkD,MAAAkkD,EAEAC,GACC,GA4BDC,GAAAlkD,GAAA6jD,IACAM,GAAAnkD,GAAA8jD,IAEAM,GAAA,SAAAjiE,EAAAC,GACA,GAIAT,GAJAowD,EAAA3vD,IAAA0C,OAAA,EACAgtD,EAAA3vD,EAAAoH,KAAAG,IAAAqoD,EAAA5vD,EAAA2C,QAAA,EACA8D,EAAA,GAAAP,OAAA0pD,GACAtwD,EAAA,GAAA4G,OAAA0pD,EAGA,KAAApwD,EAAA,EAAaA,EAAAmwD,IAAQnwD,EAAAiH,EAAAjH,GAAAmuB,GAAA3tB,EAAAR,GAAAS,EAAAT,GACrB,MAAQA,EAAAowD,IAAQpwD,EAAAF,EAAAE,GAAAS,EAAAT,EAEhB,iBAAAqP,GACA,IAAArP,EAAA,EAAeA,EAAAmwD,IAAQnwD,EAAAF,EAAAE,GAAAiH,EAAAjH,GAAAqP,EACvB,OAAAvP,KAIAm3C,GAAA,SAAAz2C,EAAAC,GACA,GAAAgJ,GAAA,GAAAytC,KACA,OAAA12C,MAAAC,GAAAD,EAAA,SAAA6O,GACA,MAAA5F,GAAA2tC,QAAA52C,EAAAC,EAAA4O,GAAA5F,IAIA6W,GAAA,SAAA9f,EAAAC,GACA,MAAAD,MAAAC,GAAAD,EAAA,SAAA6O,GACA,MAAA7O,GAAAC,EAAA4O,IAIAkgB,GAAA,SAAA/uB,EAAAC,GACA,GAEA4N,GAFArO,KACAF,IAGA,QAAAU,GAAA,gBAAAA,WACA,OAAAC,GAAA,gBAAAA,UAEA,KAAA4N,IAAA5N,GACA4N,IAAA7N,GACAR,EAAAqO,GAAA8f,GAAA3tB,EAAA6N,GAAA5N,EAAA4N,IAEAvO,EAAAuO,GAAA5N,EAAA4N,EAIA,iBAAAgB,GACA,IAAAhB,IAAArO,GAAAF,EAAAuO,GAAArO,EAAAqO,GAAAgB,EACA,OAAAvP,KAIA4iE,GAAA,8CACAC,GAAA,GAAA7iB,QAAA4iB,GAAAj0C,OAAA,KAcAm0C,GAAA,SAAApiE,EAAAC,GACA,GACAoiE,GACAC,EACAC,EAHAC,EAAAN,GAAAO,UAAAN,GAAAM,UAAA,EAIAjjE,GAAA,EACAib,KACAoF,IAMA,KAHA7f,GAAA,GAAAC,GAAA,IAGAoiE,EAAAH,GAAA7oD,KAAArZ,MACAsiE,EAAAH,GAAA9oD,KAAApZ,MACAsiE,EAAAD,EAAA5+D,OAAA8+D,IACAD,EAAAtiE,EAAAH,MAAA0iE,EAAAD,GACA9nD,EAAAjb,GAAAib,EAAAjb,IAAA+iE,EACA9nD,IAAAjb,GAAA+iE,IAEAF,IAAA,OAAAC,IAAA,IACA7nD,EAAAjb,GAAAib,EAAAjb,IAAA8iE,EACA7nD,IAAAjb,GAAA8iE,GAEA7nD,IAAAjb,GAAA,KACAqgB,EAAA5d,MAAczC,IAAAiH,EAAAqZ,GAAAuiD,EAAAC,MAEdE,EAAAL,GAAAM,SAYA,OARAD,GAAAviE,EAAA0C,SACA4/D,EAAAtiE,EAAAH,MAAA0iE,GACA/nD,EAAAjb,GAAAib,EAAAjb,IAAA+iE,EACA9nD,IAAAjb,GAAA+iE,GAKA9nD,EAAA9X,OAAA,EAAAkd,EAAA,GACA3B,GAAA2B,EAAA,GAAApZ,GACAwX,GAAAhe,IACAA,EAAA4f,EAAAld,OAAA,SAAAkM,GACA,OAAA4C,GAAAjS,EAAA,EAA4BA,EAAAS,IAAOT,EAAAib,GAAAhJ,EAAAoO,EAAArgB,OAAAiS,EAAAhL,EAAAoI,EACnC,OAAA4L,GAAA0F,KAAA,OAIAwN,GAAA,SAAA3tB,EAAAC,GACA,GAAAX,GAAAuP,QAAA5O,EACA,cAAAA,GAAA,YAAA4O,EAAA4O,GAAAxd,IACA,WAAA4O,EAAAiR,GACA,WAAAjR,GAAAvP,EAAA4Z,GAAAjZ,OAAAX,EAAAsiE,IAAAQ,GACAniE,YAAAiZ,IAAA0oD,GACA3hE,YAAAy2C,MAAAD,GACAvwC,MAAAC,QAAAlG,GAAAgiE,GACAvkD,MAAAzd,GAAA8uB,GACAjP,IAAA9f,EAAAC,IAGAw0C,GAAA,SAAAz0C,EAAAC,GACA,MAAAD,MAAAC,GAAAD,EAAA,SAAA6O,GACA,MAAAzH,MAAA+E,MAAAnM,EAAAC,EAAA4O,KAIA6zD,GAAA,IAAAt7D,KAAAo6D,GAEApjD,IACAvS,WAAA,EACAC,WAAA,EACAiU,OAAA,EACAC,MAAA,EACAC,OAAA,EACAC,OAAA,GAGAvB,GAAA,SAAA3e,EAAAC,EAAAX,EAAA2J,EAAAgW,EAAAtU,GACA,GAAAsV,GAAAC,EAAAF,CAKA,QAJAC,EAAA7Y,KAAAkV,KAAAtc,IAAAC,QAAAD,GAAAigB,EAAAhgB,GAAAggB,IACAD,EAAAhgB,EAAAV,EAAAW,EAAAgJ,KAAA3J,GAAAU,EAAAggB,EAAA/W,GAAAhJ,EAAA+f,IACAE,EAAA9Y,KAAAkV,KAAAhd,IAAA2J,QAAA3J,GAAA4gB,EAAAjX,GAAAiX,EAAAF,GAAAE,GACAlgB,EAAAiJ,EAAAhJ,EAAAX,IAAAU,KAAAC,KAAA+f,KAAAC,OAEApU,WAAAoT,EACAnT,WAAAnB,EACAoV,OAAA3Y,KAAAgV,MAAAnc,EAAAD,GAAA0iE,GACA1iD,MAAA5Y,KAAAg9B,KAAApkB,GAAA0iD,GACAziD,SACAC,WAsFAyiD,GAAAzjD,GAAAf,GAAA,qBACAykD,GAAA1jD,GAAAN,GAAA,cAEAikD,GAAAz7D,KAAA07D,MACAC,GAAA,EACAC,GAAA,EACAC,GAAA,MAgBAC,GAAA,SAAAjsC,EAAA4U,GACA,GAKArsC,GACAusB,EANAo3C,EAAAlsC,EAAA,GAAAmsC,EAAAnsC,EAAA,GAAAzL,EAAAyL,EAAA,GACAosC,EAAAx3B,EAAA,GAAAy3B,EAAAz3B,EAAA,GAAAngB,EAAAmgB,EAAA,GACAtzB,EAAA8qD,EAAAF,EACA3qD,EAAA8qD,EAAAF,EACA59B,EAAAjtB,IAAAC,GAKA,IAAAgtB,EAAAy9B,GACAl3C,EAAA3kB,KAAAmE,IAAAmgB,EAAAF,GAAAq3C,GACArjE,EAAA,SAAAqP,GACA,OACAs0D,EAAAt0D,EAAA0J,EACA6qD,EAAAv0D,EAAA2J,EACAgT,EAAApkB,KAAAiZ,IAAAwiD,GAAAh0D,EAAAkd,SAMA,CACA,GAAAioB,GAAA5sC,KAAAkV,KAAAkpB,GACAzd,GAAA2D,IAAAF,IAAAw3C,GAAAx9B,IAAA,EAAAha,EAAAu3C,GAAA/uB,GACAlsB,GAAA4D,IAAAF,IAAAw3C,GAAAx9B,IAAA,EAAA9Z,EAAAq3C,GAAA/uB,GACAlM,EAAA1gC,KAAAmE,IAAAnE,KAAAkV,KAAAyL,IAAA,GAAAA,GACAskB,EAAAjlC,KAAAmE,IAAAnE,KAAAkV,KAAAwL,IAAA,GAAAA,EACAiE,IAAAsgB,EAAAvE,GAAA+6B,GACArjE,EAAA,SAAAqP,GACA,GAAA4L,GAAA5L,EAAAkd,EACAw3C,EAAAnjD,GAAA0nB,GACA9R,EAAAxK,GAAAu3C,GAAA/uB,IAAAuvB,EAAAhjD,GAAAsiD,GAAApoD,EAAAqtB,GAAAxnB,GAAAwnB,GACA,QACAq7B,EAAAntC,EAAAzd,EACA6qD,EAAAptC,EAAAxd,EACAgT,EAAA+3C,EAAAnjD,GAAAyiD,GAAApoD,EAAAqtB,KAOA,MAFAtoC,GAAAkkB,SAAA,IAAAqI,EAEAvsB,GAmBAgkE,GAAAhjD,GAAArZ,IACAs8D,GAAAjjD,GAAA5C,IAgCA8lD,GAAA9iD,GAAAzZ,IACAw8D,GAAA/iD,GAAAhD,IA0BAgmD,GAAA/iD,GAAA1Z,IACA08D,GAAAhjD,GAAAjD,IAEAkmD,GAAA,SAAAnhB,EAAA7zC,GAEA,OADAi1D,GAAA,GAAA79D,OAAA4I,GACAtP,EAAA,EAAiBA,EAAAsP,IAAOtP,EAAAukE,EAAAvkE,GAAAmjD,EAAAnjD,GAAAsP,EAAA,GACxB,OAAAi1D,IAGAjiD,GAAA,EACAI,GAAA,EACAO,GAAA,EACAJ,GAAA,IAGAJ,GAAA,EACAhB,GAAA,EACAI,GAAA,EACAD,GAAA,gBAAA4iD,0BAAAhjD,IAAAgjD,YAAAttB,KACAx1B,GAAA,kBAAA+iD,6CAAA,SAAAt5D,GAAkG3F,WAAA2F,EAAA,IAgBlG2W,IAAA5hB,UAAA+hB,GAAA/hB,WACA+B,YAAA6f,GACAM,QAAA,SAAA5d,EAAA0d,EAAAC,GACA,qBAAA3d,GAAA,SAAAjD,WAAA,6BACA4gB,IAAA,MAAAA,EAAAX,MAAAW,IAAA,MAAAD,EAAA,GAAAA,GACAvhB,KAAAsS,OAAA8P,KAAApiB,OACAoiB,MAAA9P,MAAAtS,KACA4hB,GAAA5hB,KACAoiB,GAAApiB,MAEAA,KAAAohB,MAAAvd,EACA7D,KAAAqhB,MAAAG,EACAa,MAEAxX,KAAA,WACA7K,KAAAohB,QACAphB,KAAAohB,MAAA,KACAphB,KAAAqhB,MAAAc,IACAE,OAmEA,IAAAc,IAAA,SAAAtf,EAAA0d,EAAAC,GACA,GAAA9S,GAAA,GAAAyS,GAMA,OALAI,GAAA,MAAAA,EAAA,GAAAA,EACA7S,EAAA+S,QAAA,SAAAsB,GACArU,EAAA7D,OACAhH,EAAAkf,EAAAxB,IACGA,EAAAC,GACH9S,GAGAq1D,GAAA,SAAAlgE,EAAA0d,EAAAC,GACA,GAAA9S,GAAA,GAAAyS,IAAA6iD,EAAAziD,CACA,cAAAA,GAAA7S,EAAA+S,QAAA5d,EAAA0d,EAAAC,GAAA9S,IACA6S,KAAAC,EAAA,MAAAA,EAAAX,MAAAW,EACA9S,EAAA+S,QAAA,QAAArU,GAAA2V,GACAA,GAAAihD,EACAt1D,EAAA+S,QAAArU,EAAA42D,GAAAziD,EAAAC,GACA3d,EAAAkf,IACGxB,EAAAC,GACH9S,IAGAu1D,GAAAx1D,EAAA,2BACAy1D,MAEAvhD,GAAA,EACAK,GAAA,EACAH,GAAA,EACAK,GAAA,EACAE,GAAA,EACAK,GAAA,EACAJ,GAAA,EAEAb,GAAA,SAAAve,EAAAiB,EAAAnG,EAAAwE,EAAAiN,EAAA+X,GACA,GAAAtF,GAAAhf,EAAAwe,YACA,IAAAQ,GACA,GAAAlkB,IAAAkkB,GAAA,WADAhf,GAAAwe,eAEA5J,IAAA5U,EAAAlF,GACAmG,OACA3B,QACAiN,QACAY,GAAA6yD,GACA3gD,MAAA4gD,GACA1iD,KAAA+G,EAAA/G,KACAD,MAAAgH,EAAAhH,MACAgC,SAAAgF,EAAAhF,SACAC,KAAA+E,EAAA/E,KACAlC,MAAA,KACAoB,MAAAC,MA+HAwK,GAAA,SAAAlpB,EAAAiB,GACA,GACAsd,GACArK,EAEA9Y,EAJA4jB,EAAAhf,EAAAwe,aAGAuG,GAAA,CAGA,IAAA/F,EAAA,CAEA/d,EAAA,MAAAA,EAAA,KAAAA,EAAA,EAEA,KAAA7F,IAAA4jB,IACAT,EAAAS,EAAA5jB,IAAA6F,UACAiT,EAAAqK,EAAAE,MAAAG,IAAAL,EAAAE,MAAAe,GACAjB,EAAAE,MAAAW,GACAb,EAAAlB,MAAAzW,OACAsN,GAAAqK,EAAApR,GAAAnS,KAAA,YAAAgF,IAAA+M,SAAAwR,EAAAjf,MAAAif,EAAAhS,aACAyS,GAAA5jB,IALkD2pB,GAAA,CAQlDA,UAAA/kB,GAAAwe,eAGA0hD,GAAA,SAAAj/D,GACA,MAAAlF,MAAAmO,KAAA,WACAgf,GAAAntB,KAAAkF,MAqDAk/D,GAAA,SAAAl/D,EAAAxC,GACA,GAAA3D,GAAAiB,KAAAgkB,GAIA,IAFA9e,GAAA,GAEAmJ,UAAA7L,OAAA,GAEA,OAAAkM,GADA4U,EAAAR,GAAA9iB,KAAAiE,OAAAlF,GAAAukB,MACAjkB,EAAA,EAAAsP,EAAA2U,EAAA9gB,OAAwCnD,EAAAsP,IAAOtP,EAC/C,IAAAqP,EAAA4U,EAAAjkB,IAAA6F,SACA,MAAAwJ,GAAAhM,KAGA,aAGA,MAAA1C,MAAAmO,MAAA,MAAAzL,EAAAghB,GAAAI,IAAA/kB,EAAAmG,EAAAxC,KAgBA0hB,GAAA,SAAAvkB,EAAAC,GACA,GAAAX,EACA,wBAAAW,GAAA6f,GACA7f,YAAAiZ,IAAA0oD,IACAtiE,EAAA4Z,GAAAjZ,OAAAX,EAAAsiE,IACAQ,IAAApiE,EAAAC,IAiEAukE,GAAA,SAAAn/D,EAAAxC,GACA,GAAAqN,GAAA2hD,GAAAxsD,GAAA7F,EAAA,cAAA0Q,EAAA0yD,GAAAr+C,EACA,OAAApkB,MAAAglB,UAAA9f,EAAA,kBAAAxC,IACAqN,EAAAE,MAAA4U,GAAAF,IAAA5U,EAAA1Q,EAAA0kB,GAAA/jB,KAAA,QAAAkF,EAAAxC,IACA,MAAAA,GAAAqN,EAAAE,MAAAiU,GAAAD,IAAAlU,IACAA,EAAAE,MAAAwU,GAAAN,IAAApU,EAAA1Q,EAAAqD,KAyBA4hE,GAAA,SAAAp/D,EAAAxC,GACA,GAAAgD,GAAA,QAAAR,CACA,IAAAmJ,UAAA7L,OAAA,SAAAkD,EAAA1F,KAAAsjB,MAAA5d,OAAAqf,MACA,UAAAriB,EAAA,MAAA1C,MAAAsjB,MAAA5d,EAAA,KACA,sBAAAhD,GAAA,SAAAkM,MACA,IAAAmB,GAAA2hD,GAAAxsD,EACA,OAAAlF,MAAAsjB,MAAA5d,GAAAqK,EAAAE,MAAA6U,GAAAE,IAAAjV,EAAArN,KAeA6hE,GAAA,SAAA7hE,GACA,GAAA3D,GAAAiB,KAAAgkB,GAEA,OAAA3V,WAAA7L,OACAxC,KAAAmO,MAAA,kBAAAzL,GACAuiB,GACAC,IAAAnmB,EAAA2D,IACAogB,GAAA9iB,KAAAiE,OAAAlF,GAAAwiB,OAeAijD,GAAA,SAAA9hE,GACA,GAAA3D,GAAAiB,KAAAgkB,GAEA,OAAA3V,WAAA7L,OACAxC,KAAAmO,MAAA,kBAAAzL,GACAyiB,GACAC,IAAArmB,EAAA2D,IACAogB,GAAA9iB,KAAAiE,OAAAlF,GAAAwkB,UAUAkhD,GAAA,SAAA/hE,GACA,GAAA3D,GAAAiB,KAAAgkB,GAEA,OAAA3V,WAAA7L,OACAxC,KAAAmO,KAAAkX,GAAAtmB,EAAA2D,IACAogB,GAAA9iB,KAAAiE,OAAAlF,GAAAykB,MAGAkhD,GAAA,SAAAxyC,GACA,kBAAAA,OAAAogC,GAAApgC,GAEA,QAAAhb,GAAAlX,KAAAoX,QAAAlY,EAAAgY,EAAA1U,OAAAgxD,EAAA,GAAAztD,OAAA7G,GAAAqS,EAAA,EAAqFA,EAAArS,IAAOqS,EAC5F,OAAAtN,GAAAuM,EAAA0G,EAAA3F,GAAA5C,EAAA6B,EAAAhO,OAAAkxD,EAAAF,EAAAjiD,MAAAlS,EAAA,EAA4FA,EAAAsP,IAAOtP,GACnG4E,EAAAuM,EAAAnR,KAAA6yB,EAAAjzB,KAAAgF,IAAA+M,SAAA3R,EAAAmR,IACAkjD,EAAA5xD,KAAAmC,EAKA,WAAAmiB,IAAAotC,EAAAxzD,KAAAqX,SAAArX,KAAAqmB,MAAArmB,KAAAgkB,MAGA2gD,GAAA,SAAAh3D,GACA,GAAAA,EAAAqW,MAAAhkB,KAAAgkB,IAAA,SAAApV,MAEA,QAAA8lD,GAAA10D,KAAAoX,QAAAu9C,EAAAhnD,EAAAyJ,QAAAw9C,EAAAF,EAAAlyD,OAAAmY,EAAAg6C,EAAAnyD,OAAAtD,EAAA+H,KAAAG,IAAAwtD,EAAAj6C,GAAAk6C,EAAA,GAAA9uD,OAAA6uD,GAAArjD,EAAA,EAA+JA,EAAArS,IAAOqS,EACtK,OAAAtN,GAAA6wD,EAAAJ,EAAAnjD,GAAAwjD,EAAAJ,EAAApjD,GAAA5C,EAAAmmD,EAAAtyD,OAAAgL,EAAAqnD,EAAAtjD,GAAA,GAAAxL,OAAA4I,GAAAtP,EAAA,EAAwHA,EAAAsP,IAAOtP,GAC/H4E,EAAA6wD,EAAAz1D,IAAA01D,EAAA11D,MACAmO,EAAAnO,GAAA4E,EAKA,MAAQsN,EAAAqjD,IAAQrjD,EAChBsjD,EAAAtjD,GAAAmjD,EAAAnjD,EAGA,WAAA6U,IAAAyuC,EAAA70D,KAAAqX,SAAArX,KAAAqmB,MAAArmB,KAAAgkB,MA0BA4gD,GAAA,SAAA1/D,EAAAqL,GACA,GAAAxR,GAAAiB,KAAAgkB,GAEA,OAAA3V,WAAA7L,OAAA,EACAsgB,GAAA9iB,KAAAiE,OAAAlF,GAAAqS,MAAAlM,GACAlF,KAAAmO,KAAAoX,GAAAxmB,EAAAmG,EAAAqL,KAWAs0D,GAAA,WACA,MAAA7kE,MAAAoR,GAAA,aAAAuU,GAAA3lB,KAAAgkB,OAGA8gD,GAAA,SAAAC,GACA,GAAA7/D,GAAAlF,KAAAqmB,MACAtnB,EAAAiB,KAAAgkB,GAEA,mBAAA+gD,OAAAjT,GAAAiT,GAEA,QAAA7tD,GAAAlX,KAAAoX,QAAAlY,EAAAgY,EAAA1U,OAAAgxD,EAAA,GAAAztD,OAAA7G,GAAAqS,EAAA,EAAqFA,EAAArS,IAAOqS,EAC5F,OAAAtN,GAAAwvD,EAAAjjD,EAAA0G,EAAA3F,GAAA5C,EAAA6B,EAAAhO,OAAAkxD,EAAAF,EAAAjiD,GAAA,GAAAxL,OAAA4I,GAAAtP,EAAA,EAA+GA,EAAAsP,IAAOtP,GACtH4E,EAAAuM,EAAAnR,MAAAo0D,EAAAsR,EAAA9lE,KAAAgF,IAAA+M,SAAA3R,EAAAmR,MACA,YAAAvM,KAAAwvD,EAAAziD,SAAA/M,EAAA+M,UACA0iD,EAAAr0D,GAAAo0D,EACAjxC,GAAAkxC,EAAAr0D,GAAA6F,EAAAnG,EAAAM,EAAAq0D,EAAA5wC,GAAA7e,EAAAlF,IAKA,WAAAqnB,IAAAotC,EAAAxzD,KAAAqX,SAAAnS,EAAAnG,IAGAimE,GAAA,SAAAD,GACA,GAAA7/D,GAAAlF,KAAAqmB,MACAtnB,EAAAiB,KAAAgkB,GAEA,mBAAA+gD,OAAApR,GAAAoR,GAEA,QAAA7tD,GAAAlX,KAAAoX,QAAAlY,EAAAgY,EAAA1U,OAAAgxD,KAAAr8C,KAAA5F,EAAA,EAAyFA,EAAArS,IAAOqS,EAChG,OAAAtN,GAAAuM,EAAA0G,EAAA3F,GAAA5C,EAAA6B,EAAAhO,OAAAnD,EAAA,EAA8DA,EAAAsP,IAAOtP,EACrE,GAAA4E,EAAAuM,EAAAnR,GAAA,CACA,OAAAorC,GAAAb,EAAAm7B,EAAA9lE,KAAAgF,IAAA+M,SAAA3R,EAAAmR,GAAA8X,EAAAxF,GAAA7e,EAAAlF,GAAA2O,EAAA,EAAA6M,EAAAqvB,EAAApnC,OAAwIkL,EAAA6M,IAAO7M,GAC/I+8B,EAAAb,EAAAl8B,KACA8U,GAAAioB,EAAAvlC,EAAAnG,EAAA2O,EAAAk8B,EAAAthB,EAGAkrC,GAAA1xD,KAAA8nC,GACAzyB,EAAArV,KAAAmC,GAKA,UAAAmiB,IAAAotC,EAAAr8C,EAAAjS,EAAAnG,IAGAkmE,GAAA/3D,GAAA3N,UAAA+B,YAEA4jE,GAAA,WACA,UAAAD,IAAAjlE,KAAAoX,QAAApX,KAAAqX,WAiDA8tD,GAAA,SAAAjgE,EAAAxC,EAAAuR,GACA,GAAA5U,GAAA,cAAA6F,GAAA,IAAAs9D,GAAAp+C,EACA,cAAA1hB,EAAA1C,KACAimB,WAAA/gB,EAAA0gB,GAAA1gB,EAAA7F,IACA+R,GAAA,aAAAlM,EAAA4gB,GAAA5gB,IACAlF,KAAAimB,WAAA/gB,EAAA,kBAAAxC,GACAsjB,GAAA9gB,EAAA7F,EAAA0kB,GAAA/jB,KAAA,SAAAkF,EAAAxC,IACAqjB,GAAA7gB,EAAA7F,EAAAqD,GAAAuR,IAcAmxD,GAAA,SAAAlgE,EAAAxC,EAAAuR,GACA,GAAAvO,GAAA,UAAAR,GAAA,GACA,IAAAmJ,UAAA7L,OAAA,SAAAkD,EAAA1F,KAAAsjB,MAAA5d,OAAAqf,MACA,UAAAriB,EAAA,MAAA1C,MAAAsjB,MAAA5d,EAAA,KACA,sBAAAhD,GAAA,SAAAkM,MACA,OAAA5O,MAAAsjB,MAAA5d,EAAAugB,GAAA/gB,EAAAxC,EAAA,MAAAuR,EAAA,GAAAA,KAgBAoxD,GAAA,SAAA3iE,GACA,MAAA1C,MAAAsjB,MAAA,yBAAA5gB,GACAyjB,GAAApC,GAAA/jB,KAAA,OAAA0C,IACAwjB,GAAA,MAAAxjB,EAAA,GAAAA,EAAA,MAGA4iE,GAAA,WAKA,OAJApgE,GAAAlF,KAAAqmB,MACAk/C,EAAAvlE,KAAAgkB,IACAwhD,EAAAl/C,KAEApP,EAAAlX,KAAAoX,QAAAlY,EAAAgY,EAAA1U,OAAA+O,EAAA,EAA2DA,EAAArS,IAAOqS,EAClE,OAAAtN,GAAAuM,EAAA0G,EAAA3F,GAAA5C,EAAA6B,EAAAhO,OAAAnD,EAAA,EAA8DA,EAAAsP,IAAOtP,EACrE,GAAA4E,EAAAuM,EAAAnR,GAAA,CACA,GAAAipB,GAAAxF,GAAA7e,EAAAshE,EACA/iD,IAAAve,EAAAiB,EAAAsgE,EAAAnmE,EAAAmR,GACAgR,KAAA8G,EAAA9G,KAAA8G,EAAA/G,MAAA+G,EAAA/E,SACAhC,MAAA,EACAgC,SAAA+E,EAAA/E,SACAC,KAAA8E,EAAA9E,OAMA,UAAA4C,IAAAlP,EAAAlX,KAAAqX,SAAAnS,EAAAsgE,IAGAzmE,GAAA,EAiBA0mE,GAAAv4D,GAAA3N,SAEA6mB,IAAA7mB,UAAAoO,GAAApO,WACA+B,YAAA8kB,GACA/d,OAAAy8D,GACA37D,UAAA67D,GACAh8D,OAAA07D,GACAl3D,MAAAm3D,GACAz3D,UAAAg4D,GACAv3D,WAAA23D,GACArmE,KAAAwmE,GAAAxmE,KACAmyB,MAAAq0C,GAAAr0C,MACAntB,KAAAwhE,GAAAxhE,KACA2gC,KAAA6gC,GAAA7gC,KACA5b,MAAAy8C,GAAAz8C,MACA7a,KAAAs3D,GAAAt3D,KACAiD,GAAAwzD,GACAr8D,KAAA87D,GACAr/C,UAAAs/C,GACAj/D,MAAA8/D,GACAl/C,WAAAm/C,GACAj7D,KAAAk7D,GACAp3D,OAAA42D,GACAvhD,MAAA8gD,GACA7iD,MAAAgjD,GACAhhD,SAAAihD,GACAhhD,KAAAihD,GA+BA,IAAAlvB,IAAA,EAEAmwB,GAAA,QAAAC,GAAA7mD,GAGA,QAAA4mD,GAAAh3D,GACA,MAAAzH,MAAAkE,IAAAuD,EAAAoQ,GAKA,MARAA,MAMA4mD,EAAAnwB,SAAAowB,EAEAD,GACCnwB,IAEDqwB,GAAA,QAAAD,GAAA7mD,GAGA,QAAA8mD,GAAAl3D,GACA,SAAAzH,KAAAkE,IAAA,EAAAuD,EAAAoQ,GAKA,MARAA,MAMA8mD,EAAArwB,SAAAowB,EAEAC,GACCrwB,IAEDswB,GAAA,QAAAF,GAAA7mD,GAGA,QAAA+mD,GAAAn3D,GACA,QAAAA,GAAA,MAAAzH,KAAAkE,IAAAuD,EAAAoQ,GAAA,EAAA7X,KAAAkE,IAAA,EAAAuD,EAAAoQ,IAAA,EAKA,MARAA,MAMA+mD,EAAAtwB,SAAAowB,EAEAE,GACCtwB,IAEDruB,GAAAjgB,KAAAo6D,GACAt6C,GAAAG,GAAA,EAsCAS,GAAA,KACAG,GAAA,KACAD,GAAA,KACAE,GAAA,IACAE,GAAA,KACAD,GAAA,MACAE,GAAA,MACAC,GAAA,MACAC,GAAA,MACAR,GAAA,EAAAD,MAcAm+C,GAAA,QAEAC,GAAA,QAAAJ,GAAArrD,GAGA,QAAAyrD,GAAAr3D,GACA,MAAAA,OAAA4L,EAAA,GAAA5L,EAAA4L,GAKA,MARAA,MAMAyrD,EAAAD,UAAAH,EAEAI,GACCD,IAEDE,GAAA,QAAAL,GAAArrD,GAGA,QAAA0rD,GAAAt3D,GACA,QAAAA,MAAA4L,EAAA,GAAA5L,EAAA4L,GAAA,EAKA,MARAA,MAMA0rD,EAAAF,UAAAH,EAEAK,GACCF,IAEDG,GAAA,QAAAN,GAAArrD,GAGA,QAAA2rD,GAAAv3D,GACA,QAAAA,GAAA,KAAAA,MAAA4L,EAAA,GAAA5L,EAAA4L,IAAA5L,GAAA,GAAAA,IAAA4L,EAAA,GAAA5L,EAAA4L,GAAA,KAKA,MARAA,MAMA2rD,EAAAH,UAAAH,EAEAM,GACCH,IAEDI,GAAA,EAAAj/D,KAAAo6D,GACA8E,GAAA,EACAC,GAAA,GAEAC,GAAA,QAAAV,GAAA9lE,EAAAT,GAGA,QAAAinE,GAAA33D,GACA,MAAA7O,GAAAoH,KAAAkE,IAAA,OAAAuD,GAAAzH,KAAAiU,KAAAZ,EAAA5L,GAAAtP,GAHA,GAAAkb,GAAArT,KAAAssB,KAAA,GAAA1zB,EAAAoH,KAAAgE,IAAA,EAAApL,MAAAT,GAAA8mE,GASA,OAHAG,GAAAF,UAAA,SAAAtmE,GAAqC,MAAA8lE,GAAA9lE,EAAAT,EAAA8mE,KACrCG,EAAAD,OAAA,SAAAhnE,GAAkC,MAAAumE,GAAA9lE,EAAAT,IAElCinE,GACCF,GAAAC,IAEDE,GAAA,QAAAX,GAAA9lE,EAAAT,GAGA,QAAAknE,GAAA53D,GACA,SAAA7O,EAAAoH,KAAAkE,IAAA,OAAAuD,OAAAzH,KAAAiU,KAAAxM,EAAA4L,GAAAlb,GAHA,GAAAkb,GAAArT,KAAAssB,KAAA,GAAA1zB,EAAAoH,KAAAgE,IAAA,EAAApL,MAAAT,GAAA8mE,GASA,OAHAI,GAAAH,UAAA,SAAAtmE,GAAsC,MAAA8lE,GAAA9lE,EAAAT,EAAA8mE,KACtCI,EAAAF,OAAA,SAAAhnE,GAAmC,MAAAumE,GAAA9lE,EAAAT,IAEnCknE,GACCH,GAAAC,IAEDG,GAAA,QAAAZ,GAAA9lE,EAAAT,GAGA,QAAAmnE,GAAA73D,GACA,QAAAA,EAAA,EAAAA,EAAA,KACA7O,EAAAoH,KAAAkE,IAAA,KAAAuD,GAAAzH,KAAAiU,KAAAZ,EAAA5L,GAAAtP,GACA,EAAAS,EAAAoH,KAAAkE,IAAA,MAAAuD,GAAAzH,KAAAiU,KAAAZ,EAAA5L,GAAAtP,IAAA,EALA,GAAAkb,GAAArT,KAAAssB,KAAA,GAAA1zB,EAAAoH,KAAAgE,IAAA,EAAApL,MAAAT,GAAA8mE,GAWA,OAHAK,GAAAJ,UAAA,SAAAtmE,GAAwC,MAAA8lE,GAAA9lE,EAAAT,EAAA8mE,KACxCK,EAAAH,OAAA,SAAAhnE,GAAqC,MAAAumE,GAAA9lE,EAAAT,IAErCmnE,GACCJ,GAAAC,IAED59C,IACAhH,KAAA,KACAD,MAAA,EACAgC,SAAA,IACAC,KAAAqD,IAaA2/C,GAAA,SAAAthE,GACA,GAAAnG,GACAwpB,CAEArjB,aAAAkhB,KACArnB,EAAAmG,EAAA8e,IAAA9e,IAAAmhB,QAEAtnB,EAAAunB,MAAAiC,EAAAC,IAAAhH,KAAAX,KAAA3b,EAAA,MAAAA,EAAA,KAAAA,EAAA,GAGA,QAAAgS,GAAAlX,KAAAoX,QAAAlY,EAAAgY,EAAA1U,OAAA+O,EAAA,EAA2DA,EAAArS,IAAOqS,EAClE,OAAAtN,GAAAuM,EAAA0G,EAAA3F,GAAA5C,EAAA6B,EAAAhO,OAAAnD,EAAA,EAA8DA,EAAAsP,IAAOtP,GACrE4E,EAAAuM,EAAAnR,KACAmjB,GAAAve,EAAAiB,EAAAnG,EAAAM,EAAAmR,EAAA+X,GAAAD,GAAArkB,EAAAlF,GAKA,WAAAqnB,IAAAlP,EAAAlX,KAAAqX,SAAAnS,EAAAnG,GAGAmO,IAAA3N,UAAA4tB,UAAAg3C,GACAj3D,GAAA3N,UAAAoO,WAAA64D,EAEA,IAAAC,KAAA,MAEAtuD,GAAA,SAAAlU,EAAAiB,GACA,GACAsd,GACAnjB,EAFA4jB,EAAAhf,EAAAwe,YAIA,IAAAQ,EAAA,CACA/d,EAAA,MAAAA,EAAA,KAAAA,EAAA,EACA,KAAA7F,IAAA4jB,GACA,IAAAT,EAAAS,EAAA5jB,IAAAqjB,MAAAM,IAAAR,EAAAtd,SACA,UAAAkhB,MAAAniB,IAAAwiE,GAAAvhE,GAAA7F,GAKA,aAGAsuB,GAAA,SAAArnB,GACA,kBACA,MAAAA,KAIAonB,GAAA,SAAAzV,EAAA9I,EAAAjC,GACAlN,KAAAiY,SACAjY,KAAAmP,OACAnP,KAAAkN,aAOA2d,GAAA,WACAhsB,EAAA6R,MAAAkmD,iBACA/3D,EAAA6R,MAAA8G,4BAGA0T,IAAiBhmB,KAAA,QACjB+lB,IAAkB/lB,KAAA,SAClB8mB,IAAmB9mB,KAAA,UACnB+mB,IAAmB/mB,KAAA,UAEnBqkB,IACArkB,KAAA,IACA6kB,SAAA,SAAA7hB,IAAAiH,IACAoe,MAAA,SAAAjnB,EAAAwY,GAAyB,MAAAxY,QAAA,GAAAwY,EAAA,QAAAxY,EAAA,GAAAwY,EAAA,SACzBsK,OAAA,SAAAs9C,GAAwB,MAAAA,OAAA,MAAAA,EAAA,SAGxBj9C,IACAvkB,KAAA,IACA6kB,SAAA,SAAA7hB,IAAAiH,IACAoe,MAAA,SAAA7mB,EAAAoY,GAAyB,MAAApY,MAAAoY,EAAA,MAAApY,EAAA,KAAAoY,EAAA,MAAApY,EAAA,MACzB0iB,OAAA,SAAAs9C,GAAwB,MAAAA,OAAA,MAAAA,EAAA,SAGxBC,IACAzhE,KAAA,KACA6kB,SAAA,qCAAA7hB,IAAAiH,IACAoe,MAAA,SAAAm5C,GAAuB,MAAAA,IACvBt9C,OAAA,SAAAs9C,GAAwB,MAAAA,KAGxB58C,IACAH,QAAA,YACAzc,UAAA,OACAyB,EAAA,YACAmQ,EAAA,YACAxE,EAAA,YACA2e,EAAA,YACA2tC,GAAA,cACAC,GAAA,cACAC,GAAA,cACAC,GAAA,eAGA76C,IACApN,EAAA,IACAma,EAAA,IACA2tC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,MAGA56C,IACAxd,EAAA,IACA2L,EAAA,IACAssD,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,MAGAj6C,IACAnD,QAAA,EACAzc,UAAA,EACAyB,EAAA,KACAmQ,EAAA,EACAxE,EAAA,KACA2e,GAAA,EACA2tC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,GAGAh6C,IACApD,QAAA,EACAzc,UAAA,EACAyB,GAAA,EACAmQ,EAAA,KACAxE,EAAA,EACA2e,EAAA,KACA2tC,IAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,GAyCAr9C,GAAA,WACA,MAAAJ,IAAAq9C,KAyZA1rD,GAAAhU,KAAAgU,IACAC,GAAAjU,KAAAiU,IACA8rD,GAAA//D,KAAAo6D,GACA4F,GAAAD,GAAA,EACAE,GAAA,EAAAF,GACAG,GAAAlgE,KAAAgE,IAWAm8D,GAAA,WAMA,QAAAA,GAAAvoD,GACA,GAOAnR,GACApH,EACA+pB,EACAjY,EACA/Y,EACAkS,EAZA5C,EAAAkQ,EAAArc,OACA6kE,KACAC,EAAA5nC,GAAA/wB,GACA44D,KACAC,KACAtwD,EAAAswD,EAAAtwD,OAAA,GAAAnR,OAAA4I,GACA6kD,EAAA,GAAAztD,OAAA4I,IASkB,KAAlBjB,EAAA,EAAArO,GAAA,IAAkBA,EAAAsP,GAAA,CACE,IAApBrI,EAAA,EAAAiL,GAAA,IAAoBA,EAAA5C,GACpBrI,GAAAuY,EAAAxf,GAAAkS,EAEA81D,GAAAvlE,KAAAwE,GACAihE,EAAAzlE,KAAA49B,GAAA/wB,IACAjB,GAAApH,EAuBkB,IAnBlBmhE,GAAAH,EAAAxxB,KAAA,SAAAj2C,EAAAC,GACA,MAAA2nE,GAAAJ,EAAAxnE,GAAAwnE,EAAAvnE,MAIA4nE,GAAAH,EAAA33C,QAAA,SAAA9mB,EAAAzJ,GACAyJ,EAAAgtC,KAAA,SAAAj2C,EAAAC,GACA,MAAA4nE,GAAA7oD,EAAAxf,GAAAQ,GAAAgf,EAAAxf,GAAAS,QAOA4N,EAAAy5D,GAAA,EAAAD,GAAAl9D,EAAA2E,GAAAjB,EACA0K,EAAA1K,EAAA1D,EAAAk9D,GAAAv4D,EAIArI,EAAA,EAAAjH,GAAA,IAAkBA,EAAAsP,GAAA,CACG,IAArB0hB,EAAA/pB,EAAAiL,GAAA,IAAqBA,EAAA5C,GAAA,CACrB,GAAAg5D,GAAAL,EAAAjoE,GACAuoE,EAAAL,EAAAI,GAAAp2D,GACAqC,EAAAiL,EAAA8oD,GAAAC,GACAhrC,EAAAt2B,EACA61B,EAAA71B,GAAAsN,EAAAlG,CACA8lD,GAAAoU,EAAAj5D,EAAAg5D,IACApkE,MAAAokE,EACAE,SAAAD,EACA39D,WAAA2yB,EACA1yB,SAAAiyB,EACAz5B,MAAAkR,GAGAsD,EAAAywD,IACApkE,MAAAokE,EACA19D,WAAAomB,EACAnmB,SAAA5D,EACA5D,MAAA2kE,EAAAM,IAEArhE,GAAA8R,EAIW,IAAX/Y,GAAA,IAAWA,EAAAsP,GACK,IAAhB4C,EAAAlS,EAAA,IAAgBkS,EAAA5C,GAAA,CAChB,GAAAmf,GAAA0lC,EAAAjiD,EAAA5C,EAAAtP,GACA4Y,EAAAu7C,EAAAn0D,EAAAsP,EAAA4C,IACAuc,EAAAprB,OAAAuV,EAAAvV,QACA8kE,EAAA1lE,KAAAgsB,EAAAprB,MAAAuV,EAAAvV,OACiBorB,OAAA7V,SAAA6V,IACAA,SAAA7V,WAKjB,MAAA6vD,GAAAN,EAAA1xB,KAAAgyB,GAAAN,EAvFA,GAAAx9D,GAAA,EACAy9D,EAAA,KACAC,EAAA,KACAI,EAAA,IAuGA,OAhBAV,GAAAp9D,SAAA,SAAAoE,GACA,MAAAC,WAAA7L,QAAAwH,EAAAm9D,GAAA,EAAA/4D,GAAAg5D,GAAAp9D,GAGAo9D,EAAAK,WAAA,SAAAr5D,GACA,MAAAC,WAAA7L,QAAAilE,EAAAr5D,EAAAg5D,GAAAK,GAGAL,EAAAM,cAAA,SAAAt5D,GACA,MAAAC,WAAA7L,QAAAklE,EAAAt5D,EAAAg5D,GAAAM,GAGAN,EAAAU,WAAA,SAAA15D,GACA,MAAAC,WAAA7L,QAAA,MAAA4L,EAAA05D,EAAA,MAAAA,EAAAl6C,GAAAxf,QAAAg5D,GAAAU,KAAA15D,GAGAg5D,GAGAW,GAAAhiE,MAAAxG,UAAAI,MAEAqoE,GAAA,SAAA1hE,GACA,kBACA,MAAAA,KAIA2hE,GAAAhhE,KAAAo6D,GACA6G,GAAA,EAAAD,GACAE,GAAA,KACAC,GAAAF,GAAAC,EAYAp6C,IAAAxuB,UAAA4N,GAAA5N,WACA+B,YAAAysB,GACAs6C,OAAA,SAAA/hE,EAAAI,GACA1G,KAAAoO,GAAA,KAAApO,KAAAguB,IAAAhuB,KAAAkuB,KAAA5nB,GAAA,KAAAtG,KAAAiuB,IAAAjuB,KAAAmuB,KAAAznB,IAEA4hE,UAAA,WACA,OAAAtoE,KAAAkuB,MACAluB,KAAAkuB,IAAAluB,KAAAguB,IAAAhuB,KAAAmuB,IAAAnuB,KAAAiuB,IACAjuB,KAAAoO,GAAA,MAGAm6D,OAAA,SAAAjiE,EAAAI,GACA1G,KAAAoO,GAAA,KAAApO,KAAAkuB,KAAA5nB,GAAA,KAAAtG,KAAAmuB,KAAAznB,IAEA8hE,iBAAA,SAAAj4C,EAAAC,EAAAlqB,EAAAI,GACA1G,KAAAoO,GAAA,MAAAmiB,EAAA,MAAAC,EAAA,KAAAxwB,KAAAkuB,KAAA5nB,GAAA,KAAAtG,KAAAmuB,KAAAznB,IAEAu+C,cAAA,SAAA10B,EAAAC,EAAA+U,EAAAC,EAAAl/B,EAAAI,GACA1G,KAAAoO,GAAA,MAAAmiB,EAAA,MAAAC,EAAA,MAAA+U,EAAA,MAAAC,EAAA,KAAAxlC,KAAAkuB,KAAA5nB,GAAA,KAAAtG,KAAAmuB,KAAAznB,IAEA+hE,MAAA,SAAAl4C,EAAAC,EAAA+U,EAAAC,EAAAxrB,GACAuW,KAAAC,KAAA+U,KAAAC,KAAAxrB,IACA,IAAAqW,GAAArwB,KAAAkuB,IACAoC,EAAAtwB,KAAAmuB,IACAie,EAAA7G,EAAAhV,EACA8b,EAAA7G,EAAAhV,EACAkzB,EAAArzB,EAAAE,EACAozB,EAAArzB,EAAAE,EACAk4C,EAAAhlB,IAAAC,GAGA,IAAA3pC,EAAA,WAAApL,OAAA,oBAAAoL,EAGA,WAAAha,KAAAkuB,IACAluB,KAAAoO,GAAA,KAAApO,KAAAkuB,IAAAqC,GAAA,KAAAvwB,KAAAmuB,IAAAqC,OAIA,IAAAk4C,EAAAP,GAKA,GAAAlhE,KAAA+D,IAAA24C,EAAAvX,EAAAC,EAAAqX,GAAAykB,IAAAnuD,EAKA,CACA,GAAA2uD,GAAApjC,EAAAlV,EACAu4C,EAAApjC,EAAAlV,EACAu4C,EAAAz8B,IAAAC,IACAy8B,EAAAH,IAAAC,IACAG,EAAA9hE,KAAAkV,KAAA0sD,GACAG,EAAA/hE,KAAAkV,KAAAusD,GACAnuD,EAAAP,EAAA/S,KAAAqhC,KAAA2/B,GAAAhhE,KAAAosB,MAAAw1C,EAAAH,EAAAI,IAAA,EAAAC,EAAAC,KAAA,GACAC,EAAA1uD,EAAAyuD,EACAE,EAAA3uD,EAAAwuD,CAGA9hE,MAAA+D,IAAAi+D,EAAA,GAAAd,KACAnoE,KAAAoO,GAAA,KAAAmiB,EAAA04C,EAAAvlB,GAAA,KAAAlzB,EAAAy4C,EAAAtlB,IAGA3jD,KAAAoO,GAAA,IAAA4L,EAAA,IAAAA,EAAA,WAAA2pC,EAAAglB,EAAAjlB,EAAAklB,GAAA,KAAA5oE,KAAAkuB,IAAAqC,EAAA24C,EAAA98B,GAAA,KAAApsC,KAAAmuB,IAAAqC,EAAA04C,EAAA78B,OApBArsC,MAAAoO,GAAA,KAAApO,KAAAkuB,IAAAqC,GAAA,KAAAvwB,KAAAmuB,IAAAqC,UAuBA9mB,IAAA,SAAApD,EAAAI,EAAAsT,EAAA4iB,EAAAT,EAAAgtC,GACA7iE,KAAAI,KAAAsT,IACA,IAAA5B,GAAA4B,EAAA/S,KAAAgU,IAAA2hB,GACAvkB,EAAA2B,EAAA/S,KAAAiU,IAAA0hB,GACAvM,EAAA/pB,EAAA8R,EACAkY,EAAA5pB,EAAA2R,EACAorC,EAAA,EAAA0lB,EACAj8B,EAAAi8B,EAAAvsC,EAAAT,IAAAS,CAGA,IAAA5iB,EAAA,WAAApL,OAAA,oBAAAoL,EAGA,QAAAha,KAAAkuB,IACAluB,KAAAoO,GAAA,IAAAiiB,EAAA,IAAAC,GAIArpB,KAAA+D,IAAAhL,KAAAkuB,IAAAmC,GAAA83C,IAAAlhE,KAAA+D,IAAAhL,KAAAmuB,IAAAmC,GAAA63C,MACAnoE,KAAAoO,GAAA,IAAAiiB,EAAA,IAAAC,GAIAtW,IAGAkzB,EAAAk7B,GACApoE,KAAAoO,GAAA,IAAA4L,EAAA,IAAAA,EAAA,QAAAypC,EAAA,KAAAn9C,EAAA8R,GAAA,KAAA1R,EAAA2R,GAAA,IAAA2B,EAAA,IAAAA,EAAA,QAAAypC,EAAA,KAAAzjD,KAAAkuB,IAAAmC,GAAA,KAAArwB,KAAAmuB,IAAAmC,IAKA4c,EAAA,IAAAA,IAAAg7B,OACAloE,KAAAoO,GAAA,IAAA4L,EAAA,IAAAA,EAAA,SAAAkzB,GAAA+6B,IAAA,IAAAxkB,EAAA,KAAAzjD,KAAAkuB,IAAA5nB,EAAA0T,EAAA/S,KAAAgU,IAAAkhB,IAAA,KAAAn8B,KAAAmuB,IAAAznB,EAAAsT,EAAA/S,KAAAiU,IAAAihB,OAGA+2B,KAAA,SAAA5sD,EAAAI,EAAAuyB,EAAA5e,GACAra,KAAAoO,GAAA,KAAApO,KAAAguB,IAAAhuB,KAAAkuB,KAAA5nB,GAAA,KAAAtG,KAAAiuB,IAAAjuB,KAAAmuB,KAAAznB,GAAA,MAAAuyB,EAAA,MAAA5e,EAAA,KAAA4e,EAAA,KAEA5oB,SAAA,WACA,MAAArQ,MAAAoO,GAwBA,IAAAg7D,IAAA,WAQA,QAAAA,KACA,GAAAC,GACAC,EAAAvB,GAAA9oE,KAAAoP,WACAiM,EAAAwT,EAAA/tB,MAAAC,KAAAspE,GACA56D,EAAAuJ,EAAAlY,MAAAC,KAAAspE,GACAC,GAAAh7C,EAAAxuB,MAAAC,MAAAspE,EAAA,GAAAhvD,EAAAgvD,IACAE,EAAAv/D,EAAAlK,MAAAC,KAAAspE,GAAArC,GACAwC,EAAAv/D,EAAAnK,MAAAC,KAAAspE,GAAArC,GACAyC,EAAAH,EAAAtuD,GAAAuuD,GACA5hC,EAAA2hC,EAAAruD,GAAAsuD,GACAG,GAAAp7C,EAAAxuB,MAAAC,MAAAspE,EAAA,GAAA56D,EAAA46D,IACAM,EAAA3/D,EAAAlK,MAAAC,KAAAspE,GAAArC,GACA4C,EAAA3/D,EAAAnK,MAAAC,KAAAspE,GAAArC,EAaA,IAXA56D,MAAAg9D,EAAAl8D,MAEAd,EAAAg8D,OAAAqB,EAAA9hC,GACAv7B,EAAA3C,IAAA,IAAA6/D,EAAAC,EAAAC,GACAD,IAAAI,GAAAH,IAAAI,IACAx9D,EAAAm8D,iBAAA,IAAAmB,EAAA1uD,GAAA2uD,GAAAD,EAAAzuD,GAAA0uD,IACAv9D,EAAA3C,IAAA,IAAAigE,EAAAC,EAAAC,IAEAx9D,EAAAm8D,iBAAA,IAAAkB,EAAA9hC,GACAv7B,EAAAi8D,YAEAe,EAAA,MAAAh9D,GAAA,KAAAg9D,EAAA,SAhCA,GAAAv7C,GAAAM,GACAnW,EAAAoW,GACAE,EAAAD,GACArkB,EAAAukB,GACAtkB,EAAAukB,GACApiB,EAAA,IAsDA,OAxBA+8D,GAAA76C,OAAA,SAAAngB,GACA,MAAAC,WAAA7L,QAAA+rB,EAAA,kBAAAngB,KAAA45D,IAAA55D,GAAAg7D,GAAA76C,GAGA66C,EAAAn/D,WAAA,SAAAmE,GACA,MAAAC,WAAA7L,QAAAyH,EAAA,kBAAAmE,KAAA45D,IAAA55D,GAAAg7D,GAAAn/D,GAGAm/D,EAAAl/D,SAAA,SAAAkE,GACA,MAAAC,WAAA7L,QAAA0H,EAAA,kBAAAkE,KAAA45D,IAAA55D,GAAAg7D,GAAAl/D,GAGAk/D,EAAAt7C,OAAA,SAAA1f,GACA,MAAAC,WAAA7L,QAAAsrB,EAAA1f,EAAAg7D,GAAAt7C,GAGAs7C,EAAAnxD,OAAA,SAAA7J,GACA,MAAAC,WAAA7L,QAAAyV,EAAA7J,EAAAg7D,GAAAnxD,GAGAmxD,EAAA/8D,QAAA,SAAA+B,GACA,MAAAC,WAAA7L,QAAA6J,EAAA,MAAA+B,EAAA,KAAAA,EAAAg7D,GAAA/8D,GAGA+8D,GAGAzX,GAAA,GAIAjjC,IAAAnvB,UAAAovB,GAAApvB,WACA+B,YAAAotB,GACAkkB,IAAA,SAAAltC,GACA,MAAAisD,IAAAjsD,IAAA1F,OAEAoP,IAAA,SAAA1J,GACA,MAAA1F,MAAA2xD,GAAAjsD,IAEA2J,IAAA,SAAA3J,EAAAhD,GAEA,MADA1C,MAAA2xD,GAAAjsD,GAAAhD,EACA1C,MAEAiO,OAAA,SAAAvI,GACA,GAAAkkB,GAAA+nC,GAAAjsD,CACA,OAAAkkB,KAAA5pB,mBAAA4pB,IAEAkgD,MAAA,WACA,OAAAlgD,KAAA5pB,MAAA4pB,EAAA,KAAA+nC,UAAA3xD,MAAA4pB,IAEA5hB,KAAA,WACA,GAAAA,KACA,QAAA4hB,KAAA5pB,MAAA4pB,EAAA,KAAA+nC,IAAA3pD,EAAAlG,KAAA8nB,EAAAjqB,MAAA,GACA,OAAAqI,IAEAsE,OAAA,WACA,GAAAA,KACA,QAAAsd,KAAA5pB,MAAA4pB,EAAA,KAAA+nC,IAAArlD,EAAAxK,KAAA9B,KAAA4pB,GACA,OAAAtd,IAEAy9D,QAAA,WACA,GAAAA,KACA,QAAAngD,KAAA5pB,MAAA4pB,EAAA,KAAA+nC,IAAAoY,EAAAjoE,MAAyE4D,IAAAkkB,EAAAjqB,MAAA,GAAA+C,MAAA1C,KAAA4pB,IACzE,OAAAmgD,IAEAnlC,KAAA,WACA,GAAAA,GAAA,CACA,QAAAhb,KAAA5pB,MAAA4pB,EAAA,KAAA+nC,MAAA/sB,CACA,OAAAA,IAEA5b,MAAA,WACA,OAAAY,KAAA5pB,MAAA,GAAA4pB,EAAA,KAAA+nC,GAAA,QACA,WAEAxjD,KAAA,SAAA3D,GACA,OAAAof,KAAA5pB,MAAA4pB,EAAA,KAAA+nC,IAAAnnD,EAAAxK,KAAA4pB,KAAAjqB,MAAA,GAAAK,OA0BA,IAAAgqE,IAAA,WAOA,QAAAjqE,GAAA+7B,EAAAsJ,EAAA6kC,EAAAC,GACA,GAAA9kC,GAAAp9B,EAAAxF,OAAA,aAAA2nE,EACAA,EAAAruC,GAAA,MAAAsuC,EACAtuC,EAAAga,KAAAs0B,GACAtuC,CAWA,KATA,GAGAjpB,GACAnQ,EAEA4J,EANAjN,GAAA,EACAsP,EAAAmtB,EAAAt5B,OACAkD,EAAAsC,EAAAo9B,KAGAilC,EAAA17C,KAEAkP,EAAAosC,MAEA5qE,EAAAsP,IACArC,EAAA+9D,EAAAj7D,IAAAyD,EAAAnN,EAAAhD,EAAAo5B,EAAAz8B,IAAA,KACAiN,EAAAxK,KAAAY,GAEA2nE,EAAAh7D,IAAAwD,GAAAnQ,GAQA,OAJA2nE,GAAAl8D,KAAA,SAAA7B,EAAA5G,GACAwkE,EAAArsC,EAAAn4B,EAAA3F,EAAAuM,EAAA84B,EAAA6kC,EAAAC,MAGArsC,EAGA,QAAAksC,GAAA7hE,EAAAk9B,GACA,KAAAA,EAAAp9B,EAAAxF,OAAA,MAAA0F,EACA,IAAA4zB,GAAAwuC,EAAAC,EAAAnlC,EAAA,EAGA,OAFA,OAAA+kC,GAAA/kC,GAAAp9B,EAAAxF,OAAAs5B,EAAA5zB,EAAA6hE,WACAjuC,KAAA5zB,EAAAiG,KAAA,SAAAyF,EAAAlG,GAA8CouB,EAAAh6B,MAAa4D,IAAAgI,EAAApB,OAAAy9D,EAAAn2D,EAAAwxB,QAC3D,MAAAklC,EAAAxuC,EAAAga,KAAA,SAAAj2C,EAAAC,GAAwD,MAAAwqE,GAAAzqE,EAAA6F,IAAA5F,EAAA4F,OAAgCo2B,EAzCxF,GAEAsuC,GACAD,EACAH,EAJAhiE,KACAuiE,IA2CA,OAAAP,IACAp7C,OAAA,SAAAkN,GAA6B,MAAA/7B,GAAA+7B,EAAA,EAAAjN,GAAAC,KAC7B5mB,IAAA,SAAA4zB,GAA0B,MAAA/7B,GAAA+7B,EAAA,EAAA/M,GAAAC,KAC1B+6C,QAAA,SAAAjuC,GAA8B,MAAAiuC,GAAAhqE,EAAA+7B,EAAA,EAAA/M,GAAAC,IAAA,IAC9BtpB,IAAA,SAAAoD,GAAoC,MAAdd,GAAAlG,KAAAgH,GAAckhE,GACpCO,SAAA,SAAAl9D,GAAkE,MAAnCk9D,GAAAviE,EAAAxF,OAAA,GAAA6K,EAAmC28D,GAClEI,WAAA,SAAA/8D,GAAqD,MAApB+8D,GAAA/8D,EAAoB28D,GACrDG,OAAA,SAAA3/D,GAAqC,MAAZ2/D,GAAA3/D,EAAYw/D,KAsBrCQ,GAAA77C,GAAApvB,SAEA0vB,IAAA1vB,UAAA2vB,GAAA3vB,WACA+B,YAAA2tB,GACA2jB,IAAA43B,GAAA53B,IACA59B,IAAA,SAAAtS,GAGA,MAFAA,IAAA,GACA1C,KAAA2xD,GAAAjvD,KACA1C,MAEAiO,OAAAu8D,GAAAv8D,OACA67D,MAAAU,GAAAV,MACAx9D,OAAAk+D,GAAAxiE,KACA48B,KAAA4lC,GAAA5lC,KACA5b,MAAAwhD,GAAAxhD,MACA7a,KAAAq8D,GAAAr8D,KAmBA,IAAAnG,IAAA,SAAAE,GACA,GAAAF,KACA,QAAAtC,KAAAwC,GAAAF,EAAAlG,KAAA4D,EACA,OAAAsC,IAGAsE,GAAA,SAAApE,GACA,GAAAoE,KACA,QAAA5G,KAAAwC,GAAAoE,EAAAxK,KAAAoG,EAAAxC;AACA,MAAA4G,IAGAy9D,GAAA,SAAA7hE,GACA,GAAA6hE,KACA,QAAArkE,KAAAwC,GAAA6hE,EAAAjoE,MAAqC4D,MAAAhD,MAAAwF,EAAAxC,IACrC,OAAAqkE,IAgCAU,GAAA,SAAAC,GAIA,QAAA1rD,GAAA7U,EAAAK,GACA,GAAAmgE,GAAAv7C,EAAAM,EAAAk7C,EAAAzgE,EAAA,SAAAb,EAAAjK,GACA,MAAAsrE,KAAArhE,EAAAjK,EAAA,IACA+vB,EAAA9lB,OAAAqhE,EAAAngE,EAAAglB,GAAAlmB,EAAAkB,GAAA2kB,GAAA7lB,MAGA,OADAomB,GAAAN,UACAM,EAGA,QAAAk7C,GAAAzgE,EAAAK,GAUA,QAAAqgE,KACA,GAAA3uB,GAAAxwB,EAAA,MAAAo/C,EACA,IAAAC,EAAA,MAAAA,IAAA,EAAAC,CAGA,IAAA7rE,GAAAoS,EAAA2qC,CACA,SAAA/xC,EAAAmuC,WAAA/mC,GAAA,CAEA,IADA,GAAAlS,GAAAkS,EACAlS,IAAAqsB,GACA,QAAAvhB,EAAAmuC,WAAAj5C,GAAA,CACA,QAAA8K,EAAAmuC,WAAAj5C,EAAA,WACAA,EAWA,MARA68C,GAAA78C,EAAA,EACAF,EAAAgL,EAAAmuC,WAAAj5C,EAAA,GACA,KAAAF,GACA4rE,GAAA,EACA,KAAA5gE,EAAAmuC,WAAAj5C,EAAA,MAAA68C,GACS,KAAA/8C,IACT4rE,GAAA,GAEA5gE,EAAAxK,MAAA4R,EAAA,EAAAlS,GAAA4/C,QAAA,WAIA,KAAA/C,EAAAxwB,GAAA,CACA,GAAAhe,GAAA,CAEA,IADAvO,EAAAgL,EAAAmuC,WAAA4D,KACA,KAAA/8C,EAAA4rE,GAAA,MACA,SAAA5rE,EAA4B4rE,GAAA,EAAY,KAAA5gE,EAAAmuC,WAAA4D,WAAAxuC,OACxC,IAAAvO,IAAA8rE,EAAA,QACA,OAAA9gE,GAAAxK,MAAA4R,EAAA2qC,EAAAxuC,GAIA,MAAAvD,GAAAxK,MAAA4R,GAGA,IAhDA,GAMA7C,GACAq8D,EAPAC,KACAF,KACAp7C,KACAhE,EAAAvhB,EAAA3H,OACA05C,EAAA,EACAvtC,EAAA,GA2CAD,EAAAm8D,OAAAC,GAAA,CAEA,IADA,GAAAjrE,MACA6O,IAAAs8D,GAAAt8D,IAAAo8D,GACAjrE,EAAAiC,KAAA4M,GACAA,EAAAm8D,GAEArgE,IAAA,OAAA3K,EAAA2K,EAAA3K,EAAA8O,OACA+gB,EAAA5tB,KAAAjC,GAGA,MAAA6vB,GAGA,QAAAjjB,GAAAijB,EAAAN,GAEA,MADA,OAAAA,MAAAK,GAAAC,KACAN,EAAAlnB,IAAAgjE,GAAAlrD,KAAA0qD,IAAAzqE,OAAAyvB,EAAAxnB,IAAA,SAAAoB,GACA,MAAA8lB,GAAAlnB,IAAA,SAAA2nB,GACA,MAAAq7C,GAAA5hE,EAAAumB,MACO7P,KAAA0qD,MACF1qD,KAAA,MAGL,QAAAmrD,GAAAz7C,GACA,MAAAA,GAAAxnB,IAAAkjE,GAAAprD,KAAA,MAGA,QAAAorD,GAAA9hE,GACA,MAAAA,GAAApB,IAAAgjE,GAAAlrD,KAAA0qD,GAGA,QAAAQ,GAAA/gE,GACA,aAAAA,EAAA,GACAkhE,EAAA70B,KAAArsC,GAAA,QAAAA,EAAA80C,QAAA,gBACA90C,EA9FA,GAAAkhE,GAAA,GAAAlsB,QAAA,KAAAurB,EAAA,OACAO,EAAAP,EAAApyB,WAAA,EAgGA,QACAt5B,QACA4rD,YACAn+D,SACA0+D,eAIAG,GAAAb,GAAA,KAEAc,GAAAD,GAAAtsD,MACAwsD,GAAAF,GAAAV,UACAa,GAAAH,GAAA7+D,OACAi/D,GAAAJ,GAAAH,WAEAQ,GAAAlB,GAAA,MAEAmB,GAAAD,GAAA3sD,MACA6sD,GAAAF,GAAAf,UACAkB,GAAAH,GAAAl/D,OACAs/D,GAAAJ,GAAAR,WAEAa,GAAA,SAAA1lE,EAAAI,GAMA,QAAAulE,KACA,GAAA5sE,GAEA4E,EADA0K,EAAAyiB,EAAA5uB,OAEA0pE,EAAA,EACAC,EAAA,CAEA,KAAA9sE,EAAA,EAAeA,EAAAsP,IAAOtP,EACtB4E,EAAAmtB,EAAA/xB,GAAA6sE,GAAAjoE,EAAAqC,EAAA6lE,GAAAloE,EAAAyC,CAGA,KAAAwlE,IAAAv9D,EAAArI,EAAA6lE,IAAAx9D,EAAAjI,EAAArH,EAAA,EAAiDA,EAAAsP,IAAOtP,EACxD4E,EAAAmtB,EAAA/xB,GAAA4E,EAAAqC,GAAA4lE,EAAAjoE,EAAAyC,GAAAylE,EAjBA,GAAA/6C,EAiCA,OA/BA,OAAA9qB,MAAA,GACA,MAAAI,MAAA,GAkBAulE,EAAApiD,WAAA,SAAAzb,GACAgjB,EAAAhjB,GAGA69D,EAAA3lE,EAAA,SAAA8H,GACA,MAAAC,WAAA7L,QAAA8D,GAAA8H,EAAA69D,GAAA3lE,GAGA2lE,EAAAvlE,EAAA,SAAA0H,GACA,MAAAC,WAAA7L,QAAAkE,GAAA0H,EAAA69D,GAAAvlE,GAGAulE,GAGAG,GAAA,SAAA9lE,GACA,kBACA,MAAAA,KAIA+lE,GAAA,WACA,aAAAplE,KAAAiqD,SAAA,KAGAob,GAAA,SAAAxjE,GACA,GAAAxC,IAAAtG,KAAAywB,GAAAxxB,KAAA,KAAA6J,GACApC,GAAA1G,KAAA0wB,GAAAzxB,KAAA,KAAA6J,EACA,OAAAkM,IAAAhV,KAAA+wB,MAAAzqB,EAAAI,GAAAJ,EAAAI,EAAAoC,IAmFAyjE,GAAA,SAAAjmE,EAAAI,GACA,GAAA6W,MAAAjX,OAAAiX,MAAA7W,MAAA,MAAA1G,KAEA,IAAAqwB,GAAArwB,KAAAguB,IACAsC,EAAAtwB,KAAAiuB,IACAsC,EAAAvwB,KAAAkuB,IACAsC,EAAAxwB,KAAAmuB,GAKA,IAAA5Q,MAAA8S,GACAE,GAAAF,EAAAppB,KAAAC,MAAAZ,IAAA,EACAkqB,GAAAF,EAAArpB,KAAAC,MAAAR,IAAA,MAIA,MAAA2pB,EAAA/pB,KAAAiqB,GAAAD,EAAA5pB,KAAA8pB,GAiCA,MAAAxwB,KAhCA,IAEAoS,GACA/S,EAHAkc,EAAAgV,EAAAF,EACApsB,EAAAjE,KAAAmwB,KAIA,QAAA9wB,GAAAqH,GAAA4pB,EAAAE,GAAA,MAAAlqB,GAAA+pB,EAAAE,GAAA,GACA,OACA,EAAAne,GAAA,GAAArM,OAAA,GAAAqM,EAAA/S,GAAA4E,IAAAmO,QACAmJ,GAAA,EAAAgV,EAAAF,EAAA9U,EAAAiV,EAAAF,EAAA/U,EAAAjV,EAAAiqB,GAAA7pB,EAAA8pB,EACA,MAEA,QACA,EAAApe,GAAA,GAAArM,OAAA,GAAAqM,EAAA/S,GAAA4E,IAAAmO,QACAmJ,GAAA,EAAA8U,EAAAE,EAAAhV,EAAAiV,EAAAF,EAAA/U,EAAA8U,EAAA/pB,GAAAI,EAAA8pB,EACA,MAEA,QACA,EAAApe,GAAA,GAAArM,OAAA,GAAAqM,EAAA/S,GAAA4E,IAAAmO,QACAmJ,GAAA,EAAAgV,EAAAF,EAAA9U,EAAA+U,EAAAE,EAAAjV,EAAAjV,EAAAiqB,GAAAD,EAAA5pB,EACA,MAEA,QACA,EAAA0L,GAAA,GAAArM,OAAA,GAAAqM,EAAA/S,GAAA4E,IAAAmO,QACAmJ,GAAA,EAAA8U,EAAAE,EAAAhV,EAAA+U,EAAAE,EAAAjV,EAAA8U,EAAA/pB,GAAAgqB,EAAA5pB,GAKA1G,KAAAmwB,OAAAnwB,KAAAmwB,MAAA3tB,SAAAxC,KAAAmwB,MAAAlsB,GAUA,MAJAjE,MAAAguB,IAAAqC,EACArwB,KAAAiuB,IAAAqC,EACAtwB,KAAAkuB,IAAAqC,EACAvwB,KAAAmuB,IAAAqC,EACAxwB,MAGAwsE,GAAA,WACA,GAAAloE,KAIA,OAHAtE,MAAAysE,MAAA,SAAAxoE,GACA,IAAAA,EAAAzB,OAAA,EAAA8B,GAAAxC,KAAAmC,EAAAK,YAA8CL,IAAA0sB,QAE9CrsB,GAGAooE,GAAA,SAAAt+D,GACA,MAAAC,WAAA7L,OACAxC,KAAA+wB,OAAA3iB,EAAA,OAAAA,EAAA,OAAA2iB,OAAA3iB,EAAA,OAAAA,EAAA,OACAmP,MAAAvd,KAAAguB,KAAAsD,SAAAtxB,KAAAguB,IAAAhuB,KAAAiuB,MAAAjuB,KAAAkuB,IAAAluB,KAAAmuB,OAGAw+C,GAAA,SAAA1oE,EAAAosB,EAAAC,EAAAC,EAAAC,GACAxwB,KAAAiE,OACAjE,KAAAqwB,KACArwB,KAAAswB,KACAtwB,KAAAuwB,KACAvwB,KAAAwwB,MAGAo8C,GAAA,SAAAtmE,EAAAI,EAAA6nB,GACA,GAAAjqB,GAGAisB,EACAC,EACA+U,EACAC,EAKA9lB,EACArgB,EAXAgxB,EAAArwB,KAAAguB,IACAsC,EAAAtwB,KAAAiuB,IAKAse,EAAAvsC,KAAAkuB,IACAse,EAAAxsC,KAAAmuB,IACA0+C,KACA5oE,EAAAjE,KAAAmwB,KAYA,KARAlsB,GAAA4oE,EAAA/qE,KAAA,GAAA6qE,IAAA1oE,EAAAosB,EAAAC,EAAAic,EAAAC,IACA,MAAAje,IAAApM,KAEAkO,EAAA/pB,EAAAioB,EAAA+B,EAAA5pB,EAAA6nB,EACAge,EAAAjmC,EAAAioB,EAAAie,EAAA9lC,EAAA6nB,EACAA,MAGA7O,EAAAmtD,EAAAztD,OAGA,OAAAnb,EAAAyb,EAAAzb,QACAssB,EAAA7Q,EAAA2Q,IAAAkc,IACA/b,EAAA9Q,EAAA4Q,IAAAkc,IACAjH,EAAA7lB,EAAA6Q,IAAAF,IACAmV,EAAA9lB,EAAA8Q,IAAAF,GAGA,GAAArsB,EAAAzB,OAAA,CACA,GAAAutB,IAAAQ,EAAAgV,GAAA,EACAvV,GAAAQ,EAAAgV,GAAA,CAEAqnC,GAAA/qE,KACA,GAAA6qE,IAAA1oE,EAAA,GAAA8rB,EAAAC,EAAAuV,EAAAC,GACA,GAAAmnC,IAAA1oE,EAAA,GAAAssB,EAAAP,EAAAD,EAAAyV,GACA,GAAAmnC,IAAA1oE,EAAA,GAAA8rB,EAAAS,EAAA+U,EAAAvV,GACA,GAAA28C,IAAA1oE,EAAA,GAAAssB,EAAAC,EAAAT,EAAAC,KAIA3wB,GAAAqH,GAAAspB,IAAA,EAAA1pB,GAAAypB,KACArQ,EAAAmtD,IAAArqE,OAAA,GACAqqE,IAAArqE,OAAA,GAAAqqE,IAAArqE,OAAA,EAAAnD,GACAwtE,IAAArqE,OAAA,EAAAnD,GAAAqgB,OAKA,CACA,GAAAtH,GAAA9R,GAAAtG,KAAAywB,GAAAxxB,KAAA,KAAAgF,EAAAK,MACA+T,EAAA3R,GAAA1G,KAAA0wB,GAAAzxB,KAAA,KAAAgF,EAAAK,MACA+gC,EAAAjtB,IAAAC,GACA,IAAAgtB,EAAA9W,EAAA,CACA,GAAAzlB,GAAA7B,KAAAkV,KAAAoS,EAAA8W,EACAhV,GAAA/pB,EAAAwC,EAAAwnB,EAAA5pB,EAAAoC,EACAyjC,EAAAjmC,EAAAwC,EAAA0jC,EAAA9lC,EAAAoC,EACAxE,EAAAL,EAAAK,MAKA,MAAAA,IAGAwoE,GAAA,SAAAhkE,GACA,GAAAyU,MAAAjX,GAAAtG,KAAAywB,GAAAxxB,KAAA,KAAA6J,KAAAyU,MAAA7W,GAAA1G,KAAA0wB,GAAAzxB,KAAA,KAAA6J,IAAA,MAAA9I,KAEA,IAAAoS,GAEA26D,EACAt/B,EACA9c,EAKArqB,EACAI,EACAqpB,EACAC,EACAxoB,EACAC,EACApI,EACAkS,EAfAtN,EAAAjE,KAAAmwB,MAIAE,EAAArwB,KAAAguB,IACAsC,EAAAtwB,KAAAiuB,IACAsC,EAAAvwB,KAAAkuB,IACAsC,EAAAxwB,KAAAmuB,GAWA,KAAAlqB,EAAA,MAAAjE,KAIA,IAAAiE,EAAAzB,OAAA,QAGA,IAFAgF,EAAAlB,IAAAypB,GAAAM,EAAAE,GAAA,IAAAF,EAAAN,EAAmDQ,EAAAR,GACnDtoB,EAAAf,IAAAspB,GAAAM,EAAAE,GAAA,IAAAF,EAAAN,EAAoDQ,EAAAR,EACpD5d,EAAAnO,QAAA5E,EAAAoI,GAAA,EAAAD,IAAA,MAAAxH,KACA,KAAAiE,EAAAzB,OAAA,OACA4P,EAAA/S,EAAA,MAAA+S,EAAA/S,EAAA,MAAA+S,EAAA/S,EAAA,QAAA0tE,EAAA36D,EAAAb,EAAAlS,GAIA,KAAA4E,EAAAK,OAAAwE,GAAA,GAAA2kC,EAAAxpC,QAAA0sB,MAAA,MAAA3wB,KAIA,QAHA2wB,EAAA1sB,EAAA0sB,aAAA1sB,GAAA0sB,KAGA8c,GAAA9c,EAAA8c,EAAA9c,aAAA8c,GAAA9c,KAAA3wB,MAGAoS,GAGAue,EAAAve,EAAA/S,GAAAsxB,QAAAve,GAAA/S,IAGA4E,EAAAmO,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACAnO,KAAAmO,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MACAnO,EAAAzB,SACAuqE,IAAAx7D,GAAAtN,EACAjE,KAAAmwB,MAAAlsB,GAGAjE,OAbAA,KAAAmwB,MAAAQ,EAAA3wB,OAqBAgtE,GAAA,WACA,MAAAhtE,MAAAmwB,OAGA88C,GAAA,WACA,GAAAroC,GAAA,CAIA,OAHA5kC,MAAAysE,MAAA,SAAAxoE,GACA,IAAAA,EAAAzB,OAAA,IAAAoiC,QAAgC3gC,IAAA0sB,QAEhCiU,GAGAsoC,GAAA,SAAArpE,GACA,GAAA6b,GAAA+qB,EAAApa,EAAAC,EAAAC,EAAAC,EAAAq8C,KAAA5oE,EAAAjE,KAAAmwB,KAEA,KADAlsB,GAAA4oE,EAAA/qE,KAAA,GAAA6qE,IAAA1oE,EAAAjE,KAAAguB,IAAAhuB,KAAAiuB,IAAAjuB,KAAAkuB,IAAAluB,KAAAmuB,MACAzO,EAAAmtD,EAAAztD,OACA,IAAAvb,EAAAI,EAAAyb,EAAAzb,KAAAosB,EAAA3Q,EAAA2Q,GAAAC,EAAA5Q,EAAA4Q,GAAAC,EAAA7Q,EAAA6Q,GAAAC,EAAA9Q,EAAA8Q,KAAAvsB,EAAAzB,OAAA,CACA,GAAAutB,IAAAM,EAAAE,GAAA,EAAAP,GAAAM,EAAAE,GAAA,GACAia,EAAAxmC,EAAA,KAAA4oE,EAAA/qE,KAAA,GAAA6qE,IAAAliC,EAAA1a,EAAAC,EAAAO,EAAAC,KACAia,EAAAxmC,EAAA,KAAA4oE,EAAA/qE,KAAA,GAAA6qE,IAAAliC,EAAApa,EAAAL,EAAAD,EAAAS,KACAia,EAAAxmC,EAAA,KAAA4oE,EAAA/qE,KAAA,GAAA6qE,IAAAliC,EAAA1a,EAAAO,EAAAC,EAAAP,KACAya,EAAAxmC,EAAA,KAAA4oE,EAAA/qE,KAAA,GAAA6qE,IAAAliC,EAAApa,EAAAC,EAAAP,EAAAC,IAGA,MAAAhwB,OAGAmtE,GAAA,SAAAtpE,GACA,GAAA6b,GAAAmtD,KAAAl8C,IAEA,KADA3wB,KAAAmwB,OAAA08C,EAAA/qE,KAAA,GAAA6qE,IAAA3sE,KAAAmwB,MAAAnwB,KAAAguB,IAAAhuB,KAAAiuB,IAAAjuB,KAAAkuB,IAAAluB,KAAAmuB,MACAzO,EAAAmtD,EAAAztD,OAAA,CACA,GAAAnb,GAAAyb,EAAAzb,IACA,IAAAA,EAAAzB,OAAA,CACA,GAAAioC,GAAApa,EAAA3Q,EAAA2Q,GAAAC,EAAA5Q,EAAA4Q,GAAAC,EAAA7Q,EAAA6Q,GAAAC,EAAA9Q,EAAA8Q,GAAAT,GAAAM,EAAAE,GAAA,EAAAP,GAAAM,EAAAE,GAAA,GACAia,EAAAxmC,EAAA,KAAA4oE,EAAA/qE,KAAA,GAAA6qE,IAAAliC,EAAApa,EAAAC,EAAAP,EAAAC,KACAya,EAAAxmC,EAAA,KAAA4oE,EAAA/qE,KAAA,GAAA6qE,IAAAliC,EAAA1a,EAAAO,EAAAC,EAAAP,KACAya,EAAAxmC,EAAA,KAAA4oE,EAAA/qE,KAAA,GAAA6qE,IAAAliC,EAAApa,EAAAL,EAAAD,EAAAS,KACAia,EAAAxmC,EAAA,KAAA4oE,EAAA/qE,KAAA,GAAA6qE,IAAAliC,EAAA1a,EAAAC,EAAAO,EAAAC,IAEAG,EAAA7uB,KAAA4d,GAEA,KAAAA,EAAAiR,EAAAvR,OACAvb,EAAA6b,EAAAzb,KAAAyb,EAAA2Q,GAAA3Q,EAAA4Q,GAAA5Q,EAAA6Q,GAAA7Q,EAAA8Q,GAEA,OAAAxwB,OAOAotE,GAAA,SAAAh/D,GACA,MAAAC,WAAA7L,QAAAxC,KAAAywB,GAAAriB,EAAApO,WAAAywB,IAOA48C,GAAA,SAAAj/D,GACA,MAAAC,WAAA7L,QAAAxC,KAAA0wB,GAAAtiB,EAAApO,WAAA0wB,IAwBA48C,GAAAn8C,GAAA5xB,UAAA8xB,GAAA9xB,SAEA+tE,IAAArgE,KAAA,WACA,GAEAmkB,GACAqZ,EAHAx9B,EAAA,GAAAokB,IAAArxB,KAAAywB,GAAAzwB,KAAA0wB,GAAA1wB,KAAAguB,IAAAhuB,KAAAiuB,IAAAjuB,KAAAkuB,IAAAluB,KAAAmuB,KACAlqB,EAAAjE,KAAAmwB,KAIA,KAAAlsB,EAAA,MAAAgJ,EAEA,KAAAhJ,EAAAzB,OAAA,MAAAyK,GAAAkjB,MAAAoB,GAAAttB,GAAAgJ,CAGA,KADAmkB,IAAYtD,OAAA7pB,EAAAgU,OAAAhL,EAAAkjB,MAAA,GAAApqB,OAAA,KACZ9B,EAAAmtB,EAAAhS,OACA,OAAA/f,GAAA,EAAmBA,EAAA,IAAOA,GAC1BorC,EAAAxmC,EAAA6pB,OAAAzuB,MACAorC,EAAAjoC,OAAA4uB,EAAAtvB,MAAsCgsB,OAAA2c,EAAAxyB,OAAAhU,EAAAgU,OAAA5Y,GAAA,GAAA0G,OAAA,KACtC9B,EAAAgU,OAAA5Y,GAAAkyB,GAAAkZ,GAKA,OAAAx9B,IAGAqgE,GAAAt4D,IAAAs3D,GACAgB,GAAA18C,UACA08C,GAAAv8C,MAAAw7C,GACAe,GAAAhpE,KAAAkoE,GACAc,GAAArkD,OAAAyjD,GACAY,GAAA57C,KAAAk7C,GACAU,GAAAr/D,OAAA6+D,GACAQ,GAAAt8C,aACAs8C,GAAAh2D,KAAA01D,GACAM,GAAA1oC,KAAAqoC,GACAK,GAAAb,MAAAS,GACAI,GAAAC,WAAAJ,GACAG,GAAAhnE,EAAA8mE,GACAE,GAAA5mE,EAAA2mE,EAUA,IA+kBAG,IA/kBAC,GAAA,SAAAl/C,GAQA,QAAA09C,KAoBA,QAAAlsE,GAAA2tE,EAAAr9C,EAAAC,EAAAC,EAAAC,GACA,GAAAlsB,GAAAopE,EAAAppE,KAAAqpE,EAAAD,EAAA1zD,IAAA4zD,EAAAD,CACA,MAAArpE,EAiBA,MAAA+rB,GAAA0gC,EAAA/2C,GAAAuW,EAAAwgC,EAAA/2C,GAAAsW,EAAAu9C,EAAA7zD,GAAAwW,EAAAq9C,EAAA7zD,CAhBA,IAAA1V,EAAAf,MAAAU,EAAAV,MAAA,CACA,GAAA+C,GAAAyqD,EAAAzsD,EAAAgC,EAAAhC,EAAAktB,GACA9qB,EAAAmnE,EAAAvpE,EAAAoC,EAAApC,EAAAmtB,GACAlX,EAAAjU,IAAAI,GACA6T,GAAAP,MACA,IAAA1T,MAAA+lE,KAAA9xD,GAAAjU,KACA,IAAAI,MAAA2lE,KAAA9xD,GAAA7T,KACA6T,GAAAP,GAAAO,EAAAtT,KAAAkV,KAAA5B,OAAAuzD,EACA7pE,EAAAutB,KAAAlrB,GAAAiU,IAAAP,GAAA2zD,OAAAI,EAAAJ,IACA1pE,EAAAwtB,KAAA/qB,GAAA6T,GAAAP,EACA1V,EAAAktB,IAAAlrB,GAAA0T,EAAA,EAAAA,GACA1V,EAAAmtB,IAAA/qB,EAAAsT,KAzBA,OARA3a,GACAywB,EACA7rB,EACA8sD,EACA8c,EACAD,EACAG,EANAp/D,EAAAyiB,EAAA5uB,OAQAkL,EAAA,EAAmBA,EAAAsgE,IAAgBtgE,EAEnC,IADAoiB,EAAAqB,GAAAC,EAAA9qB,GAAAI,IAAA6mE,WAAAU,GACA5uE,EAAA,EAAiBA,EAAAsP,IAAOtP,EACxB4E,EAAAmtB,EAAA/xB,GACAuuE,EAAAM,EAAAjqE,EAAAV,OAAAwqE,EAAAH,IACA7c,EAAA9sD,EAAAqC,EAAArC,EAAAutB,GACAq8C,EAAA5pE,EAAAyC,EAAAzC,EAAAwtB,GACA3B,EAAA28C,MAAA1sE,GA2BA,QAAAkuE,GAAAP,GACA,GAAAA,EAAAppE,KAAA,MAAAopE,GAAA1zD,EAAAk0D,EAAAR,EAAAppE,KAAAf,MACA,QAAAlE,GAAAquE,EAAA1zD,EAAA,EAA4B3a,EAAA,IAAOA,EACnCquE,EAAAruE,IAAAquE,EAAAruE,GAAA2a,EAAA0zD,EAAA1zD,IACA0zD,EAAA1zD,EAAA0zD,EAAAruE,GAAA2a,GAKA,QAAA6P,KACA,GAAAuH,EAAA,CACA,GAAA/xB,GAAA4E,EAAA0K,EAAAyiB,EAAA5uB,MAEA,KADA0rE,EAAA,GAAAnoE,OAAA4I,GACAtP,EAAA,EAAeA,EAAAsP,IAAOtP,EAAA4E,EAAAmtB,EAAA/xB,GAAA6uE,EAAAjqE,EAAAV,QAAAgrB,EAAAtqB,EAAA5E,EAAA+xB,IA/DtB,GAAAA,GACA88C,EACAJ,EAAA,EACAE,EAAA,CAgFA,OA9EA,kBAAAz/C,OAAA69C,GAAA,MAAA79C,EAAA,GAAAA,IA6DA09C,EAAApiD,WAAA,SAAAzb,GACAgjB,EAAAhjB,EACAyb,KAGAoiD,EAAA+B,WAAA,SAAA5/D,GACA,MAAAC,WAAA7L,QAAAwrE,GAAA5/D,EAAA69D,GAAA+B,GAGA/B,EAAA6B,SAAA,SAAA1/D,GACA,MAAAC,WAAA7L,QAAAsrE,GAAA1/D,EAAA69D,GAAA6B,GAGA7B,EAAA19C,OAAA,SAAAngB,GACA,MAAAC,WAAA7L,QAAA+rB,EAAA,kBAAAngB,KAAAg+D,IAAAh+D,GAAAyb,IAAAoiD,GAAA19C,GAGA09C,GAaAkC,GAAA,SAAAC,GAaA,QAAAC,GAAAF,GACA,SAAAlnE,KAAAG,IAAA0D,EAAAqjE,EAAArgD,OAAAvqB,OAAAuH,EAAAqjE,EAAAl2D,OAAA1U,QAGA,QAAA0oE,GAAA37B,GACA,OAAA5iC,GAAA,EAAAiB,EAAAy/D,EAAA5rE,OAAqCkL,EAAAsgE,IAAgBtgE,EACrD,OAAAygE,GAAArgD,EAAA7V,EAAA3R,EAAAI,EAAA6T,EAAAza,EAAAT,EAAA,EAAuDA,EAAAsP,IAAOtP,EAC9D8uE,EAAAC,EAAA/uE,GAAAyuB,EAAAqgD,EAAArgD,OAAA7V,EAAAk2D,EAAAl2D,OACA3R,EAAA2R,EAAA3R,EAAA2R,EAAAuZ,GAAA1D,EAAAxnB,EAAAwnB,EAAA0D,IAAA66C,KACA3lE,EAAAuR,EAAAvR,EAAAuR,EAAAwZ,GAAA3D,EAAApnB,EAAAonB,EAAA2D,IAAA46C,KACA9xD,EAAAtT,KAAAkV,KAAA7V,IAAAI,KACA6T,KAAA+zD,EAAAjvE,IAAAkb,EAAA+1B,EAAAi+B,EAAAlvE,GACAiH,GAAAiU,EAAA7T,GAAA6T,EACAtC,EAAAuZ,IAAAlrB,GAAAxG,EAAA0uE,EAAAnvE,IACA4Y,EAAAwZ,IAAA/qB,EAAA5G,EACAguB,EAAA0D,IAAAlrB,GAAAxG,EAAA,EAAAA,GACAguB,EAAA2D,IAAA/qB,EAAA5G,EAKA,QAAA+pB,KACA,GAAAuH,EAAA,CAEA,GAAA/xB,GAIA8uE,EAHAx/D,EAAAyiB,EAAA5uB,OACAtD,EAAAkvE,EAAA5rE,OACAmvB,EAAAhD,GAAAyC,EAAAryB,EAGA,KAAAM,EAAA,EAAAyL,EAAA,GAAA/E,OAAA4I,GAAqCtP,EAAAH,IAAOG,EAC5C8uE,EAAAC,EAAA/uE,GAAA8uE,EAAA5qE,MAAAlE,EACA,gBAAA8uE,GAAArgD,SAAAqgD,EAAArgD,OAAA4D,GAAAC,EAAAw8C,EAAArgD,SACA,gBAAAqgD,GAAAl2D,SAAAk2D,EAAAl2D,OAAAyZ,GAAAC,EAAAw8C,EAAAl2D,SACAnN,EAAAqjE,EAAArgD,OAAAvqB,QAAAuH,EAAAqjE,EAAArgD,OAAAvqB,QAAA,KACAuH,EAAAqjE,EAAAl2D,OAAA1U,QAAAuH,EAAAqjE,EAAAl2D,OAAA1U,QAAA,IAGA,KAAAlE,EAAA,EAAAmvE,EAAA,GAAAzoE,OAAA7G,GAAoCG,EAAAH,IAAOG,EAC3C8uE,EAAAC,EAAA/uE,GAAAmvE,EAAAnvE,GAAAyL,EAAAqjE,EAAArgD,OAAAvqB,QAAAuH,EAAAqjE,EAAArgD,OAAAvqB,OAAAuH,EAAAqjE,EAAAl2D,OAAA1U,OAGAgrE,GAAA,GAAAxoE,OAAA7G,GAAAuvE,IACAH,EAAA,GAAAvoE,OAAA7G,GAAAwvE,KAGA,QAAAD,KACA,GAAAr9C,EAEA,OAAA/xB,GAAA,EAAAsP,EAAAy/D,EAAA5rE,OAAqCnD,EAAAsP,IAAOtP,EAC5CkvE,EAAAlvE,IAAAyuE,EAAAM,EAAA/uE,KAAA+uE,GAIA,QAAAM,KACA,GAAAt9C,EAEA,OAAA/xB,GAAA,EAAAsP,EAAAy/D,EAAA5rE,OAAqCnD,EAAAsP,IAAOtP,EAC5CivE,EAAAjvE,IAAA2/B,EAAAovC,EAAA/uE,KAAA+uE,GAtEA,GAEAG,GAEAD,EACAl9C,EACAtmB,EACA0jE,EAPAzvE,EAAAwE,GACAuqE,EAAAO,EAEArvC,EAAAotC,GAAA,IAKA4B,EAAA,CA2FA,OAzFA,OAAAI,UAgEAnC,EAAApiD,WAAA,SAAAzb,GACAgjB,EAAAhjB,EACAyb,KAGAoiD,EAAAmC,MAAA,SAAAhgE,GACA,MAAAC,WAAA7L,QAAA4rE,EAAAhgE,EAAAyb,IAAAoiD,GAAAmC,GAGAnC,EAAAltE,GAAA,SAAAqP,GACA,MAAAC,WAAA7L,QAAAzD,EAAAqP,EAAA69D,GAAAltE,GAGAktE,EAAA+B,WAAA,SAAA5/D,GACA,MAAAC,WAAA7L,QAAAwrE,GAAA5/D,EAAA69D,GAAA+B,GAGA/B,EAAA6B,SAAA,SAAA1/D,GACA,MAAAC,WAAA7L,QAAAsrE,EAAA,kBAAA1/D,KAAAg+D,IAAAh+D,GAAAqgE,IAAAxC,GAAA6B,GAGA7B,EAAAjtC,SAAA,SAAA5wB,GACA,MAAAC,WAAA7L,QAAAw8B,EAAA,kBAAA5wB,KAAAg+D,IAAAh+D,GAAAsgE,IAAAzC,GAAAjtC,GAGAitC,GAWA0C,GAAA,GACAC,GAAA3nE,KAAAo6D,IAAA,EAAAp6D,KAAAkV,KAAA,IAEA0yD,GAAA,SAAAz9C,GAaA,QAAAmK,KACAnuB,IACAsD,EAAAzR,KAAA,OAAA4vE,GACAv+B,EAAAw+B,IACAC,EAAAlkE,OACA6F,EAAAzR,KAAA,MAAA4vE,IAIA,QAAAzhE,KACA,GAAA/N,GAAA4E,EAAA0K,EAAAyiB,EAAA5uB,MAQA,KANA8tC,IAAA0+B,EAAA1+B,GAAA2+B,EAEAC,EAAA/gE,KAAA,SAAA89D,GACAA,EAAA37B,KAGAjxC,EAAA,EAAeA,EAAAsP,IAAOtP,EACtB4E,EAAAmtB,EAAA/xB,GACA,MAAA4E,EAAA2lD,GAAA3lD,EAAAqC,GAAArC,EAAAutB,IAAA29C,GACAlrE,EAAAqC,EAAArC,EAAA2lD,GAAA3lD,EAAAutB,GAAA,GACA,MAAAvtB,EAAA2kC,GAAA3kC,EAAAyC,GAAAzC,EAAAwtB,IAAA09C,GACAlrE,EAAAyC,EAAAzC,EAAA2kC,GAAA3kC,EAAAwtB,GAAA,GAIA,QAAA29C,KACA,OAAAnrE,GAAA5E,EAAA,EAAAsP,EAAAyiB,EAAA5uB,OAA2CnD,EAAAsP,IAAOtP,EAAA,CAElD,GADA4E,EAAAmtB,EAAA/xB,GAAA4E,EAAAV,MAAAlE,EACAke,MAAAtZ,EAAAqC,IAAAiX,MAAAtZ,EAAAyC,GAAA,CACA,GAAA6nB,GAAAogD,GAAA1nE,KAAAkV,KAAA9c,GAAAo4B,EAAAp4B,EAAAuvE,EACA3qE,GAAAqC,EAAAioB,EAAAtnB,KAAAgU,IAAAwc,GACAxzB,EAAAyC,EAAA6nB,EAAAtnB,KAAAiU,IAAAuc,IAEAla,MAAAtZ,EAAAutB,KAAAjU,MAAAtZ,EAAAwtB,OACAxtB,EAAAutB,GAAAvtB,EAAAwtB,GAAA,IAKA,QAAA49C,GAAApD,GAEA,MADAA,GAAApiD,YAAAoiD,EAAApiD,WAAAuH,GACA66C,EAvDA,GAAA4C,GACAv+B,EAAA,EACAw+B,EAAA,KACAG,EAAA,EAAAhoE,KAAAkE,IAAA2jE,EAAA,OACAE,EAAA,EACAG,EAAA,GACAD,EAAAvgD,KACAogD,EAAAztD,GAAAia,GACA7qB,EAAAjC,EAAA,aAoDA,OAlDA,OAAA2iB,UAgDAg+C,IAEAP,GACAzhE,OAEAqU,QAAA,WACA,MAAAstD,GAAAttD,QAAA8Z,GAAAszC,GAGAhkE,KAAA,WACA,MAAAkkE,GAAAlkE,OAAAgkE,GAGAz9C,MAAA,SAAAhjB,GACA,MAAAC,WAAA7L,QAAA4uB,EAAAhjB,EAAAghE,IAAAF,EAAA/gE,KAAAkhE,GAAAR,GAAAz9C,GAGAkf,MAAA,SAAAliC,GACA,MAAAC,WAAA7L,QAAA8tC,GAAAliC,EAAAygE,GAAAv+B,GAGAw+B,SAAA,SAAA1gE,GACA,MAAAC,WAAA7L,QAAAssE,GAAA1gE,EAAAygE,GAAAC,GAGAG,WAAA,SAAA7gE,GACA,MAAAC,WAAA7L,QAAAysE,GAAA7gE,EAAAygE,IAAAI,GAGAD,YAAA,SAAA5gE,GACA,MAAAC,WAAA7L,QAAAwsE,GAAA5gE,EAAAygE,GAAAG,GAGAG,cAAA,SAAA/gE,GACA,MAAAC,WAAA7L,QAAA2sE,EAAA,EAAA/gE,EAAAygE,GAAA,EAAAM,GAGAlD,MAAA,SAAA/mE,EAAAkJ,GACA,MAAAC,WAAA7L,OAAA,SAAA4L,EAAA8gE,EAAAjhE,OAAA/I,GAAAgqE,EAAA7/D,IAAAnK,EAAAmqE,EAAAjhE,IAAAygE,GAAAK,EAAA9/D,IAAAlK,IAGAwsB,KAAA,SAAAprB,EAAAI,EAAA6nB,GACA,GAEAnW,GACAC,EACAgtB,EACAphC,EACAqrE,EANAjwE,EAAA,EACAsP,EAAAyiB,EAAA5uB,MAUA,KAHA,MAAA+rB,IAAApM,IACAoM,KAEAlvB,EAAA,EAAiBA,EAAAsP,IAAOtP,EACxB4E,EAAAmtB,EAAA/xB,GACA+Y,EAAA9R,EAAArC,EAAAqC,EACA+R,EAAA3R,EAAAzC,EAAAyC,EACA2+B,EAAAjtB,IAAAC,IACAgtB,EAAA9W,IAAA+gD,EAAArrE,EAAAsqB,EAAA8W,EAGA,OAAAiqC,IAGAl+D,GAAA,SAAAlM,EAAAkJ,GACA,MAAAC,WAAA7L,OAAA,GAAAkO,EAAAU,GAAAlM,EAAAkJ,GAAAygE,GAAAn+D,EAAAU,GAAAlM,MAKAqqE,GAAA,WAUA,QAAAtD,GAAA79D,GACA,GAAA/O,GAAAsP,EAAAyiB,EAAA5uB,OAAAstB,EAAAqB,GAAAC,EAAAS,GAAAC,IAAAy7C,WAAAiC,EACA,KAAAl/B,EAAAliC,EAAA/O,EAAA,EAA0BA,EAAAsP,IAAOtP,EAAA4E,EAAAmtB,EAAA/xB,GAAAywB,EAAA28C,MAAA1sE,GAGjC,QAAA8pB,KACA,GAAAuH,EAAA,CACA,GAAA/xB,GAAA4E,EAAA0K,EAAAyiB,EAAA5uB,MAEA,KADA+rE,EAAA,GAAAxoE,OAAA4I,GACAtP,EAAA,EAAeA,EAAAsP,IAAOtP,EAAA4E,EAAAmtB,EAAA/xB,GAAAkvE,EAAAtqE,EAAAV,QAAAuqE,EAAA7pE,EAAA5E,EAAA+xB,IAGtB,QAAAo+C,GAAA9B,GACA,GAAAhuD,GAAAvgB,EAAAswE,EAAAC,EAAArwE,EAAAyuE,EAAA,CAGA,IAAAJ,EAAAlrE,OAAA,CACA,IAAAitE,EAAAC,EAAArwE,EAAA,EAA+BA,EAAA,IAAOA,GACtCqgB,EAAAguD,EAAAruE,MAAAF,EAAAugB,EAAAhd,SACAorE,GAAA3uE,EAAAswE,GAAAtwE,EAAAugB,EAAApZ,EAAAopE,GAAAvwE,EAAAugB,EAAAhZ,EAGAgnE,GAAApnE,EAAAmpE,EAAA3B,EACAJ,EAAAhnE,EAAAgpE,EAAA5B,MAIA,CACApuD,EAAAguD,EACAhuD,EAAApZ,EAAAoZ,EAAApb,KAAAgC,EACAoZ,EAAAhZ,EAAAgZ,EAAApb,KAAAoC,CACA,GAAAonE,IAAAS,EAAA7uD,EAAApb,KAAAf,aACAmc,IAAAiR,MAGA+8C,EAAAhrE,MAAAorE,EAGA,QAAA/tE,GAAA2tE,EAAAn9C,EAAAniB,EAAAm3B,GACA,IAAAmoC,EAAAhrE,MAAA,QAEA,IAAA+sE,GAAA/B,EAAApnE,EAAArC,EAAAqC,EACAopE,EAAAhC,EAAAhnE,EAAAzC,EAAAyC,EACAuyB,EAAAsM,EAAAhV,EACAhW,EAAAk1D,IAAAC,GAIA,IAAAz2C,IAAA02C,EAAAp1D,EAQA,MAPAA,GAAAq1D,IACA,IAAAH,MAAApD,KAAA9xD,GAAAk1D,KACA,IAAAC,MAAArD,KAAA9xD,GAAAm1D,KACAn1D,EAAAs1D,IAAAt1D,EAAAtT,KAAAkV,KAAA0zD,EAAAt1D,IACAtW,EAAAutB,IAAAi+C,EAAA/B,EAAAhrE,MAAA4tC,EAAA/1B,EACAtW,EAAAwtB,IAAAi+C,EAAAhC,EAAAhrE,MAAA4tC,EAAA/1B,IAEA,CAIA,MAAAmzD,EAAAlrE,QAAA+X,GAAAq1D,GAAA,EAGAlC,EAAAppE,OAAAL,GAAAypE,EAAA/8C,QACA,IAAA8+C,MAAApD,KAAA9xD,GAAAk1D,KACA,IAAAC,MAAArD,KAAA9xD,GAAAm1D,KACAn1D,EAAAs1D,IAAAt1D,EAAAtT,KAAAkV,KAAA0zD,EAAAt1D,IAGA,GAAAmzD,GAAAppE,OAAAL,IACAg1B,EAAAs1C,EAAAb,EAAAppE,KAAAf,OAAA+sC,EAAA/1B,EACAtW,EAAAutB,IAAAi+C,EAAAx2C,EACAh1B,EAAAwtB,IAAAi+C,EAAAz2C,SACKy0C,IAAA/8C,OAlFL,GAAAS,GACAntB,EACAqsC,EAEAi+B,EADAT,EAAA1B,IAAA,IAEAyD,EAAA,EACAD,EAAAztD,IACAwtD,EAAA,GAmGA,OArBA1D,GAAApiD,WAAA,SAAAzb,GACAgjB,EAAAhjB,EACAyb,KAGAoiD,EAAA6B,SAAA,SAAA1/D,GACA,MAAAC,WAAA7L,QAAAsrE,EAAA,kBAAA1/D,KAAAg+D,IAAAh+D,GAAAyb,IAAAoiD,GAAA6B,GAGA7B,EAAA6D,YAAA,SAAA1hE,GACA,MAAAC,WAAA7L,QAAAqtE,EAAAzhE,IAAA69D,GAAAhlE,KAAAkV,KAAA0zD,IAGA5D,EAAA8D,YAAA,SAAA3hE,GACA,MAAAC,WAAA7L,QAAAotE,EAAAxhE,IAAA69D,GAAAhlE,KAAAkV,KAAAyzD,IAGA3D,EAAArlC,MAAA,SAAAx4B,GACA,MAAAC,WAAA7L,QAAAmtE,EAAAvhE,IAAA69D,GAAAhlE,KAAAkV,KAAAwzD,IAGA1D,GAGA+D,GAAA,SAAA1pE,GAQA,QAAA2lE,GAAA37B,GACA,OAAArsC,GAAA5E,EAAA,EAAAsP,EAAAyiB,EAAA5uB,OAA2CnD,EAAAsP,IAAOtP,EAClD4E,EAAAmtB,EAAA/xB,GAAA4E,EAAAutB,KAAAX,EAAAxxB,GAAA4E,EAAAqC,GAAAioE,EAAAlvE,GAAAixC,EAIA,QAAAzmB,KACA,GAAAuH,EAAA,CACA,GAAA/xB,GAAAsP,EAAAyiB,EAAA5uB,MAGA,KAFA+rE,EAAA,GAAAxoE,OAAA4I,GACAkiB,EAAA,GAAA9qB,OAAA4I,GACAtP,EAAA,EAAeA,EAAAsP,IAAOtP,EACtBkvE,EAAAlvE,GAAAke,MAAAsT,EAAAxxB,IAAAiH,EAAA8qB,EAAA/xB,KAAA+xB,IAAA,GAAA08C,EAAA18C,EAAA/xB,KAAA+xB,IAnBA,GACAA,GACAm9C,EACA19C,EAHAi9C,EAAA1B,GAAA,GAoCA,OA/BA,kBAAA9lE,OAAA8lE,GAAA,MAAA9lE,EAAA,GAAAA,IAkBA2lE,EAAApiD,WAAA,SAAAzb,GACAgjB,EAAAhjB,EACAyb,KAGAoiD,EAAA6B,SAAA,SAAA1/D,GACA,MAAAC,WAAA7L,QAAAsrE,EAAA,kBAAA1/D,KAAAg+D,IAAAh+D,GAAAyb,IAAAoiD,GAAA6B,GAGA7B,EAAA3lE,EAAA,SAAA8H,GACA,MAAAC,WAAA7L,QAAA8D,EAAA,kBAAA8H,KAAAg+D,IAAAh+D,GAAAyb,IAAAoiD,GAAA3lE,GAGA2lE,GAGAgE,GAAA,SAAAvpE,GAQA,QAAAulE,GAAA37B,GACA,OAAArsC,GAAA5E,EAAA,EAAAsP,EAAAyiB,EAAA5uB,OAA2CnD,EAAAsP,IAAOtP,EAClD4E,EAAAmtB,EAAA/xB,GAAA4E,EAAAwtB,KAAAX,EAAAzxB,GAAA4E,EAAAyC,GAAA6nE,EAAAlvE,GAAAixC,EAIA,QAAAzmB,KACA,GAAAuH,EAAA,CACA,GAAA/xB,GAAAsP,EAAAyiB,EAAA5uB,MAGA,KAFA+rE,EAAA,GAAAxoE,OAAA4I,GACAmiB,EAAA,GAAA/qB,OAAA4I,GACAtP,EAAA,EAAeA,EAAAsP,IAAOtP,EACtBkvE,EAAAlvE,GAAAke,MAAAuT,EAAAzxB,IAAAqH,EAAA0qB,EAAA/xB,KAAA+xB,IAAA,GAAA08C,EAAA18C,EAAA/xB,KAAA+xB,IAnBA,GACAA,GACAm9C,EACAz9C,EAHAg9C,EAAA1B,GAAA,GAoCA,OA/BA,kBAAA1lE,OAAA0lE,GAAA,MAAA1lE,EAAA,GAAAA,IAkBAulE,EAAApiD,WAAA,SAAAzb,GACAgjB,EAAAhjB,EACAyb,KAGAoiD,EAAA6B,SAAA,SAAA1/D,GACA,MAAAC,WAAA7L,QAAAsrE,EAAA,kBAAA1/D,KAAAg+D,IAAAh+D,GAAAyb,IAAAoiD,GAAA6B,GAGA7B,EAAAvlE,EAAA,SAAA0H,GACA,MAAAC,WAAA7L,QAAAkE,EAAA,kBAAA0H,KAAAg+D,IAAAh+D,GAAAyb,IAAAoiD,GAAAvlE,GAGAulE,GAMAiE,GAAA,SAAA5pE,EAAAlH,GACA,IAAAC,GAAAiH,EAAAlH,EAAAkH,EAAA6pE,cAAA/wE,EAAA,GAAAkH,EAAA6pE,iBAAApnE,QAAA,mBACA,IAAA1J,GAAA+wE,EAAA9pE,EAAA3G,MAAA,EAAAN,EAIA,QACA+wE,EAAA5tE,OAAA,EAAA4tE,EAAA,GAAAA,EAAAzwE,MAAA,GAAAywE,GACA9pE,EAAA3G,MAAAN,EAAA,KAIAgxE,GAAA,SAAA/pE,GACA,MAAAA,GAAA4pE,GAAAjpE,KAAA+D,IAAA1E,QAAA,GAAA4M,KAGAo9D,GAAA,SAAAC,EAAAC,GACA,gBAAA9tE,EAAAiF,GAOA,IANA,GAAAtI,GAAAqD,EAAAF,OACAkM,KACA6C,EAAA,EACA0I,EAAAs2D,EAAA,GACA/tE,EAAA,EAEAnD,EAAA,GAAA4a,EAAA,IACAzX,EAAAyX,EAAA,EAAAtS,IAAAsS,EAAAhT,KAAAgE,IAAA,EAAAtD,EAAAnF,IACAkM,EAAA5M,KAAAY,EAAA+tE,UAAApxE,GAAA4a,EAAA5a,EAAA4a,OACAzX,GAAAyX,EAAA,GAAAtS,KACAsS,EAAAs2D,EAAAh/D,KAAA,GAAAg/D,EAAA/tE,OAGA,OAAAkM,GAAAwxB,UAAAlgB,KAAAwwD,KAIAE,GAAA,SAAAC,GACA,gBAAAjuE,GACA,MAAAA,GAAAu8C,QAAA,kBAAA5/C,GACA,MAAAsxE,IAAAtxE,OAKAuxE,GAAA,SAAAtqE,EAAAlH,GACAkH,IAAAuqE,YAAAzxE,EAEA0xE,GAAA,OAAArgC,GAAA9hC,EAAArI,EAAA9D,OAAAnD,EAAA,EAAAmxC,GAAA,EAAiDnxC,EAAAsP,IAAOtP,EACxD,OAAAiH,EAAAjH,IACA,QAAAmxC,EAAAC,EAAApxC,CAA4B,MAC5B,aAAAmxC,MAAAnxC,GAAqCoxC,EAAApxC,CAAQ,MAC7C,cAAAyxE,EACA,SAAAtgC,EAAA,IAAAA,EAAA,GAIA,MAAAA,GAAA,EAAAlqC,EAAA3G,MAAA,EAAA6wC,GAAAlqC,EAAA3G,MAAA8wC,EAAA,GAAAnqC,GAKAyqE,GAAA,SAAAzqE,EAAAlH,GACA,GAAA0J,GAAAonE,GAAA5pE,EAAAlH,EACA,KAAA0J,EAAA,MAAAxC,GAAA,EACA,IAAA8pE,GAAAtnE,EAAA,GACAysC,EAAAzsC,EAAA,GACAzJ,EAAAk2C,GAAAi4B,GAAA,EAAAvmE,KAAAgE,KAAA,EAAAhE,KAAAG,IAAA,EAAAH,KAAAC,MAAAquC,EAAA,QACA5mC,EAAAyhE,EAAA5tE,MACA,OAAAnD,KAAAsP,EAAAyhE,EACA/wE,EAAAsP,EAAAyhE,EAAA,GAAArqE,OAAA1G,EAAAsP,EAAA,GAAAqR,KAAA,KACA3gB,EAAA,EAAA+wE,EAAAzwE,MAAA,EAAAN,GAAA,IAAA+wE,EAAAzwE,MAAAN,GACA,QAAA0G,OAAA,EAAA1G,GAAA2gB,KAAA,KAAAkwD,GAAA5pE,EAAAW,KAAAgE,IAAA,EAAA7L,EAAAC,EAAA,QAGA2xE,GAAA,SAAA1qE,EAAAlH,GACA,GAAA0J,GAAAonE,GAAA5pE,EAAAlH,EACA,KAAA0J,EAAA,MAAAxC,GAAA,EACA,IAAA8pE,GAAAtnE,EAAA,GACAysC,EAAAzsC,EAAA,EACA,OAAAysC,GAAA,UAAAxvC,QAAAwvC,GAAAv1B,KAAA,KAAAowD,EACAA,EAAA5tE,OAAA+yC,EAAA,EAAA66B,EAAAzwE,MAAA,EAAA41C,EAAA,OAAA66B,EAAAzwE,MAAA41C,EAAA,GACA66B,EAAA,GAAArqE,OAAAwvC,EAAA66B,EAAA5tE,OAAA,GAAAwd,KAAA,MAGA0S,IACAu+C,GAAAL,GACA7zB,IAAA,SAAAz2C,EAAAlH,GAAuB,WAAAkH,GAAA4qE,QAAA9xE,IACvBU,EAAA,SAAAwG,GAAoB,MAAAW,MAAA+E,MAAA1F,GAAA+J,SAAA,IACpBlR,EAAA,SAAAmH,GAAoB,MAAAA,GAAA,IACpBwC,EAAA,SAAAxC,GAAoB,MAAAW,MAAA+E,MAAA1F,GAAA+J,SAAA,KACpByO,EAAA,SAAAxY,EAAAlH,GAAuB,MAAAkH,GAAA6pE,cAAA/wE,IACvBoL,EAAA,SAAAlE,EAAAlH,GAAuB,MAAAkH,GAAA4qE,QAAA9xE,IACvB6a,EAAA,SAAA3T,EAAAlH,GAAuB,MAAAkH,GAAAuqE,YAAAzxE,IACvBkS,EAAA,SAAAhL,GAAoB,MAAAW,MAAA+E,MAAA1F,GAAA+J,SAAA,IACpBjR,EAAA,SAAAkH,EAAAlH,GAAuB,MAAA4xE,IAAA,IAAA1qE,EAAAlH,IACvB4a,EAAAg3D,GACA12D,EAAAy2D,GACAxnD,EAAA,SAAAjjB,GAAoB,MAAAW,MAAA+E,MAAA1F,GAAA+J,SAAA,IAAA8gE,eACpB7qE,EAAA,SAAAA,GAAoB,MAAAW,MAAA+E,MAAA1F,GAAA+J,SAAA,MAIpB8hB,GAAA,uEAMAJ,IAAAxyB,UAAA0yB,GAAA1yB,UAoCA0yB,GAAA1yB,UAAA8Q,SAAA,WACA,MAAArQ,MAAAoyB,KACApyB,KAAAqyB,MACAryB,KAAAsyB,KACAtyB,KAAAuyB,QACAvyB,KAAA8d,KAAA,SACA,MAAA9d,KAAA2H,MAAA,GAAAV,KAAAgE,IAAA,IAAAjL,KAAA2H,SACA3H,KAAAwyB,MAAA,SACA,MAAAxyB,KAAAyyB,UAAA,OAAAxrB,KAAAgE,IAAA,IAAAjL,KAAAyyB,YACAzyB,KAAAmP,KAGA,IA4HAyjB,IA5HAw+C,GAAA,SAAA9qE,GACA,MAAAA,IAGA+qE,IAAA,oEAEAx+C,GAAA,SAAAqlB,GAMA,QAAAC,GAAAnmB,GAgCA,QAAAvlB,GAAA/J,GACA,GAEArD,GAAAsP,EAAAxP,EAFAmyE,EAAA3f,EACA4f,EAAAC,CAGA,UAAAriE,EACAoiE,EAAAE,EAAA/uE,GAAA6uE,EACA7uE,EAAA,OACO,CACPA,IAGA,IAAAgvE,GAAAhvE,EAAA,CAYA,IAXAA,EAAA+uE,EAAAxqE,KAAA+D,IAAAtI,GAAA+vB,GAGAi/C,GAAA,KAAAhvE,IAAAgvE,GAAA,GAGAJ,GAAAI,EAAA,MAAAp/C,IAAA,UAAAA,GAAA,MAAAA,EAAA,GAAAA,GAAAg/C,EACAC,KAAA,MAAApiE,EAAAkiE,GAAA,EAAA7D,GAAA,QAAAkE,GAAA,MAAAp/C,EAAA,QAIAq/C,EAEA,IADAtyE,GAAA,EAAAsP,EAAAjM,EAAAF,SACAnD,EAAAsP,GACA,GAAAxP,EAAAuD,EAAA41C,WAAAj5C,GAAA,GAAAF,KAAA,IACAoyE,GAAA,KAAApyE,EAAAyyE,EAAAlvE,EAAA/C,MAAAN,EAAA,GAAAqD,EAAA/C,MAAAN,IAAAkyE,EACA7uE,IAAA/C,MAAA,EAAAN,EACA,QAOAmzB,IAAA1U,IAAApb,EAAA8N,EAAA9N,EAAAyf,KAGA,IAAA3f,GAAA8uE,EAAA9uE,OAAAE,EAAAF,OAAA+uE,EAAA/uE,OACAmsC,EAAAnsC,EAAAmF,EAAA,GAAA5B,OAAA4B,EAAAnF,EAAA,GAAAwd,KAAAoS,GAAA,EAMA,QAHAI,GAAA1U,IAAApb,EAAA8N,EAAAm+B,EAAAjsC,EAAAisC,EAAAnsC,OAAAmF,EAAA4pE,EAAA/uE,OAAA2f,KAAAwsB,EAAA,IAGAtc,GACA,QAAA3vB,EAAA4uE,EAAA5uE,EAAA6uE,EAAA5iC,CAAsE,MACtE,SAAAjsC,EAAA4uE,EAAA3iC,EAAAjsC,EAAA6uE,CAAsE,MACtE,SAAA7uE,EAAAisC,EAAAhvC,MAAA,EAAA6C,EAAAmsC,EAAAnsC,QAAA,GAAA8uE,EAAA5uE,EAAA6uE,EAAA5iC,EAAAhvC,MAAA6C,EAAqI,MACrI,SAAAE,EAAAisC,EAAA2iC,EAAA5uE,EAAA6uE,EAGA,MAAAZ,GAAAjuE,GArFAsvB,EAAAD,GAAAC,EAEA,IAAAI,GAAAJ,EAAAI,KACAC,EAAAL,EAAAK,MACAC,EAAAN,EAAAM,KACAC,EAAAP,EAAAO,OACAzU,EAAAkU,EAAAlU,KACAnW,EAAAqqB,EAAArqB,MACA6qB,EAAAR,EAAAQ,MACAC,EAAAT,EAAAS,UACAtjB,EAAA6iB,EAAA7iB,KAIAwiD,EAAA,MAAAp/B,EAAAs/C,EAAA,SAAAt/C,GAAA,SAAAikB,KAAArnC,GAAA,IAAAA,EAAA6J,cAAA,GACAw4D,EAAA,MAAAj/C,EAAAs/C,EAAA,UAAAr7B,KAAArnC,GAAA,OAKAsiE,EAAA/+C,GAAAvjB,GACAwiE,GAAAxiE,GAAA,aAAAqnC,KAAArnC,EAuEA,OAjEAsjB,GAAA,MAAAA,EAAAtjB,EAAA,KACA,SAAAqnC,KAAArnC,GAAAlI,KAAAgE,IAAA,EAAAhE,KAAAG,IAAA,GAAAqrB,IACAxrB,KAAAgE,IAAA,EAAAhE,KAAAG,IAAA,GAAAqrB,IA2DAhmB,EAAA4D,SAAA,WACA,MAAA2hB,GAAA,IAGAvlB,EAGA,QAAAqmB,GAAAd,EAAAtvB,GACA,GAAA8H,GAAA2tC,GAAAnmB,EAAAD,GAAAC,KAAA7iB,KAAA,IAAA6iB,IACAlT,EAAA,EAAA7X,KAAAgE,KAAA,EAAAhE,KAAAG,IAAA,EAAAH,KAAAC,MAAAmpE,GAAA3tE,GAAA,KACAgL,EAAAzG,KAAAkE,IAAA,IAAA2T,GACA6yC,EAAA0f,GAAA,EAAAvyD,EAAA,EACA,iBAAApc,GACA,MAAA8H,GAAAkD,EAAAhL,GAAAivD,GA3GA,GAAAnhD,GAAA0nC,EAAAq4B,UAAAr4B,EAAAs4B,UAAAF,GAAAp4B,EAAAq4B,SAAAr4B,EAAAs4B,WAAAY,GACAS,EAAA35B,EAAA25B,SACAD,EAAA15B,EAAA05B,QACAjB,EAAAz4B,EAAAy4B,SAAAD,GAAAx4B,EAAAy4B,UAAAS,EA4GA,QACA3kE,OAAA0rC,EACArlB,gBAQAH,KACAi/C,QAAA,IACApB,UAAA,IACAD,UAAA,GACAsB,UAAA,SAUA,IAAAC,IAAA,SAAAv2C,GACA,MAAAt0B,MAAAgE,IAAA,GAAAolE,GAAAppE,KAAA+D,IAAAuwB,MAGAw2C,GAAA,SAAAx2C,EAAA74B,GACA,MAAAuE,MAAAgE,IAAA,IAAAhE,KAAAgE,KAAA,EAAAhE,KAAAG,IAAA,EAAAH,KAAAC,MAAAmpE,GAAA3tE,GAAA,KAAA2tE,GAAAppE,KAAA+D,IAAAuwB,MAGAy2C,GAAA,SAAAz2C,EAAAtwB,GAEA,MADAswB,GAAAt0B,KAAA+D,IAAAuwB,GAAAtwB,EAAAhE,KAAA+D,IAAAC,GAAAswB,EACAt0B,KAAAgE,IAAA,EAAAolE,GAAAplE,GAAAolE,GAAA90C,IAAA,GAUArI,GAAA,WACA,UAAAH,IAOAA,IAAAxzB,WACA+B,YAAAyxB,GACAC,MAAA,WACAhzB,KAAAsa,EACAta,KAAA0O,EAAA,GAEAsG,IAAA,SAAAtO,GACAusB,GAAAg/C,GAAAvrE,EAAA1G,KAAA0O,GACAukB,GAAAjzB,KAAAiyE,GAAA33D,EAAAta,KAAAsa,GACAta,KAAAsa,EAAAta,KAAA0O,GAAAujE,GAAAvjE,EACA1O,KAAAsa,EAAA23D,GAAAvjE,GAEAwjE,QAAA,WACA,MAAAlyE,MAAAsa,GAIA,IAwHAwa,IACAC,GACAI,GACAC,GACAG,GA+FAkB,GACAE,GACAD,GACAE,GACAQ,GACAW,GACAC,GACAlB,GAEAN,GACAvuB,GAqKAuwB,GACAU,GACAT,GACAC,GACAC,GACAQ,GACAC,GACAC,GACAW,GACAC,GACAC,GACAP,GACAC,GACAvJ,GACAC,GACAyI,GAzZAk5C,GAAA,GAAAl/C,IASAoF,GAAA,KACAg6C,GAAA,MACA7+C,GAAArsB,KAAAo6D,GACA7tC,GAAAF,GAAA,EACAgC,GAAAhC,GAAA,EACA8G,GAAA,EAAA9G,GAEAiE,GAAA,IAAAjE,GACA4B,GAAA5B,GAAA,IAEAtoB,GAAA/D,KAAA+D,IACAi5B,GAAAh9B,KAAAg9B,KACAhoB,GAAAhV,KAAAgV,MACAoZ,GAAApuB,KAAAgU,IACA6kB,GAAA74B,KAAA64B,KACA5f,GAAAjZ,KAAAiZ,IAEA9U,GAAAnE,KAAAmE,IACAD,GAAAlE,KAAAkE,IACAuoB,GAAAzsB,KAAAiU,IACAoX,GAAArrB,KAAAqrB,MAAA,SAAAhsB,GAAqC,MAAAA,GAAA,IAAAA,EAAA,QACrC6V,GAAAlV,KAAAkV,KACAmsB,GAAArhC,KAAAqhC,IAsBA8pC,IACAC,QAAA,SAAAzjD,EAAAkF,GACAF,GAAAhF,EAAAiF,SAAAC,IAEAw+C,kBAAA,SAAA1jD,EAAAkF,GAEA,IADA,GAAAy+C,GAAA3jD,EAAA2jD,SAAAlzE,GAAA,EAAAsP,EAAA4jE,EAAA/vE,SACAnD,EAAAsP,GAAAilB,GAAA2+C,EAAAlzE,GAAAw0B,SAAAC,KAIAC,IACAy+C,OAAA,SAAA5jD,EAAAkF,GACAA,EAAAkU,UAEAyqC,MAAA,SAAA7jD,EAAAkF,GACAlF,IAAAqF,YACAH,EAAAnJ,MAAAiE,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA8jD,WAAA,SAAA9jD,EAAAkF,GAEA,IADA,GAAAG,GAAArF,EAAAqF,YAAA50B,GAAA,EAAAsP,EAAAslB,EAAAzxB,SACAnD,EAAAsP,GAAAigB,EAAAqF,EAAA50B,GAAAy0B,EAAAnJ,MAAAiE,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA+jD,WAAA,SAAA/jD,EAAAkF,GACAE,GAAApF,EAAAqF,YAAAH,EAAA,IAEA8+C,gBAAA,SAAAhkD,EAAAkF,GAEA,IADA,GAAAG,GAAArF,EAAAqF,YAAA50B,GAAA,EAAAsP,EAAAslB,EAAAzxB,SACAnD,EAAAsP,GAAAqlB,GAAAC,EAAA50B,GAAAy0B,EAAA,IAEA++C,QAAA,SAAAjkD,EAAAkF,GACAQ,GAAA1F,EAAAqF,YAAAH,IAEAg/C,aAAA,SAAAlkD,EAAAkF,GAEA,IADA,GAAAG,GAAArF,EAAAqF,YAAA50B,GAAA,EAAAsP,EAAAslB,EAAAzxB,SACAnD,EAAAsP,GAAA2lB,GAAAL,EAAA50B,GAAAy0B,IAEAi/C,mBAAA,SAAAnkD,EAAAkF,GAEA,IADA,GAAAk/C,GAAApkD,EAAAokD,WAAA3zE,GAAA,EAAAsP,EAAAqkE,EAAAxwE,SACAnD,EAAAsP,GAAAilB,GAAAo/C,EAAA3zE,GAAAy0B,KAkBA2Q,GAAA,SAAA7V,EAAAkF,GACAlF,GAAAwjD,GAAA5yE,eAAAovB,EAAAzf,MACAijE,GAAAxjD,EAAAzf,MAAAyf,EAAAkF,GAEAF,GAAAhF,EAAAkF,IAIAgC,GAAA5C,KAEA+/C,GAAA//C,KAOAwB,IACA/J,MAAAgJ,GACAS,UAAAT,GACAU,QAAAV,GACAY,aAAA,WACAuB,GAAA9C,QACA0B,GAAAN,UAAAK,GACAC,GAAAL,QAAAO,IAEAJ,WAAA,WACA,GAAA0+C,IAAAp9C,EACAm9C,IAAAj+D,IAAAk+D,EAAA,EAAA94C,GAAA84C,KACAlzE,KAAAo0B,UAAAp0B,KAAAq0B,QAAAr0B,KAAA2qB,MAAAgJ,IAEAqU,OAAA,WACAirC,GAAAj+D,IAAAolB,MAwCA+4C,GAAA,SAAAvkD,GAGA,MAFAqkD,IAAAjgD,QACAyR,GAAA7V,EAAA8F,IACA,EAAAu+C,IA2CAn7C,GAAA5E,KAIAyE,IACAhN,MAAA4L,GACAnC,UAAAsD,GACArD,QAAAuD,GACArD,aAAA,WACAoD,GAAAhN,MAAAkN,GACAF,GAAAvD,UAAA6D,GACAN,GAAAtD,QAAA6D,GACAJ,GAAA9E,QACA0B,GAAAH,gBAEAC,WAAA,WACAE,GAAAF,aACAmD,GAAAhN,MAAA4L,GACAoB,GAAAvD,UAAAsD,GACAC,GAAAtD,QAAAuD,GACA9B,GAAA,GAAAW,KAAAC,GAAA,KAAAC,KAAAC,GAAA,KACAkB,GAAAK,GAAAvB,GAAA,GACAkB,IAAAK,KAAAxB,IAAA,IACA1uB,GAAA,GAAAwuB,GAAAxuB,GAAA,GAAAyuB,KA2GA08C,GAAA,SAAAC,GACA,GAAAh0E,GAAAsP,EAAA9O,EAAAC,EAAA8wD,EAAA0iB,EAAAn8C,CAOA,IALAP,GAAAF,KAAAD,GAAAE,GAAAxU,KACAqU,MACAiO,GAAA4uC,EAAA17C,IAGAhpB,EAAA6nB,GAAAh0B,OAAA,CAIA,IAHAg0B,GAAAsf,KAAA1d,IAGA/4B,EAAA,EAAAQ,EAAA22B,GAAA,GAAAo6B,GAAA/wD,GAA4CR,EAAAsP,IAAOtP,EACnDS,EAAA02B,GAAAn3B,GACAg5B,GAAAx4B,EAAAC,EAAA,KAAAu4B,GAAAx4B,EAAAC,EAAA,KACA23B,GAAA53B,EAAA,GAAAC,EAAA,IAAA23B,GAAA53B,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,IACA23B,GAAA33B,EAAA,GAAAD,EAAA,IAAA43B,GAAA53B,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,KAEA8wD,EAAA9uD,KAAAjC,EAAAC,EAMA,KAAAwzE,IAAAnxD,KAAAxT,EAAAiiD,EAAApuD,OAAA,EAAAnD,EAAA,EAAAQ,EAAA+wD,EAAAjiD,GAA2EtP,GAAAsP,EAAQ9O,EAAAC,IAAAT,EACnFS,EAAA8wD,EAAAvxD,IACA83B,EAAAM,GAAA53B,EAAA,GAAAC,EAAA,KAAAwzE,MAAAn8C,EAAAV,GAAA32B,EAAA,GAAA42B,GAAA72B,EAAA,IAMA,MAFA22B,IAAAvuB,GAAA,KAEAwuB,KAAAtU,KAAAwU,KAAAxU,MACAjP,sBACAujB,GAAAE,KAAAD,GAAAE,MAoBAiC,IACAmP,OAAArU,GACAhJ,MAAA2N,GACAlE,UAAAwE,GACAvE,QAAAiF,GACA/E,aAAA,WACAsE,GAAAzE,UAAAmF,GACAV,GAAAxE,QAAAoF,IAEAjF,WAAA,WACAqE,GAAAzE,UAAAwE,GACAC,GAAAxE,QAAAiF,KA8FAi6C,GAAA,SAAA3kD,GACA4J,GAAAU,GACAT,GAAAC,GAAAC,GACAQ,GAAAC,GAAAC,GACAW,GAAAC,GAAAC,GAAA,EACAuK,GAAA7V,EAAAiK,GAEA,IAAAvyB,GAAA0zB,GACAtzB,EAAAuzB,GACA1e,EAAA2e,GACAh7B,EAAAoH,IAAAI,IAAA6U,GAGA,OAAArc,GAAAizE,KACA7rE,EAAA6yB,GAAAzyB,EAAA0yB,GAAA7d,EAAA8d,GAEAH,GAAAf,KAAA7xB,EAAAmyB,GAAA/xB,EAAAgyB,GAAAnd,EAAAod,IACAz5B,EAAAoH,IAAAI,IAAA6U,IAEArc,EAAAizE,KAAAj/D,UAGA+I,GAAAvV,EAAAJ,GAAAixB,GAAAhE,GAAAhY,EAAAY,GAAAjd,IAAAq4B,KAGAi8C,GAAA,SAAAltE,GACA,kBACA,MAAAA,KAIAm0B,GAAA,SAAA56B,EAAAC,GAEA,QAAA26B,GAAAn0B,EAAAI,GACA,MAAAJ,GAAAzG,EAAAyG,EAAAI,GAAA5G,EAAAwG,EAAA,GAAAA,EAAA,IAOA,MAJAzG,GAAAi7B,QAAAh7B,EAAAg7B,SAAAL,EAAAK,OAAA,SAAAx0B,EAAAI,GACA,MAAAJ,GAAAxG,EAAAg7B,OAAAx0B,EAAAI,GAAAJ,GAAAzG,EAAAi7B,OAAAx0B,EAAA,GAAAA,EAAA,MAGAm0B,EAOAN,IAAAW,OAAAX,EAsDA,IAwgBAmE,IACAC,GACAC,GAwRAoC,GACAE,GACAD,GACAE,GA4EAwB,GACAC,GACAX,GACAC,GAp3BAjH,GAAA,SAAAjb,GAGA,QAAA6nB,GAAAxT,GAEA,MADAA,GAAArU,EAAAqU,EAAA,GAAAiB,GAAAjB,EAAA,GAAAiB,IACAjB,EAAA,IAAAsD,GAAAtD,EAAA,IAAAsD,GAAAtD,EAQA,MAZArU,GAAAya,GAAAza,EAAA,GAAAsV,GAAAtV,EAAA,GAAAsV,GAAAtV,EAAApd,OAAA,EAAAod,EAAA,GAAAsV,GAAA,GAOAuS,EAAA3M,OAAA,SAAA7G,GAEA,MADAA,GAAArU,EAAAkb,OAAA7G,EAAA,GAAAiB,GAAAjB,EAAA,GAAAiB,IACAjB,EAAA,IAAAsD,GAAAtD,EAAA,IAAAsD,GAAAtD,GAGAwT,GA+BA+D,GAAA,WAQA,QAAA7gB,GAAArkB,EAAAI,GACAm2B,EAAA/6B,KAAAwE,EAAAsZ,EAAAtZ,EAAAI,IACAJ,EAAA,IAAAixB,GAAAjxB,EAAA,IAAAixB,GAGA,QAAAiU,KACA,GAAArsC,GAAAyM,EAAA7L,MAAAC,KAAAqO,WACA2L,EAAAuU,EAAAxuB,MAAAC,KAAAqO,WAAA6mB,GACA91B,EAAAqzB,EAAA1yB,MAAAC,KAAAqO,WAAA6mB,EAMA,OALA2H,MACAjd,EAAAya,IAAAl7B,EAAA,GAAA+1B,IAAA/1B,EAAA,GAAA+1B,GAAA,GAAA4F,OACAK,GAAArH,EAAA9Z,EAAA5a,EAAA,GACAD,GAASgQ,KAAA,UAAA8kB,aAAA4I,IACTA,EAAAjd,EAAA,KACAzgB,EArBA,GAGA09B,GACAjd,EAJAhU,EAAA4nE,IAAA,MACAjlD,EAAAilD,GAAA,IACA/gD,EAAA+gD,GAAA,GAGA1/C,GAAgBnJ,QA+BhB,OAZA6gB,GAAA5/B,OAAA,SAAAwC,GACA,MAAAC,WAAA7L,QAAAoJ,EAAA,kBAAAwC,KAAAolE,KAAAplE,EAAA,IAAAA,EAAA,KAAAo9B,GAAA5/B,GAGA4/B,EAAAjd,OAAA,SAAAngB,GACA,MAAAC,WAAA7L,QAAA+rB,EAAA,kBAAAngB,KAAAolE,IAAAplE,GAAAo9B,GAAAjd,GAGAid,EAAA/Y,UAAA,SAAArkB,GACA,MAAAC,WAAA7L,QAAAiwB,EAAA,kBAAArkB,KAAAolE,IAAAplE,GAAAo9B,GAAA/Y,GAGA+Y,GAGAvN,GAAA,WACA,GACAt1B,GADAk3B,IAEA,QACAlV,MAAA,SAAArkB,EAAAI,GACAiC,EAAA7G,MAAAwE,EAAAI,KAEA0tB,UAAA,WACAyL,EAAA/9B,KAAA6G,OAEA0rB,QAAAV,GACAiK,OAAA,WACAiC,EAAAr9B,OAAA,GAAAq9B,EAAA/9B,KAAA+9B,EAAAzgB,MAAAnf,OAAA4/B,EAAAyP,WAEAzR,OAAA,WACA,GAAAA,GAAAgC,CAGA,OAFAA,MACAl3B,EAAA,KACAk1B,KAKAG,GAAA,SAAAn+B,EAAAC,EAAAuwB,EAAAC,EAAAC,EAAAC,GACA,GAQAxW,GARAgzB,EAAAntC,EAAA,GACAotC,EAAAptC,EAAA,GACAspD,EAAArpD,EAAA,GACAspD,EAAAtpD,EAAA,GACA8b,EAAA,EACAE,EAAA,EACA1D,EAAA+wC,EAAAnc,EACA30B,EAAA+wC,EAAAnc,CAIA,IADAjzB,EAAAqW,EAAA2c,EACA50B,KAAA4B,EAAA,IAEA,GADAA,GAAA5B,EACAA,EAAA,GACA,GAAA4B,EAAA4B,EAAA,MACA5B,GAAA8B,MAAA9B,OACG,IAAA5B,EAAA,GACH,GAAA4B,EAAA8B,EAAA,MACA9B,GAAA4B,MAAA5B,GAIA,GADAA,EAAAuW,EAAAyc,EACA50B,KAAA4B,EAAA,IAEA,GADAA,GAAA5B,EACAA,EAAA,GACA,GAAA4B,EAAA8B,EAAA,MACA9B,GAAA4B,MAAA5B,OACG,IAAA5B,EAAA,GACH,GAAA4B,EAAA4B,EAAA,MACA5B,GAAA8B,MAAA9B,GAIA,GADAA,EAAAsW,EAAA2c,EACA50B,KAAA2B,EAAA,IAEA,GADAA,GAAA3B,EACAA,EAAA,GACA,GAAA2B,EAAA4B,EAAA,MACA5B,GAAA8B,MAAA9B,OACG,IAAA3B,EAAA,GACH,GAAA2B,EAAA8B,EAAA,MACA9B,GAAA4B,MAAA5B,GAIA,GADAA,EAAAwW,EAAAyc,EACA50B,KAAA2B,EAAA,IAEA,GADAA,GAAA3B,EACAA,EAAA,GACA,GAAA2B,EAAA8B,EAAA,MACA9B,GAAA4B,MAAA5B,OACG,IAAA3B,EAAA,GACH,GAAA2B,EAAA4B,EAAA,MACA5B,GAAA8B,MAAA9B,GAKA,MAFA4B,GAAA,IAAA/b,EAAA,GAAAmtC,EAAApxB,EAAAxD,EAAAvY,EAAA,GAAAotC,EAAArxB,EAAAvD,GACAyD,EAAA,IAAAhc,EAAA,GAAAktC,EAAAlxB,EAAA1D,EAAAtY,EAAA,GAAAmtC,EAAAnxB,EAAAzD,IACA,OAGAo7D,GAAA,SAAA5zE,EAAAC,GACA,MAAAkL,IAAAnL,EAAA,GAAAC,EAAA,IAAAq4B,IAAAntB,GAAAnL,EAAA,GAAAC,EAAA,IAAAq4B,IAeAgF,GAAA,SAAAJ,EAAAT,EAAAW,EAAAhB,EAAAnI,GACA,GAEAz0B,GACAsP,EAHAuJ,KACAssB,IAwBA,IApBAzH,EAAAnN,QAAA,SAAA8T,GACA,MAAA/0B,EAAA+0B,EAAAlhC,OAAA,QACA,GAAAmM,GAAArI,EAAAwwB,EAAA4M,EAAA,GAAAgI,EAAAhI,EAAA/0B,EAKA,IAAA8kE,GAAA38C,EAAA4U,GAAA,CAEA,IADA5X,EAAAM,YACA/0B,EAAA,EAAiBA,EAAAsP,IAAOtP,EAAAy0B,EAAAnJ,OAAAmM,EAAA4M,EAAArkC,IAAA,GAAAy3B,EAAA,GAExB,YADAhD,GAAAO,UAIAnc,EAAApW,KAAAwE,EAAA,GAAAm1B,IAAA3E,EAAA4M,EAAA,UACAc,EAAA1iC,KAAAwE,EAAAgL,EAAA,GAAAmqB,IAAA3E,EAAA,KAAAxwB,GAAA,IACA4R,EAAApW,KAAAwE,EAAA,GAAAm1B,IAAAiQ,EAAAhI,EAAA,UACAc,EAAA1iC,KAAAwE,EAAAgL,EAAA,GAAAmqB,IAAAiQ,EAAA,KAAAplC,GAAA,OAGA4R,EAAA1V,OAAA,CAMA,IAJAgiC,EAAAsR,KAAAxZ,GACAT,GAAA3jB,GACA2jB,GAAA2I,GAEAnlC,EAAA,EAAAsP,EAAA61B,EAAAhiC,OAA8BnD,EAAAsP,IAAOtP,EACrCmlC,EAAAnlC,GAAAyf,EAAAme,IAOA,KAJA,GACAvB,GACA/Q,EAFA/f,EAAAsN,EAAA,KAIA,CAIA,IAFA,GAAAy6C,GAAA/nD,EACA8oE,GAAA,EACA/gB,EAAA/+C,GAAA,IAAA++C,IAAAhkD,KAAA/D,EAAA,MACA8wB,GAAAi3B,EAAAp3C,EACAuY,EAAAM,WACA,IAEA,GADAu+B,EAAA/+C,EAAA++C,EAAArhD,EAAAsC,GAAA,EACA++C,EAAA7zC,EAAA,CACA,GAAA40D,EACA,IAAAr0E,EAAA,EAAAsP,EAAA+sB,EAAAl5B,OAAwCnD,EAAAsP,IAAOtP,EAAAy0B,EAAAnJ,SAAA+Q,EAAAr8B,IAAA,GAAAsrB,EAAA,QAE/CsR,GAAA02B,EAAArsD,EAAAqsD,EAAAhkD,EAAArI,EAAA,EAAAwtB,EAEA6+B,KAAAhkD,MACO,CACP,GAAA+kE,EAEA,IADAh4C,EAAAi3B,EAAAvzD,EAAAmc,EACAlc,EAAAq8B,EAAAl5B,OAAA,EAAqCnD,GAAA,IAAQA,EAAAy0B,EAAAnJ,SAAA+Q,EAAAr8B,IAAA,GAAAsrB,EAAA,QAE7CsR,GAAA02B,EAAArsD,EAAAqsD,EAAAvzD,EAAAkH,GAAA,EAAAwtB,EAEA6+B,KAAAvzD,EAEAuzD,IAAArhD,EACAoqB,EAAAi3B,EAAAp3C,EACAm4D,YACK/gB,EAAA/+C,EACLkgB,GAAAO,aAmBA0J,GAAA,IACAD,IAAAC,GAmKA41C,GAAA,WACA,GAIAjtC,GACAC,EACAnC,EANAnU,EAAA,EACAC,EAAA,EACAC,EAAA,IACAC,EAAA,GAKA,OAAAgU,IACA1Q,OAAA,SAAAA,GACA,MAAA4S,IAAAC,IAAA7S,EAAA4S,IAAA3K,GAAA1L,EAAAC,EAAAC,EAAAC,GAAAmW,EAAA7S,IAEA7K,OAAA,SAAA7a,GACA,MAAAC,WAAA7L,QAAA6tB,GAAAjiB,EAAA,MAAAkiB,GAAAliB,EAAA,MAAAmiB,GAAAniB,EAAA,MAAAoiB,GAAApiB,EAAA,MAAAs4B,EAAAC,EAAA,KAAAnC,KAAAnU,EAAAC,IAAAC,EAAAC,OAKAojD,GAAA1gD,KAEAoM,GAAA,SAAA3C,EAAAhS,GACA,GAAAqK,GAAArK,EAAA,GACAsK,EAAAtK,EAAA,GACAoM,GAAArD,GAAAsB,IAAAK,GAAAL,GAAA,GACAyC,EAAA,EACAiF,EAAA,CAEAk3C,IAAA5gD,OAEA,QAAA3zB,GAAA,EAAAsP,EAAAguB,EAAAn6B,OAAqCnD,EAAAsP,IAAOtP,EAC5C,GAAAH,GAAA29B,EAAAF,EAAAt9B,IAAAmD,OASA,OARAq6B,GACA39B,EACA6rB,EAAA8R,EAAA39B,EAAA,GACAi2B,EAAApK,EAAA,GACA4L,EAAA5L,EAAA,KAAAuK,GACAC,EAAA7B,GAAAiD,GACAvB,EAAAC,GAAAsB,GAEAplB,EAAA,EAAmBA,EAAArS,IAAOqS,EAAA4jB,EAAAuB,EAAAnB,EAAAs+C,EAAAz+C,EAAA2O,EAAAhZ,EAAAT,EAAA,CAC1B,GAAAA,GAAAuS,EAAAtrB,GACAmlB,EAAApM,EAAA,GACAsM,EAAAtM,EAAA,KAAAgL,GACAu+C,EAAAngD,GAAAkD,GACAmN,EAAA1O,GAAAuB,GACAO,EAAAT,EAAAvB,EACAkC,EAAAF,GAAA,OACA28C,EAAAz8C,EAAAF,EACAK,EAAAs8C,EAAAxgD,GACA5lB,EAAA6nB,EAAAs+C,CAOA,IALAD,GAAA5+D,IAAAiH,GAAAvO,EAAA2pB,EAAA3D,GAAAogD,GAAA1+C,EAAA2O,EAAAr2B,EAAA2nB,GAAAy+C,KACAr8C,GAAAD,EAAAL,EAAAE,EAAA+C,GAAAjD,EAIAK,EAAArC,GAAAH,EAAA0B,GAAA1B,EAAA,CACA,GAAAtrB,GAAAwsB,GAAAF,GAAAjL,GAAAiL,GAAA1L,GACAgM,IAAA5sB,EACA,IAAAqqE,GAAA79C,GAAAa,EAAArtB,EACA4sB,IAAAy9C,EACA,IAAAC,IAAAx8C,EAAAL,GAAA,QAAA5D,GAAAwgD,EAAA,KACA9+C,EAAA++C,GAAA/+C,IAAA++C,IAAAtqE,EAAA,IAAAA,EAAA,OACAgzB,GAAAlF,EAAAL,GAAA,SAiBA,OAAAM,GAAAU,IAAAV,EAAAU,IAAAy7C,IAAAz7C,IAAA,EAAAuE,GAGAkC,GAAA1L,KAKAiL,IACA6J,OAAArU,GACAhJ,MAAAgJ,GACAS,UAAA8J,GACA7J,QAAAV,GACAY,aAAAZ,GACAa,WAAAb,IAgCAsgD,GAAA,SAAArlD,GAGA,MAFAgQ,IAAA5L,QACAyR,GAAA7V,EAAAuP,KACAS,IAGA3K,IAAA,WACAigD,IAAgB/kE,KAAA,aAAA8kB,gBAEhB+K,GAAA,SAAAn/B,EAAAC,GAGA,MAFAm0B,IAAA,GAAAp0B,EACAo0B,GAAA,GAAAn0B,EACAm0E,GAAAC,KAGAC,IACA9B,QAAA,SAAAzjD,EAAAjE,GACA,MAAAkU,IAAAjQ,EAAAiF,SAAAlJ,IAEA2nD,kBAAA,SAAA1jD,EAAAjE,GAEA,IADA,GAAA4nD,GAAA3jD,EAAA2jD,SAAAlzE,GAAA,EAAAsP,EAAA4jE,EAAA/vE,SACAnD,EAAAsP,GAAA,GAAAkwB,GAAA0zC,EAAAlzE,GAAAw0B,SAAAlJ,GAAA,QACA,YAIAmU,IACA0zC,OAAA,WACA,UAEAC,MAAA,SAAA7jD,EAAAjE,GACA,MAAAoU,IAAAnQ,EAAAqF,YAAAtJ,IAEA+nD,WAAA,SAAA9jD,EAAAjE,GAEA,IADA,GAAAsJ,GAAArF,EAAAqF,YAAA50B,GAAA,EAAAsP,EAAAslB,EAAAzxB,SACAnD,EAAAsP,GAAA,GAAAowB,GAAA9K,EAAA50B,GAAAsrB,GAAA,QACA,WAEAgoD,WAAA,SAAA/jD,EAAAjE,GACA,MAAAsU,IAAArQ,EAAAqF,YAAAtJ,IAEAioD,gBAAA,SAAAhkD,EAAAjE,GAEA,IADA,GAAAsJ,GAAArF,EAAAqF,YAAA50B,GAAA,EAAAsP,EAAAslB,EAAAzxB,SACAnD,EAAAsP,GAAA,GAAAswB,GAAAhL,EAAA50B,GAAAsrB,GAAA,QACA,WAEAkoD,QAAA,SAAAjkD,EAAAjE,GACA,MAAA0U,IAAAzQ,EAAAqF,YAAAtJ,IAEAmoD,aAAA,SAAAlkD,EAAAjE,GAEA,IADA,GAAAsJ,GAAArF,EAAAqF,YAAA50B,GAAA,EAAAsP,EAAAslB,EAAAzxB,SACAnD,EAAAsP,GAAA,GAAA0wB,GAAApL,EAAA50B,GAAAsrB,GAAA,QACA,WAEAooD,mBAAA,SAAAnkD,EAAAjE,GAEA,IADA,GAAAqoD,GAAApkD,EAAAokD,WAAA3zE,GAAA,EAAAsP,EAAAqkE,EAAAxwE,SACAnD,EAAAsP,GAAA,GAAAkwB,GAAAm0C,EAAA3zE,GAAAsrB,GAAA,QACA,YAiCAmrC,GAAA,SAAAlnC,EAAAjE,GACA,OAAAiE,GAAAulD,GAAA30E,eAAAovB,EAAAzf,MACAglE,GAAAvlD,EAAAzf,MACA0vB,IAAAjQ,EAAAjE,IA0GAypD,GAAA,SAAAv0E,EAAAC,GACA,GAAAuwB,GAAAxwB,EAAA,GAAAq1B,GACA5E,EAAAzwB,EAAA,GAAAq1B,GACA3E,EAAAzwB,EAAA,GAAAo1B,GACA1E,EAAA1wB,EAAA,GAAAo1B,GACAyT,EAAAtT,GAAA/E,GACAsX,EAAAlU,GAAApD,GACA6zB,EAAA9uB,GAAA7E,GACA6jD,EAAA3gD,GAAAlD,GACA8jD,EAAA3rC,EAAAtT,GAAAhF,GACAkkD,EAAA5rC,EAAAjV,GAAArD,GACAmkD,EAAArwB,EAAA9uB,GAAA9E,GACAkkD,EAAAtwB,EAAAzwB,GAAAnD,GACAznB,EAAA,EAAAyqB,GAAApX,GAAAsX,GAAAjD,EAAAF,GAAAqY,EAAAwb,EAAA1wB,GAAAlD,EAAAF,KACA3iB,EAAAgmB,GAAA5qB,GAEAmzB,EAAAnzB,EAAA,SAAA4F,GACA,GAAA68B,GAAA7X,GAAAhlB,GAAA5F,GAAA4E,EACAo/B,EAAApZ,GAAA5qB,EAAA4F,GAAAhB,EACApH,EAAAwmC,EAAAwnC,EAAA/oC,EAAAipC,EACA9tE,EAAAomC,EAAAynC,EAAAhpC,EAAAkpC,EACAl5D,EAAAuxB,EAAAlF,EAAA2D,EAAA8oC,CACA,QACAp4D,GAAAvV,EAAAJ,GAAAixB,GACAtb,GAAAV,EAAAY,GAAA7V,IAAAI,MAAA6wB,KAEG,WACH,OAAAlH,EAAAkH,GAAAjH,EAAAiH,IAKA,OAFA0E,GAAA+C,SAAAl2B,EAEAmzB,GAGA+K,GAAA,SAAA1gC,GACA,MAAAA,IAGAouE,GAAAxhD,KACA8N,GAAA9N,KAMAuN,IACA9V,MAAAgJ,GACAS,UAAAT,GACAU,QAAAV,GACAY,aAAA,WACAkM,GAAArM,UAAAoM,GACAC,GAAApM,QAAA4M,IAEAzM,WAAA,WACAiM,GAAArM,UAAAqM,GAAApM,QAAAoM,GAAA9V,MAAAgJ,GACA+gD,GAAA1/D,IAAAhK,GAAAg2B,KACAA,GAAAhO,SAEA6K,OAAA,WACA,GAAAs1C,GAAAuB,GAAA,CAEA,OADAA,IAAA1hD,QACAmgD,IAsBAhyC,GAAAhf,IACAif,GAAAD,GACA5Q,IAAA4Q,GACA3Q,GAAAD,GAEAmU,IACA/Z,MAAAuW,GACA9M,UAAAT,GACAU,QAAAV,GACAY,aAAAZ,GACAa,WAAAb,GACAkK,OAAA,WACA,GAAAu1C,KAAAjyC,GAAAC,KAAA7Q,GAAAC,IAEA,OADAD,IAAAC,KAAA4Q,GAAAD,GAAAhf,KACAixD,IAaA9xC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAO,GAAA,EACAC,GAAA,EACAC,GAAA,EACAQ,GAAA,EACAC,GAAA,EACAC,GAAA,EAMAjB,IACA/W,MAAA0W,GACAjN,UAAAqN,GACApN,QAAA6N,GACA3N,aAAA,WACAmN,GAAAtN,UAAA+N,GACAT,GAAArN,QAAAgO,IAEA7N,WAAA,WACAkN,GAAA/W,MAAA0W,GACAK,GAAAtN,UAAAqN,GACAC,GAAArN,QAAA6N,IAEArE,OAAA,WACA,GAAA01C,GAAA5wC,IAAAF,GAAAE,GAAAD,GAAAC,IACAV,IAAAF,GAAAE,GAAAD,GAAAC,IACAT,IAAAF,GAAAE,GAAAD,GAAAC,KACAtuB,QAIA,OAHAouB,IAAAC,GAAAC,GACAO,GAAAC,GAAAC,GACAQ,GAAAC,GAAAC,GAAA,EACA4wC,GAgEA3wC,IAAArjC,WACAo1E,QAAA,IACAC,YAAA,SAAAxmE,GACA,MAAApO,MAAA20E,QAAAvmE,EAAApO,MAEAu0B,aAAA,WACAv0B,KAAA60E,MAAA,GAEArgD,WAAA,WACAx0B,KAAA60E,MAAA3hE,KAEAkhB,UAAA,WACAp0B,KAAA80E,OAAA,GAEAzgD,QAAA,WACA,IAAAr0B,KAAA60E,OAAA70E,KAAA6iC,SAAAylC,YACAtoE,KAAA80E,OAAA5hE,KAEAyX,MAAA,SAAArkB,EAAAI,GACA,OAAA1G,KAAA80E,QACA,OACA90E,KAAA6iC,SAAAwlC,OAAA/hE,EAAAI,GACA1G,KAAA80E,OAAA,CACA,MAEA,QACA90E,KAAA6iC,SAAA0lC,OAAAjiE,EAAAI,EACA,MAEA,SACA1G,KAAA6iC,SAAAwlC,OAAA/hE,EAAAtG,KAAA20E,QAAAjuE,GACA1G,KAAA6iC,SAAAn5B,IAAApD,EAAAI,EAAA1G,KAAA20E,QAAA,EAAAv6C,MAKAyD,OAAAlK,GAGA,IACAohD,IACA9xC,GACAE,GACAD,GACAE,GALAC,GAAAnQ,KAOA6P,IACApY,MAAAgJ,GACAS,UAAA,WACA2O,GAAApY,MAAAmY,IAEAzO,QAAA,WACA0gD,IAAA/xC,GAAAC,GAAAE,IACAJ,GAAApY,MAAAgJ,IAEAY,aAAA,WACAwgD,IAAA,GAEAvgD,WAAA,WACAugD,GAAA,MAEAl3C,OAAA,WACA,GAAAr7B,IAAA6gC,EAEA,OADAA,IAAArQ,QACAxwB,GAmBA8gC,IAAA/jC,WACAy1E,QAAAxxC,GAAA,KACAoxC,YAAA,SAAAxmE,GACA,MAAApO,MAAAg1E,QAAAxxC,GAAAp1B,GAAApO,MAEAu0B,aAAA,WACAv0B,KAAA60E,MAAA,GAEArgD,WAAA,WACAx0B,KAAA60E,MAAA3hE,KAEAkhB,UAAA,WACAp0B,KAAA80E,OAAA,GAEAzgD,QAAA,WACA,IAAAr0B,KAAA60E,OAAA70E,KAAAujC,QAAAzhC,KAAA,KACA9B,KAAA80E,OAAA5hE,KAEAyX,MAAA,SAAArkB,EAAAI,GACA,OAAA1G,KAAA80E,QACA,OACA90E,KAAAujC,QAAAzhC,KAAA,IAAAwE,EAAA,IAAAI,GACA1G,KAAA80E,OAAA,CACA,MAEA,QACA90E,KAAAujC,QAAAzhC,KAAA,IAAAwE,EAAA,IAAAI,EACA,MAEA,SACA1G,KAAAujC,QAAAzhC,KAAA,IAAAwE,EAAA,IAAAI,EAAA1G,KAAAg1E,WAKAn3C,OAAA,WACA,GAAA79B,KAAAujC,QAAA/gC,OAAA,CACA,GAAAq7B,GAAA79B,KAAAujC,QAAAvjB,KAAA,GAEA,OADAhgB,MAAAujC,WACA1F,IAYA,IAAAo3C,IAAA,SAAA1wC,EAAAl4B,GAKA,QAAAc,GAAAyhB,GAKA,MAJAA,KACA,kBAAAgmD,IAAAM,EAAAN,eAAA70E,MAAAC,KAAAqO,YACAo2B,GAAA7V,EAAAumD,EAAAD,KAEAA,EAAAr3C,SATA,GACAs3C,GACAD,EAFAN,EAAA,GAiDA,OArCAznE,GAAAgmE,KAAA,SAAAvkD,GAEA,MADA6V,IAAA7V,EAAAumD,EAAA10C,KACAA,GAAA5C,UAGA1wB,EAAAioE,QAAA,SAAAxmD,GAEA,MADA6V,IAAA7V,EAAAumD,EAAApyC,KACAA,GAAAlF,UAGA1wB,EAAAimE,OAAA,SAAAxkD,GAEA,MADA6V,IAAA7V,EAAAumD,EAAAzwC,KACAA,GAAA7G,UAGA1wB,EAAAomE,SAAA,SAAA3kD,GAEA,MADA6V,IAAA7V,EAAAumD,EAAAzzC,KACAA,GAAA7D,UAGA1wB,EAAAo3B,WAAA,SAAAn2B,GACA,MAAAC,WAAA7L,QAAA2yE,EAAA,MAAA/mE,GAAAm2B,EAAA,KAAAyC,KAAAzC,EAAAn2B,GAAA0lB,OAAA3mB,GAAAo3B,GAGAp3B,EAAAd,QAAA,SAAA+B,GACA,MAAAC,WAAA7L,QACA0yE,EAAA,MAAA9mE,GAAA/B,EAAA,QAAAi3B,KAAA,GAAAV,IAAAv2B,EAAA+B,GACA,kBAAAwmE,IAAAM,EAAAN,eACAznE,GAHAd,GAMAc,EAAAynE,YAAA,SAAAxmE,GACA,MAAAC,WAAA7L,QACAoyE,EAAA,kBAAAxmE,MAAA8mE,EAAAN,aAAAxmE,OACAjB,GAFAynE,GAKAznE,EAAAo3B,cAAAl4B,YAGAm4B,GAAA,SAAA6wC,EAAAr3C,EAAA/B,EAAArxB,GACA,gBAAAgV,EAAA01D,GAgDA,QAAA3qD,GAAAqK,EAAAC,GACA,GAAAtK,GAAA/K,EAAAoV,EAAAC,EACAogD,GAAArgD,EAAArK,EAAA,GAAAsK,EAAAtK,EAAA,KAAA2qD,EAAA3qD,MAAAqK,EAAAC,GAGA,QAAAsgD,GAAAvgD,EAAAC,GACA,GAAAtK,GAAA/K,EAAAoV,EAAAC,EACAtsB,GAAAgiB,QAAA,GAAAA,EAAA,IAGA,QAAAyJ,KACAoQ,EAAA7Z,MAAA4qD,EACA5sE,EAAAyrB,YAGA,QAAAC,KACAmQ,EAAA7Z,QACAhiB,EAAA0rB,UAGA,QAAAmhD,GAAAxgD,EAAAC,GACA4H,EAAA/6B,MAAAkzB,EAAAC,GACA,IAAAtK,GAAA/K,EAAAoV,EAAAC,EACAwgD,GAAA9qD,QAAA,GAAAA,EAAA,IAGA,QAAAob,KACA0vC,EAAArhD,YACAyI,KAGA,QAAAoJ,KACAuvC,EAAA34C,EAAA,MAAAA,EAAA,OACA44C,EAAAphD,SAEA,IAEAh1B,GAAAH,EACAwkC,EACA/Y,EAJAqS,EAAAy4C,EAAAz4C,QACA04C,EAAAC,EAAA93C,SACAlvB,EAAA+mE,EAAAlzE,MAQA,IAJAq6B,EAAAzd,MACAud,EAAA76B,KAAA+6B,GACAA,EAAA,KAEAluB,EAGA,KAAAquB,GAEA,GADA0G,EAAAgyC,EAAA,IACAx2E,EAAAwkC,EAAAlhC,OAAA,MAGA,IAFAozE,IAAAN,EAAA/gD,eAAAqhD,GAAA,GACAN,EAAAlhD,YACA/0B,EAAA,EAAqBA,EAAAH,IAAOG,EAAAi2E,EAAA3qD,SAAA+Y,EAAArkC,IAAA,GAAAsrB,EAAA,GAC5B2qD,GAAAjhD,eAOA1lB,GAAA,KAAAquB,GAAA04C,EAAA5zE,KAAA4zE,EAAAt2D,MAAAnf,OAAAy1E,EAAApmC,UAEAvS,EAAAj7B,KAAA4zE,EAAA1sE,OAAAy6B,KA9GA,GAKA9G,GACAI,EACAF,EAPAl0B,EAAAq1B,EAAAs3C,GACAO,EAAAj2D,EAAAkb,OAAAlwB,EAAA,GAAAA,EAAA,IACA+qE,EAAA13C,KACAw3C,EAAAz3C,EAAA23C,GACAC,GAAA,EAKApxC,GACA7Z,QACAyJ,YACAC,UACAE,aAAA,WACAiQ,EAAA7Z,MAAA6qD,EACAhxC,EAAApQ,UAAA2R,EACAvB,EAAAnQ,QAAA4R,EACAlJ,KACAJ,MAEAnI,WAAA,WACAgQ,EAAA7Z,QACA6Z,EAAApQ,YACAoQ,EAAAnQ,UACA0I,EAAAvvB,GAAAuvB,EACA,IAAAE,GAAAqC,GAAA3C,EAAAk5C,EACA94C,GAAAv6B,QACAozE,IAAAN,EAAA/gD,eAAAqhD,GAAA,GACAz4C,GAAAJ,EAAAT,GAAAW,EAAAhB,EAAAq5C,IACSr4C,IACT24C,IAAAN,EAAA/gD,eAAAqhD,GAAA,GACAN,EAAAlhD,YACA6H,EAAA,YAAAq5C,GACAA,EAAAjhD,WAEAuhD,IAAAN,EAAA9gD,aAAAohD,GAAA,GACA74C,EAAAJ,EAAA,MAEAqL,OAAA,WACAstC,EAAA/gD,eACA+gD,EAAAlhD,YACA6H,EAAA,YAAAq5C,GACAA,EAAAjhD,UACAihD,EAAA9gD,cAsEA,OAAAgQ,KAeAsC,GAAAtC,GACA,WAAc,UACdb,GACAO,KACA5Q,IAAAE,KAsFA6T,GAAA,SAAA9Y,EAAA4I,GAKA,QAAA8E,GAAA/1B,EAAAg2B,EAAAd,EAAAtH,GACAqH,GAAArH,EAAAvF,EAAA4I,EAAAiE,EAAAl1B,EAAAg2B,GAGA,QAAAF,GAAAhH,EAAAC,GACA,MAAAI,IAAAL,GAAAK,GAAAJ,GAAA6gD,EAOA,QAAA93C,GAAAlK,GACA,GAAA/I,GACAma,EACAloB,EACAiuC,EACAjuB,CACA,QACA5I,UAAA,WACA62B,EAAAjuC,GAAA,EACAggB,EAAA,GAEArS,MAAA,SAAAqK,EAAAC,GACA,GACA8gD,GADAzrD,GAAA0K,EAAAC,GAEArhB,EAAAooB,EAAAhH,EAAAC,GACA91B,EAAA62E,EACApiE,EAAA,EAAAqiE,EAAAjhD,EAAAC,GACArhB,EAAAqiE,EAAAjhD,KAAA,EAAA1B,QAAA2B,GAAA,CAYA,KAXAlK,IAAAkgC,EAAAjuC,EAAApJ,IAAAkgB,EAAAM,YAGAxgB,IAAAoJ,IACA+4D,EAAA7yB,EAAAn4B,EAAAT,IACAmpD,GAAA1oD,EAAAgrD,IAAAtC,GAAAnpD,EAAAyrD,MACAzrD,EAAA,IAAA6N,GACA7N,EAAA,IAAA6N,GACAvkB,EAAAooB,EAAA1R,EAAA,GAAAA,EAAA,MAGA1W,IAAAoJ,EACAggB,EAAA,EACAppB,GAEAkgB,EAAAM,YACA2hD,EAAA7yB,EAAA54B,EAAAS,GACA+I,EAAAnJ,MAAAorD,EAAA,GAAAA,EAAA,MAGAA,EAAA7yB,EAAAn4B,EAAAT,GACAwJ,EAAAnJ,MAAAorD,EAAA,GAAAA,EAAA,IACAjiD,EAAAO,WAEAtJ,EAAAgrD,MACS,IAAAG,GAAAnrD,GAAAirD,EAAApiE,EAAA,CACT,GAAAlF,EAGAvP,GAAA+lC,KAAAx2B,EAAAw0C,EAAA54B,EAAAS,GAAA,MACAiS,EAAA,EACAg5C,GACAliD,EAAAM,YACAN,EAAAnJ,MAAAjc,EAAA,MAAAA,EAAA,OACAolB,EAAAnJ,MAAAjc,EAAA,MAAAA,EAAA,OACAolB,EAAAO,YAEAP,EAAAnJ,MAAAjc,EAAA,MAAAA,EAAA,OACAolB,EAAAO,UACAP,EAAAM,YACAN,EAAAnJ,MAAAjc,EAAA,MAAAA,EAAA,UAIAkF,GAAAmX,GAAA0oD,GAAA1oD,EAAAT,IACAwJ,EAAAnJ,MAAAL,EAAA,GAAAA,EAAA,IAEAS,EAAAT,EAAAtN,EAAApJ,EAAAsxB,EAAA/lC,GAEAk1B,QAAA,WACArX,GAAA8W,EAAAO,UACAtJ,EAAA,MAIAiS,MAAA,WACA,MAAAA,IAAAiuB,GAAAjuC,IAAA,IAMA,QAAAkmC,GAAArjD,EAAAC,EAAAq2E,GACA,GAAAC,GAAApgD,GAAAn2B,GACAw2E,EAAArgD,GAAAl2B,GAIAgsB,GAAA,OACAwqD,EAAApgD,GAAAkgD,EAAAC,GACAE,EAAAtgD,GAAAqgD,KACAE,EAAAF,EAAA,GACAG,EAAAF,EAAAC,GAGA,KAAAC,EAAA,OAAAN,GAAAt2E,CAEA,IAAAslC,GAAA2wC,EAAAS,EAAAE,EACA9pC,GAAAmpC,EAAAU,EAAAC,EACAC,EAAAxgD,GAAApK,EAAAwqD,GACAxpC,EAAA1W,GAAAtK,EAAAqZ,GACAoG,EAAAnV,GAAAkgD,EAAA3pC,EACAxW,IAAA2W,EAAAvB,EAGA,IAAA1V,GAAA6gD,EACAz9C,EAAAhD,GAAA6W,EAAAjX,GACA8gD,EAAA1gD,GAAAJ,KACAla,EAAAsd,IAAA09C,GAAA1gD,GAAA6W,KAAA,EAEA,MAAAnxB,EAAA,IAEA,GAAAjN,GAAAyN,GAAAR,GACA+D,EAAA0W,GAAAP,IAAAoD,EAAAvqB,GAAAioE,EAIA,IAHAxgD,GAAAzW,EAAAotB,GACAptB,EAAAqW,GAAArW,IAEAy2D,EAAA,MAAAz2D,EAGA,IAIAnE,GAJA4Z,EAAAt1B,EAAA,GACA62B,EAAA52B,EAAA,GACA62B,EAAA92B,EAAA,GACA+2B,EAAA92B,EAAA,EAGA42B,GAAAvB,IAAA5Z,EAAA4Z,IAAAuB,IAAAnb,EAEA,IAAA4b,GAAAT,EAAAvB,EACAyhD,EAAA5rE,GAAAmsB,EAAA7D,IAAA6E,GACA0+C,EAAAD,GAAAz/C,EAAAgB,EAKA,KAHAy+C,GAAAhgD,EAAAD,IAAApb,EAAAob,IAAAC,IAAArb,GAGAs7D,EACAD,EACAjgD,EAAAC,EAAA,EAAAlX,EAAA,IAAA1U,GAAA0U,EAAA,GAAAyV,GAAAgD,GAAAxB,EAAAC,GACAD,GAAAjX,EAAA,IAAAA,EAAA,IAAAkX,EACAO,EAAA7D,IAAA6B,GAAAzV,EAAA,IAAAA,EAAA,IAAAgX,GAAA,CACA,GAAAogD,GAAA1gD,GAAAP,IAAAoD,EAAAvqB,GAAAioE,EAEA,OADAxgD,IAAA2gD,EAAAhqC,IACAptB,EAAAqW,GAAA+gD,MAMA,QAAAb,GAAAjhD,EAAAC,GACA,GAAAjb,GAAAg8D,EAAAznD,EAAA+E,GAAA/E,EACA0nD,EAAA,CAKA,OAJAjhD,IAAAhb,EAAAi8D,GAAA,EACAjhD,EAAAhb,IAAAi8D,GAAA,GACAhhD,GAAAjb,EAAAi8D,GAAA,EACAhhD,EAAAjb,IAAAi8D,GAAA,GACAA,EAzKA,GAAAH,GAAAzgD,GAAA9G,GACAynD,EAAAF,EAAA,EACAI,EAAAlrE,GAAA8qE,GAAA39C,EA0KA,OAAAqM,IAAAxI,EAAAgC,EAAA/B,EAAA+5C,GAAA,GAAAznD,KAAA+E,GAAA/E,EAAA+E,MAGAxlB,GAAA,SAAAs2B,GACA,OACAtQ,OAAAqQ,GAAAC,IAeAC,IAAA9kC,WACA+B,YAAA+iC,GACA1Z,MAAA,SAAArkB,EAAAI,GAAyB1G,KAAA8zB,OAAAnJ,MAAArkB,EAAAI,IACzBshC,OAAA,WAAsBhoC,KAAA8zB,OAAAkU,UACtB5T,UAAA,WAAyBp0B,KAAA8zB,OAAAM,aACzBC,QAAA,WAAuBr0B,KAAA8zB,OAAAO,WACvBE,aAAA,WAA4Bv0B,KAAA8zB,OAAAS,gBAC5BC,WAAA,WAA0Bx0B,KAAA8zB,OAAAU,cAgC1B,IAAAsR,IAAA,GACAF,GAAAvQ,GAAA,GAAAH,IAEAgS,GAAA,SAAApC,EAAAE,GACA,OAAAA,EAAAD,GAAAD,EAAAE,GAAAH,GAAAC,IA+FAqC,GAAAhD,IACAxZ,MAAA,SAAArkB,EAAAI,GACA1G,KAAA8zB,OAAAnJ,MAAArkB,EAAA4uB,GAAAxuB,EAAAwuB,OA8IA6hD,GAAA,WACA,MAAAzvC,IAAAI,IACA77B,MAAA,SACAD,QAAA,aAGAorE,GAAA,WACA,MAAAD,MACAxvC,WAAA,YACA17B,MAAA,MACAwT,WAAA,UACAO,QAAA,OACAhU,SAAA,WAsBAqrE,GAAA,WAQA,QAAAA,GAAAhjD,GACA,GAAA3tB,GAAA2tB,EAAA,GAAAvtB,EAAAutB,EAAA,EACA,OAAAtJ,GAAA,KACAusD,EAAAvsD,MAAArkB,EAAAI,GAAAikB,IACAwsD,EAAAxsD,MAAArkB,EAAAI,GAAAikB,KACAysD,EAAAzsD,MAAArkB,EAAAI,GAAAikB,GA2DA,QAAAqI,KAEA,MADA0T,GAAAC,EAAA,KACAswC,EAzEA,GAAAvwC,GACAC,EACAuwC,EACAC,EACAC,EACAzsD,EAHA0sD,EAAAL,KACAM,EAAAP,KAAAn3D,QAAA,QAAAhU,SAAA,SAAA27B,WAAA,QACAgwC,EAAAR,KAAAn3D,QAAA,QAAAhU,SAAA,SAAA27B,WAAA,OACAiwC,GAA4B7sD,MAAA,SAAArkB,EAAAI,GAAuBikB,GAAArkB,EAAAI,IAuEnD,OA7DAuwE,GAAAn8C,OAAA,SAAA7G,GACA,GAAAvmB,GAAA2pE,EAAAxrE,QACA6C,EAAA2oE,EAAAh4D,YACA/Y,GAAA2tB,EAAA,GAAAvlB,EAAA,IAAAhB,EACAhH,GAAAutB,EAAA,GAAAvlB,EAAA,IAAAhB,CACA,QAAAhH,GAAA,KAAAA,EAAA,MAAAJ,IAAA,MAAAA,GAAA,KAAAgxE,EACA5wE,GAAA,MAAAA,EAAA,MAAAJ,IAAA,MAAAA,GAAA,KAAAixE,EACAF,GAAAv8C,OAAA7G,IAGAgjD,EAAAnjD,OAAA,SAAAA,GACA,MAAA4S,IAAAC,IAAA7S,EAAA4S,IAAAoB,IAAAuvC,EAAAvjD,OAAA6S,EAAA7S,GAAAwjD,EAAAxjD,UAAAyjD,EAAAzjD,aAGAmjD,EAAAxkD,UAAA,SAAArkB,GACA,MAAAC,WAAA7L,QACA60E,EAAA5kD,UAAArkB,GAAAkpE,EAAA7kD,UAAArkB,GAAAmpE,EAAA9kD,UAAArkB,GACA4kB,KAFAqkD,EAAA5kD,aAKAwkD,EAAAprE,MAAA,SAAAuC,GACA,MAAAC,WAAA7L,QACA60E,EAAAxrE,MAAAuC,GAAAkpE,EAAAzrE,MAAA,IAAAuC,GAAAmpE,EAAA1rE,MAAAuC,GACA6oE,EAAA53D,UAAAg4D,EAAAh4D,cAFAg4D,EAAAxrE,SAKAorE,EAAA53D,UAAA,SAAAjR,GACA,IAAAC,UAAA7L,OAAA,MAAA60E,GAAAh4D,WACA,IAAA3R,GAAA2pE,EAAAxrE,QAAAvF,GAAA8H,EAAA,GAAA1H,GAAA0H,EAAA,EAiBA,OAfA8oE,GAAAG,EACAh4D,UAAAjR,GACA2tB,aAAAz1B,EAAA,KAAAoH,EAAAhH,EAAA,KAAAgH,IAAApH,EAAA,KAAAoH,EAAAhH,EAAA,KAAAgH,KACAomB,OAAA0jD,GAEAL,EAAAG,EACAj4D,WAAA/Y,EAAA,KAAAoH,EAAAhH,EAAA,KAAAgH,IACAquB,aAAAz1B,EAAA,KAAAoH,EAAAyqB,GAAAzxB,EAAA,IAAAgH,EAAAyqB,KAAA7xB,EAAA,KAAAoH,EAAAyqB,GAAAzxB,EAAA,KAAAgH,EAAAyqB,MACArE,OAAA0jD,GAEAJ,EAAAG,EACAl4D,WAAA/Y,EAAA,KAAAoH,EAAAhH,EAAA,KAAAgH,IACAquB,aAAAz1B,EAAA,KAAAoH,EAAAyqB,GAAAzxB,EAAA,KAAAgH,EAAAyqB,KAAA7xB,EAAA,KAAAoH,EAAAyqB,GAAAzxB,EAAA,KAAAgH,EAAAyqB,MACArE,OAAA0jD,GAEAxkD,KAGAikD,EAAA3yC,UAAA,SAAArb,EAAA2F,GACA,MAAA0V,IAAA2yC,EAAAhuD,EAAA2F,IAGAqoD,EAAAtyC,QAAA,SAAAC,EAAAhW,GACA,MAAA+V,IAAAsyC,EAAAryC,EAAAhW,IAQAqoD,EAAAprE,MAAA,OA4BA4rE,GAAAxvC,GAAA,SAAAyvC,GACA,MAAAv7D,IAAA,KAAAu7D,KAGAD,IAAA38C,OAAAoN,GAAA,SAAA3sB,GACA,SAAAgY,GAAAhY,EAAA,IAGA,IAAAo8D,IAAA,WACA,MAAApzC,IAAAkzC,IACA5rE,MAAA,QACAu7B,UAAA,UAGAwwC,GAAA3vC,GAAA,SAAA9oC,GACA,OAAAA,EAAAk0B,GAAAl0B,OAAAu0B,GAAAv0B,IAGAy4E,IAAA98C,OAAAoN,GAAA,SAAA3sB,GACA,MAAAA,IAGA,IAAAs8D,IAAA,WACA,MAAAtzC,IAAAqzC,IACA/rE,MAAA,SACAu7B,UAAA,SAOAiB,IAAAvN,OAAA,SAAAx0B,EAAAI,GACA,OAAAJ,EAAA,EAAA29B,GAAA/jB,GAAAxZ,IAAA8sB,IAGA,IAAAskD,IAAA,WACA,MAAAvvC,IAAAF,IACAx8B,MAAA,IAAAuuB,KA0DA29C,GAAA,WACA,MAAAzwC,IAAAoB,IACA78B,MAAA,OACA07B,WAAA,QAOAsB,IAAA/N,OAAA+N,EAEA,IAAAmvC,IAAA,WACA,MAAAzzC,IAAAsE,IACAh9B,MAAA,SAuBAosE,GAAA,WACA,MAAA3wC,IAAAwB,IACAj9B,MAAA,SACAD,QAAA,YAQAq9B,IAAAnO,OAAAoN,GAAAjE,GAEA,IAAAi0C,IAAA,WACA,MAAA3zC,IAAA0E,IACAp9B,MAAA,SACAu7B,UAAA,KAWA+wC,GAAA,WAOA,QAAAnlD,KAEA,MADA0T,GAAAC,EAAA,KACApC,EARA,GACAjU,GAAAC,EAAAC,EACAkW,EACAC,EACApC,EAJA72B,EAAA,EAAA27B,EAAA,EAAAC,EAAA,EAAA4iC,EAAA,EAAAC,EAAA,EAAAr+D,EAAAk5B,GACA3W,EAAA,KAAAmU,EAAAwC,EAUA,OAAAzC,IACAzQ,OAAA,SAAAA,GACA,MAAA4S,IAAAC,IAAA7S,EAAA4S,IAAA54B,EAAA02B,EAAAmC,EAAA7S,KAEAiI,WAAA,SAAA3tB,GACA,MAAAC,WAAA7L,QAAAgiC,EAAA,MAAAp2B,GAAAiiB,EAAAC,EAAAC,EAAAC,EAAA,KAAAwW,IAAAjL,GAAA1L,GAAAjiB,EAAA,MAAAkiB,GAAAliB,EAAA,MAAAmiB,GAAAniB,EAAA,MAAAoiB,GAAApiB,EAAA,OAAA4kB,KAAA,MAAA3C,EAAA,OAAAA,EAAAC,IAAAC,EAAAC,KAEA3kB,MAAA,SAAAuC,GACA,MAAAC,WAAA7L,QAAAsL,EAAAo7B,IAAAx7B,GAAAU,GAAA89D,EAAAx+D,EAAAy+D,EAAA9iC,EAAAC,GAAAtW,KAAAtlB,GAEA2R,UAAA,SAAAjR,GACA,MAAAC,WAAA7L,QAAAsL,EAAAo7B,GAAAx7B,EAAAw+D,EAAAx+D,EAAAy+D,EAAA9iC,GAAAj7B,EAAA,GAAAk7B,GAAAl7B,EAAA,IAAA4kB,MAAAqW,EAAAC,IAEA8uC,SAAA,SAAAhqE,GACA,MAAAC,WAAA7L,QAAAsL,EAAAo7B,GAAAx7B,GAAAw+D,EAAA99D,GAAA,KAAAV,EAAAy+D,EAAA9iC,EAAAC,GAAAtW,KAAAk5C,EAAA,GAEAmM,SAAA,SAAAjqE,GACA,MAAAC,WAAA7L,QAAAsL,EAAAo7B,GAAAx7B,EAAAw+D,EAAAx+D,GAAAy+D,EAAA/9D,GAAA,KAAAi7B,EAAAC,GAAAtW,KAAAm5C,EAAA,GAEA7nC,UAAA,SAAArb,EAAA2F,GACA,MAAA0V,IAAAC,EAAAtb,EAAA2F,IAEA+V,QAAA,SAAAC,EAAAhW,GACA,MAAA+V,IAAAJ,EAAAK,EAAAhW,KASA2a,IAAAzO,OAAAoN,GAAA3U,GAEA,IAAA+kD,IAAA,WACA,MAAA/zC,IAAAgF,IACA19B,MAAA,OACAu7B,UAAA,GAAAjP,IAQAqR,IAAA1O,OAAAoN,GAAA,SAAA3sB,GACA,SAAA0oB,GAAA1oB,IAGA,IAAAg9D,IAAA,WACA,MAAAh0C,IAAAiF,IACA39B,MAAA,KACAu7B,UAAA;CAOAqC,IAAA3O,OAAA,SAAAx0B,EAAAI,GACA,QAAAA,EAAA,EAAAu9B,GAAA/jB,GAAA5Z,IAAAktB,IAGA,IAAAglD,IAAA,WACA,GAAAt5E,GAAAqpC,GAAAkB,IACA79B,EAAA1M,EAAA0M,OACAgU,EAAA1gB,EAAA0gB,MAUA,OARA1gB,GAAA0M,OAAA,SAAAwC,GACA,MAAAC,WAAA7L,OAAAoJ,IAAAwC,EAAA,GAAAA,EAAA,MAAAA,EAAAxC,KAAAwC,EAAA,IAAAA,EAAA,MAGAlP,EAAA0gB,OAAA,SAAAxR,GACA,MAAAC,WAAA7L,OAAAod,GAAAxR,EAAA,GAAAA,EAAA,GAAAA,EAAA5L,OAAA,EAAA4L,EAAA,YAAAA,EAAAwR,KAAAxR,EAAA,GAAAA,EAAA,GAAAA,EAAA,SAGAwR,GAAA,SACA/T,MAAA,UAmCA4sE,GAAA,WAMA,QAAAA,GAAAnhE,GACA,GAAAohE,GACApyE,EAAA,CAGAgR,GAAAqhE,UAAA,SAAA10E,GACA,GAAA2lC,GAAA3lC,EAAA2lC,QACAA,IACA3lC,EAAAqC,EAAAqjC,GAAAC,GACA3lC,EAAAyC,EAAAqjC,GAAAH,KAEA3lC,EAAAqC,EAAAoyE,EAAApyE,GAAAsyE,EAAA30E,EAAAy0E,GAAA,EACAz0E,EAAAyC,EAAA,EACAgyE,EAAAz0E,IAIA,IAAAyD,GAAAuiC,GAAA3yB,GACA9P,EAAA0iC,GAAA5yB,GACA+Y,EAAA3oB,EAAApB,EAAAsyE,EAAAlxE,EAAAF,GAAA,EACA+oB,EAAA/oB,EAAAlB,EAAAsyE,EAAApxE,EAAAE,GAAA,CAGA,OAAA4P,GAAAqhE,UAAAE,EAAA,SAAA50E,GACAA,EAAAqC,GAAArC,EAAAqC,EAAAgR,EAAAhR,GAAA8R,EACAnU,EAAAyC,GAAA4Q,EAAA5Q,EAAAzC,EAAAyC,GAAA2R,GACK,SAAApU,GACLA,EAAAqC,GAAArC,EAAAqC,EAAA+pB,IAAAE,EAAAF,GAAAjY,EACAnU,EAAAyC,GAAA,GAAA4Q,EAAA5Q,EAAAzC,EAAAyC,EAAA4Q,EAAA5Q,EAAA,IAAA2R,IAjCA,GAAAugE,GAAAlvC,GACAtxB,EAAA,EACAC,EAAA,EACAwgE,GAAA,CA8CA,OAZAJ,GAAAG,WAAA,SAAAtyE,GACA,MAAA+H,WAAA7L,QAAAo2E,EAAAtyE,EAAAmyE,GAAAG,GAGAH,EAAA7zC,KAAA,SAAAt+B,GACA,MAAA+H,WAAA7L,QAAAq2E,GAAA,EAAAzgE,GAAA9R,EAAA,GAAA+R,GAAA/R,EAAA,GAAAmyE,GAAAI,EAAA,MAAAzgE,EAAAC,IAGAogE,EAAAI,SAAA,SAAAvyE,GACA,MAAA+H,WAAA7L,QAAAq2E,GAAA,EAAAzgE,GAAA9R,EAAA,GAAA+R,GAAA/R,EAAA,GAAAmyE,GAAAI,GAAAzgE,EAAAC,GAAA,MAGAogE,GAYAK,GAAA,WACA,MAAA94E,MAAA24E,UAAA7tE,KAGAiuE,GAAA,SAAAl1E,GACA,GAAA8uD,GAAA/oB,EAAAvqC,EAAAsP,EAAA1K,EAAAjE,KAAA2wB,GAAA1sB,EACA,GAEA,KADA0uD,EAAAhiC,EAAAuP,UAAAvP,KACA1sB,EAAA0uD,EAAAvzC,OAEA,GADAvb,EAAAI,GAAA2lC,EAAA3lC,EAAA2lC,SACA,IAAAvqC,EAAA,EAAAsP,EAAAi7B,EAAApnC,OAAoDnD,EAAAsP,IAAOtP,EAC3DsxB,EAAA7uB,KAAA8nC,EAAAvqC,UAGGsxB,EAAAnuB,OACH,OAAAxC,OAGAg5E,GAAA,SAAAn1E,GAEA,IADA,GAAA+lC,GAAAvqC,EAAA4E,EAAAjE,KAAAoxB,GAAAntB,GACAA,EAAAmtB,EAAAhS,OAEA,GADAvb,EAAAI,GAAA2lC,EAAA3lC,EAAA2lC,SACA,IAAAvqC,EAAAuqC,EAAApnC,OAAA,EAA+CnD,GAAA,IAAQA,EACvD+xB,EAAAtvB,KAAA8nC,EAAAvqC,GAGA,OAAAW,OAGAi5E,GAAA,SAAAp1E,GAEA,IADA,GAAA+lC,GAAAvqC,EAAAsP,EAAA1K,EAAAjE,KAAAoxB,GAAAntB,GAAA0sB,KACA1sB,EAAAmtB,EAAAhS,OAEA,GADAuR,EAAA7uB,KAAAmC,GAAA2lC,EAAA3lC,EAAA2lC,SACA,IAAAvqC,EAAA,EAAAsP,EAAAi7B,EAAApnC,OAAkDnD,EAAAsP,IAAOtP,EACzD+xB,EAAAtvB,KAAA8nC,EAAAvqC,GAGA,MAAA4E,EAAA0sB,EAAAvR,OACAvb,EAAAI,EAEA,OAAAjE,OAGAk5E,GAAA,SAAAx2E,GACA,MAAA1C,MAAA24E,UAAA,SAAA10E,GAIA,IAHA,GAAAkmC,IAAAznC,EAAAuB,EAAAK,OAAA,EACAslC,EAAA3lC,EAAA2lC,SACAvqC,EAAAuqC,KAAApnC,SACAnD,GAAA,GAAA8qC,GAAAP,EAAAvqC,GAAAqD,KACAuB,GAAAvB,MAAAynC,KAIAgvC,GAAA,SAAAtrD,GACA,MAAA7tB,MAAA8qC,WAAA,SAAA7mC,GACAA,EAAA2lC,UACA3lC,EAAA2lC,SAAAkM,KAAAjoB,MAKAurD,GAAA,SAAA74D,GAIA,IAHA,GAAA3V,GAAA5K,KACA2vC,EAAAvF,GAAAx/B,EAAA2V,GACA6Q,GAAAxmB,GACAA,IAAA+kC,GACA/kC,IAAAwH,OACAgf,EAAAtvB,KAAA8I,EAGA,KADA,GAAA8C,GAAA0jB,EAAA5uB,OACA+d,IAAAovB,GACAve,EAAAvN,OAAAnW,EAAA,EAAA6S,GACAA,IAAAnO,MAEA,OAAAgf,IAkBAioD,GAAA,WAEA,IADA,GAAAp1E,GAAAjE,KAAAoxB,GAAAntB,GACAA,IAAAmO,QACAgf,EAAAtvB,KAAAmC,EAEA,OAAAmtB,IAGAkoD,GAAA,WACA,GAAAloD,KAIA,OAHApxB,MAAAmO,KAAA,SAAAlK,GACAmtB,EAAAtvB,KAAAmC,KAEAmtB,GAGAmoD,GAAA,WACA,GAAAC,KAMA,OALAx5E,MAAA8qC,WAAA,SAAA7mC,GACAA,EAAA2lC,UACA4vC,EAAA13E,KAAAmC,KAGAu1E,GAGAC,GAAA,WACA,GAAAniE,GAAAtX,KAAAouE,IAMA,OALA92D,GAAAnJ,KAAA,SAAAlK,GACAA,IAAAqT,GACA82D,EAAAtsE,MAAkBgsB,OAAA7pB,EAAAmO,OAAA6F,OAAAhU,MAGlBmqE,EAuDAzjC,IAAAprC,UAAAirC,GAAAjrC,WACA+B,YAAAqpC,GACA7/B,MAAAguE,GACA3qE,KAAA4qE,GACAJ,UAAAM,GACAnuC,WAAAkuC,GACA7uC,IAAA+uC,GACApjC,KAAAqjC,GACAhsE,KAAAisE,GACA9uC,UAAA+uC,GACAK,YAAAJ,GACAE,OAAAD,GACAnL,MAAAqL,GACAxsE,KAAA+9B,GAQA,IAAA2uC,IAAA,SAAA79C,GAMA,IALA,GAAAz8B,GACAsP,GAAAmtB,IAAAn8B,SAAA6C,OACAqpC,EAAA,KACA5nC,EAAA4nC,EAEAl9B,GAAA,CACA,GAAAgiB,GAAA,GAAAua,IAAApP,EAAAntB,EAAA,GACA1K,OAAA0sB,OACAkb,EAAAlb,EACAmL,EAAAz8B,GAAAy8B,IAAAntB,GAGA,OACAk9B,OACAI,KAAAhoC,IAIAmqC,GAAA,SAAAT,GACA,MAAAtC,IAAAsuC,GAAAhsC,QAsOAisC,GAAA,SAAAjsC,GAEA,MADAD,IAAAC,GACAA,GAgBAksC,GAAA,SAAAvzE,GACA,kBACA,MAAAA,KAQAwzE,GAAA,WAMA,QAAA3rC,GAAA72B,GAYA,MAXAA,GAAAhR,EAAA8R,EAAA,EAAAd,EAAA5Q,EAAA2R,EAAA,EACAkW,EACAjX,EAAAwzB,WAAA2D,GAAAlgB,IACAoqD,UAAAjqC,GAAAC,EAAA,KACA7D,WAAA8D,GAAA,IAEAt3B,EAAAwzB,WAAA2D,GAAAD,KACAmqC,UAAAjqC,GAAAH,GAAA,IACAoqC,UAAAjqC,GAAAC,EAAAr3B,EAAA0C,EAAA/S,KAAAG,IAAAgR,EAAAC,KACAyyB,WAAA8D,GAAA3nC,KAAAG,IAAAgR,EAAAC,IAAA,EAAAf,EAAA0C,KAEA1C,EAjBA,GAAAiX,GAAA,KACAnW,EAAA,EACAC,EAAA,EACAs2B,EAAAJ,EA6BA,OAZAJ,GAAA5f,OAAA,SAAAjoB,GACA,MAAA+H,WAAA7L,QAAA+rB,EAAA8f,GAAA/nC,GAAA6nC,GAAA5f,GAGA4f,EAAAvJ,KAAA,SAAAt+B,GACA,MAAA+H,WAAA7L,QAAA4V,GAAA9R,EAAA,GAAA+R,GAAA/R,EAAA,GAAA6nC,IAAA/1B,EAAAC,IAGA81B,EAAAQ,QAAA,SAAAroC,GACA,MAAA+H,WAAA7L,QAAAmsC,EAAA,kBAAAroC,KAAAuzE,IAAAvzE,GAAA6nC,GAAAQ,GAGAR,GAuCA4rC,GAAA,SAAA91E,GACAA,EAAAosB,GAAAppB,KAAA+E,MAAA/H,EAAAosB,IACApsB,EAAAqsB,GAAArpB,KAAA+E,MAAA/H,EAAAqsB,IACArsB,EAAAssB,GAAAtpB,KAAA+E,MAAA/H,EAAAssB,IACAtsB,EAAAusB,GAAAvpB,KAAA+E,MAAA/H,EAAAusB,KAGAmgB,GAAA,SAAAv+B,EAAAie,EAAAC,EAAAC,EAAAC,GAOA,IANA,GACAvsB,GADAmtB,EAAAhf,EAAAw3B,SAEAvqC,GAAA,EACAsP,EAAAyiB,EAAA5uB,OACAkL,EAAA0E,EAAA1P,QAAA6tB,EAAAF,GAAAje,EAAA1P,QAEArD,EAAAsP,GACA1K,EAAAmtB,EAAA/xB,GAAA4E,EAAAqsB,KAAArsB,EAAAusB,KACAvsB,EAAAosB,KAAApsB,EAAAssB,GAAAF,GAAApsB,EAAAvB,MAAAgL,GAIAssE,GAAA,WAMA,QAAAA,GAAA1iE,GACA,GAAA3I,GAAA2I,EAAA1P,OAAA,CAOA,OANA0P,GAAA+Y,GACA/Y,EAAAgZ,GAAAqe,EACAr3B,EAAAiZ,GAAAnY,EACAd,EAAAkZ,GAAAnY,EAAA1J,EACA2I,EAAAwzB,WAAAmvC,EAAA5hE,EAAA1J,IACA3C,GAAAsL,EAAAwzB,WAAAivC,IACAziE,EAGA,QAAA2iE,GAAA5hE,EAAA1J,GACA,gBAAA1K,GACAA,EAAA2lC,UACA+G,GAAA1sC,IAAAosB,GAAAhY,GAAApU,EAAAmhC,MAAA,GAAAz2B,EAAA1K,EAAAssB,GAAAlY,GAAApU,EAAAmhC,MAAA,GAAAz2B,EAEA,IAAA0hB,GAAApsB,EAAAosB,GACAC,EAAArsB,EAAAqsB,GACAC,EAAAtsB,EAAAssB,GAAAoe,EACAne,EAAAvsB,EAAAusB,GAAAme,CACApe,GAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAC,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAvsB,EAAAosB,KACApsB,EAAAqsB,KACArsB,EAAAssB,KACAtsB,EAAAusB,MA9BA,GAAApY,GAAA,EACAC,EAAA,EACAs2B,EAAA,EACA3iC,GAAA,CA2CA,OAZAguE,GAAAhuE,MAAA,SAAA1F,GACA,MAAA+H,WAAA7L,QAAAwJ,IAAA1F,EAAA0zE,GAAAhuE,GAGAguE,EAAAp1C,KAAA,SAAAt+B,GACA,MAAA+H,WAAA7L,QAAA4V,GAAA9R,EAAA,GAAA+R,GAAA/R,EAAA,GAAA0zE,IAAA5hE,EAAAC,IAGA2hE,EAAArrC,QAAA,SAAAroC,GACA,MAAA+H,WAAA7L,QAAAmsC,GAAAroC,EAAA0zE,GAAArrC,GAGAqrC,GAGAE,GAAA,IACAC,IAAe/0C,OAAA,GACfg1C,MAUAC,GAAA,WAIA,QAAAA,GAAA/1E,GACA,GAAAwE,GACAzJ,EAEAiY,EACAlF,EACAnO,EAEA2tB,EACA0oD,EANA3rE,EAAArK,EAAA9B,OAIA4uB,EAAA,GAAArrB,OAAA4I,GAGA4rE,IAEA,KAAAl7E,EAAA,EAAeA,EAAAsP,IAAOtP,EACtByJ,EAAAxE,EAAAjF,GAAA4E,EAAAmtB,EAAA/xB,GAAA,GAAAsrC,IAAA7hC,GACA,OAAA8oB,EAAA7yB,EAAA+J,EAAAzJ,EAAAiF,MAAAstB,GAAA,MACA0oD,EAAAJ,IAAAj2E,EAAAlF,GAAA6yB,GACA2oD,EAAAD,OAAAC,GAAAH,GAAAn2E,EAIA,KAAA5E,EAAA,EAAeA,EAAAsP,IAAOtP,EAEtB,GADA4E,EAAAmtB,EAAA/xB,GAAAuyB,EAAAmd,EAAAzqC,EAAAjF,KAAAiF,GACA,MAAAstB,OAAA,IAGO,CAEP,GADAxf,EAAAmoE,EAAAL,GAAAtoD,IACAxf,EAAA,SAAAxD,OAAA,YAAAgjB,EACA,IAAAxf,IAAAgoE,GAAA,SAAAxrE,OAAA,cAAAgjB,EACAxf,GAAAw3B,SAAAx3B,EAAAw3B,SAAA9nC,KAAAmC,GACAmO,EAAAw3B,UAAA3lC,GACAA,EAAAmO,aATA,CACA,GAAAkF,EAAA,SAAA1I,OAAA,iBACA0I,GAAArT,EAWA,IAAAqT,EAAA,SAAA1I,OAAA,UAIA,IAHA0I,EAAAlF,OAAA+nE,GACA7iE,EAAAwzB,WAAA,SAAA7mC,GAAoCA,EAAAmhC,MAAAnhC,EAAAmO,OAAAgzB,MAAA,IAAoCz2B,IAAOm8B,WAAAC,IAC/EzzB,EAAAlF,OAAA,KACAzD,EAAA,WAAAC,OAAA,QAEA,OAAA0I,GA5CA,GAAAvY,GAAA8vC,GACAE,EAAAD,EAsDA,OARAurC,GAAAt7E,GAAA,SAAAuH,GACA,MAAA+H,WAAA7L,QAAAzD,EAAAuvC,GAAAhoC,GAAA+zE,GAAAt7E,GAGAs7E,EAAAtrC,SAAA,SAAAzoC,GACA,MAAA+H,WAAA7L,QAAAusC,EAAAT,GAAAhoC,GAAA+zE,GAAAtrC,GAGAsrC,EA0EAzqC,IAAArwC,UAAAD,OAAAuZ,OAAA8xB,GAAAprC,UA0BA,IAAAuwB,IAAA,WAMA,QAAAA,GAAAxY,GACA,GAAA5I,GAAAmhC,GAAAv4B,EAOA,IAJA5I,EAAAiqE,UAAA6B,GAAA9rE,EAAA0D,OAAAlT,GAAAwP,EAAA6M,EACA7M,EAAAo8B,WAAA2vC,GAGA5B,EAAAvhE,EAAAwzB,WAAA4vC,OAIA,CACA,GAAAhzE,GAAA4P,EACA9P,EAAA8P,EACA7P,EAAA6P,CACAA,GAAAwzB,WAAA,SAAA7mC,GACAA,EAAAqC,EAAAoB,EAAApB,IAAAoB,EAAAzD,GACAA,EAAAqC,EAAAkB,EAAAlB,IAAAkB,EAAAvD,GACAA,EAAAmhC,MAAA39B,EAAA29B,QAAA39B,EAAAxD,IAEA,IAAAqW,GAAA5S,IAAAF,EAAA,EAAAoxE,EAAAlxE,EAAAF,GAAA,EACA6hC,EAAA/uB,EAAA5S,EAAApB,EACA6iC,EAAA/wB,GAAA5Q,EAAAlB,EAAAgU,EAAA+uB,GACAD,EAAA/wB,GAAA5Q,EAAA29B,OAAA,EACA9tB,GAAAwzB,WAAA,SAAA7mC,GACAA,EAAAqC,GAAArC,EAAAqC,EAAA+iC,GAAAF,EACAllC,EAAAyC,EAAAzC,EAAAmhC,MAAAgE,IAIA,MAAA9xB,GAOA,QAAAkjE,GAAA5mE,GACA,GAAAg2B,GAAAh2B,EAAAg2B,SACAgwC,EAAAhmE,EAAAxB,OAAAw3B,SACA3Q,EAAArlB,EAAAvU,EAAAu6E,EAAAhmE,EAAAvU,EAAA,OACA,IAAAuqC,EAAA,CACA4F,GAAA57B,EACA,IAAA+mE,IAAA/wC,EAAA,GAAAruB,EAAAquB,IAAApnC,OAAA,GAAA+Y,GAAA,CACA0d,IACArlB,EAAA2H,EAAA0d,EAAA1d,EAAAq9D,EAAAhlE,EAAAxF,EAAA6qB,EAAA7qB,GACAwF,EAAA1U,EAAA0U,EAAA2H,EAAAo/D,GAEA/mE,EAAA2H,EAAAo/D,MAEK1hD,KACLrlB,EAAA2H,EAAA0d,EAAA1d,EAAAq9D,EAAAhlE,EAAAxF,EAAA6qB,EAAA7qB,GAEAwF,GAAAxB,OAAA06B,EAAA8tC,EAAAhnE,EAAAqlB,EAAArlB,EAAAxB,OAAA06B,GAAA8sC,EAAA,IAIA,QAAAa,GAAA7mE,GACAA,EAAAxF,EAAA9H,EAAAsN,EAAA2H,EAAA3H,EAAAxB,OAAAlT,EACA0U,EAAA1U,GAAA0U,EAAAxB,OAAAlT,EAcA,QAAA07E,GAAAhnE,EAAAqlB,EAAA0W,GACA,GAAA1W,EAAA,CAUA,IATA,GAQAqW,GARAurC,EAAAjnE,EACAknE,EAAAlnE,EACA87B,EAAAzW,EACA8hD,EAAAF,EAAAzoE,OAAAw3B,SAAA,GACAoxC,EAAAH,EAAA37E,EACA+7E,EAAAH,EAAA57E,EACAg8E,EAAAxrC,EAAAxwC,EACAi8E,EAAAJ,EAAA77E,EAEAwwC,EAAAR,GAAAQ,GAAAmrC,EAAA5rC,GAAA4rC,GAAAnrC,GAAAmrC,GACAE,EAAA9rC,GAAA8rC,GACAD,EAAA5rC,GAAA4rC,GACAA,EAAAj7E,EAAA+T,EACA07B,EAAAI,EAAAn0B,EAAA2/D,EAAAL,EAAAt/D,EAAAy/D,EAAApC,EAAAlpC,EAAAthC,EAAAysE,EAAAzsE,GACAkhC,EAAA,IACAH,GAAAM,GAAAC,EAAA97B,EAAA+7B,GAAA/7B,EAAA07B,GACA0rC,GAAA1rC,EACA2rC,GAAA3rC,GAEA4rC,GAAAxrC,EAAAxwC,EACA87E,GAAAH,EAAA37E,EACAi8E,GAAAJ,EAAA77E,EACA+7E,GAAAH,EAAA57E,CAEAwwC,KAAAR,GAAA4rC,KACAA,EAAApsE,EAAAghC,EACAorC,EAAA57E,GAAAg8E,EAAAD,GAEAJ,IAAA5rC,GAAA8rC,KACAA,EAAArsE,EAAAmsE,EACAE,EAAA77E,GAAA87E,EAAAG,EACAxrC,EAAA/7B,GAGA,MAAA+7B,GAGA,QAAA+qC,GAAAz2E,GACAA,EAAAqC,GAAA8R,EACAnU,EAAAyC,EAAAzC,EAAAmhC,MAAA/sB,EAxHA,GAAAugE,GAAA5pC,GACA52B,EAAA,EACAC,EAAA,EACAwgE,EAAA,IAoIA,OAZA/oD,GAAA8oD,WAAA,SAAAtyE,GACA,MAAA+H,WAAA7L,QAAAo2E,EAAAtyE,EAAAwpB,GAAA8oD,GAGA9oD,EAAA8U,KAAA,SAAAt+B,GACA,MAAA+H,WAAA7L,QAAAq2E,GAAA,EAAAzgE,GAAA9R,EAAA,GAAA+R,GAAA/R,EAAA,GAAAwpB,GAAA+oD,EAAA,MAAAzgE,EAAAC,IAGAyX,EAAA+oD,SAAA,SAAAvyE,GACA,MAAA+H,WAAA7L,QAAAq2E,GAAA,EAAAzgE,GAAA9R,EAAA,GAAA+R,GAAA/R,EAAA,GAAAwpB,GAAA+oD,GAAAzgE,EAAAC,GAAA,MAGAyX,GAGA8gB,GAAA,SAAAx+B,EAAAie,EAAAC,EAAAC,EAAAC,GAOA,IANA,GACAvsB,GADAmtB,EAAAhf,EAAAw3B,SAEAvqC,GAAA,EACAsP,EAAAyiB,EAAA5uB,OACAkL,EAAA0E,EAAA1P,QAAA8tB,EAAAF,GAAAle,EAAA1P,QAEArD,EAAAsP,GACA1K,EAAAmtB,EAAA/xB,GAAA4E,EAAAosB,KAAApsB,EAAAssB,KACAtsB,EAAAqsB,KAAArsB,EAAAusB,GAAAF,GAAArsB,EAAAvB,MAAAgL,GAIAunB,IAAA,EAAAhuB,KAAAkV,KAAA,MAmDAi/D,GAAA,QAAAzV,GAAA51B,GAEA,QAAAqrC,GAAAhpE,EAAAie,EAAAC,EAAAC,EAAAC,GACAsf,GAAAC,EAAA39B,EAAAie,EAAAC,EAAAC,EAAAC,GAOA,MAJA4qD,GAAArrC,MAAA,SAAAzpC,GACA,MAAAq/D,IAAAr/D,MAAA,EAAAA,EAAA,IAGA80E,GACCnmD,IAEDomD,GAAA,WAYA,QAAAC,GAAAhkE,GAQA,MAPAA,GAAA+Y,GACA/Y,EAAAgZ,GAAA,EACAhZ,EAAAiZ,GAAAnY,EACAd,EAAAkZ,GAAAnY,EACAf,EAAAwzB,WAAAmvC,GACAsB,GAAA,GACAvvE,GAAAsL,EAAAwzB,WAAAivC,IACAziE,EAGA,QAAA2iE,GAAAh2E,GACA,GAAA7E,GAAAm8E,EAAAt3E,EAAAmhC,OACA/U,EAAApsB,EAAAosB,GAAAjxB,EACAkxB,EAAArsB,EAAAqsB,GAAAlxB,EACAmxB,EAAAtsB,EAAAssB,GAAAnxB,EACAoxB,EAAAvsB,EAAAusB,GAAApxB,CACAmxB,GAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAC,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAvsB,EAAAosB,KACApsB,EAAAqsB,KACArsB,EAAAssB,KACAtsB,EAAAusB,KACAvsB,EAAA2lC,WACAxqC,EAAAm8E,EAAAt3E,EAAAmhC,MAAA,GAAA4N,EAAA/uC,GAAA,EACAosB,GAAAmrD,EAAAv3E,GAAA7E,EACAkxB,GAAAmrD,EAAAx3E,GAAA7E,EACAmxB,GAAAmrD,EAAAz3E,GAAA7E,EACAoxB,GAAAmrD,EAAA13E,GAAA7E,EACAmxB,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAC,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAorD,EAAA33E,EAAAosB,EAAAC,EAAAC,EAAAC,IA1CA,GAAAorD,GAAAR,GACApvE,GAAA,EACAoM,EAAA,EACAC,EAAA,EACAkjE,GAAA,GACAvoC,EAAAzE,GACAktC,EAAAltC,GACAmtC,EAAAntC,GACAotC,EAAAptC,GACAitC,EAAAjtC,EA6EA,OAxCA+sC,GAAAtvE,MAAA,SAAA1F,GACA,MAAA+H,WAAA7L,QAAAwJ,IAAA1F,EAAAg1E,GAAAtvE,GAGAsvE,EAAA12C,KAAA,SAAAt+B,GACA,MAAA+H,WAAA7L,QAAA4V,GAAA9R,EAAA,GAAA+R,GAAA/R,EAAA,GAAAg1E,IAAAljE,EAAAC,IAGAijE,EAAAM,KAAA,SAAAt1E,GACA,MAAA+H,WAAA7L,QAAAo5E,EAAAttC,GAAAhoC,GAAAg1E,GAAAM,GAGAN,EAAA3sC,QAAA,SAAAroC,GACA,MAAA+H,WAAA7L,OAAA84E,EAAAtoC,aAAA1sC,GAAA2sC,aAAA3sC,GAAAg1E,EAAAtoC,gBAGAsoC,EAAAtoC,aAAA,SAAA1sC,GACA,MAAA+H,WAAA7L,QAAAwwC,EAAA,kBAAA1sC,KAAAuzE,IAAAvzE,GAAAg1E,GAAAtoC,GAGAsoC,EAAAroC,aAAA,SAAA3sC,GACA,MAAA+H,WAAA7L,OAAA84E,EAAAG,WAAAn1E,GAAAo1E,aAAAp1E,GAAAq1E,cAAAr1E,GAAAk1E,YAAAl1E,GAAAg1E,EAAAG,cAGAH,EAAAG,WAAA,SAAAn1E,GACA,MAAA+H,WAAA7L,QAAAi5E,EAAA,kBAAAn1E,KAAAuzE,IAAAvzE,GAAAg1E,GAAAG,GAGAH,EAAAI,aAAA,SAAAp1E,GACA,MAAA+H,WAAA7L,QAAAk5E,EAAA,kBAAAp1E,KAAAuzE,IAAAvzE,GAAAg1E,GAAAI,GAGAJ,EAAAK,cAAA,SAAAr1E,GACA,MAAA+H,WAAA7L,QAAAm5E,EAAA,kBAAAr1E,KAAAuzE,IAAAvzE,GAAAg1E,GAAAK,GAGAL,EAAAE,YAAA,SAAAl1E,GACA,MAAA+H,WAAA7L,QAAAg5E,EAAA,kBAAAl1E,KAAAuzE,IAAAvzE,GAAAg1E,GAAAE,GAGAF,GAGAO,GAAA,SAAAzpE,EAAAie,EAAAC,EAAAC,EAAAC,GAWA,QAAAwpD,GAAA36E,EAAAkS,EAAA7O,EAAA2tB,EAAAC,EAAAC,EAAAC,GACA,GAAAnxB,GAAAkS,EAAA,GACA,GAAAtN,GAAAmtB,EAAA/xB,EAGA,OAFA4E,GAAAosB,KAAApsB,EAAAqsB,KACArsB,EAAAssB,KAAAtsB,EAAAusB,KACA,OAQA,IALA,GAAAsrD,GAAAC,EAAA18E,GACA28E,EAAAt5E,EAAA,EAAAo5E,EACApuE,EAAArO,EAAA,EACA0vD,EAAAx9C,EAAA,EAEA7D,EAAAqhD,GAAA,CACA,GAAAC,GAAAthD,EAAAqhD,IAAA,CACAgtB,GAAA/sB,GAAAgtB,EAAAtuE,EAAAshD,EAAA,EACAD,EAAAC,EAGA,GAAAitB,GAAAF,EAAAruE,GAAAouE,EACAI,EAAAx5E,EAAAu5E,CAEA,IAAAzrD,EAAAF,EAAAC,EAAAF,EAAA,CACA,GAAA8rD,IAAA7rD,EAAA4rD,EAAA1rD,EAAAyrD,GAAAv5E,CACAs3E,GAAA36E,EAAAqO,EAAAuuE,EAAA5rD,EAAAC,EAAAC,EAAA4rD,GACAnC,EAAAtsE,EAAA6D,EAAA2qE,EAAA7rD,EAAA8rD,EAAA5rD,EAAAC,OACK,CACL,GAAA4rD,IAAA/rD,EAAA6rD,EAAA3rD,EAAA0rD,GAAAv5E,CACAs3E,GAAA36E,EAAAqO,EAAAuuE,EAAA5rD,EAAAC,EAAA8rD,EAAA5rD,GACAwpD,EAAAtsE,EAAA6D,EAAA2qE,EAAAE,EAAA9rD,EAAAC,EAAAC,IAvCA,GACAnxB,GACA8qC,EAFA/Y,EAAAhf,EAAAw3B,SACAj7B,EAAAyiB,EAAA5uB,OACAu5E,EAAA,GAAAh2E,OAAA4I,EAAA,EAEA,KAAAotE,EAAA,GAAA5xC,EAAA9qC,EAAA,EAA6BA,EAAAsP,IAAOtP,EACpC08E,EAAA18E,EAAA,GAAA8qC,GAAA/Y,EAAA/xB,GAAAqD,KAGAs3E,GAAA,EAAArrE,EAAAyD,EAAA1P,MAAA2tB,EAAAC,EAAAC,EAAAC,IAoCA6rD,GAAA,SAAAjqE,EAAAie,EAAAC,EAAAC,EAAAC,IACA,EAAApe,EAAAgzB,MAAAwL,GAAAD,IAAAv+B,EAAAie,EAAAC,EAAAC,EAAAC,IAGA8rD,GAAA,QAAA3W,GAAA51B,GAEA,QAAAusC,GAAAlqE,EAAAie,EAAAC,EAAAC,EAAAC,GACA,IAAAd,EAAAtd,EAAAmqE,YAAA7sD,EAAAqgB,UAUA,IATA,GAAArgB,GACApmB,EACA8nB,EACA/xB,EAEAsP,EADA4C,GAAA,EAEArS,EAAAwwB,EAAAltB,OACAE,EAAA0P,EAAA1P,QAEA6O,EAAArS,GAAA,CAEA,IADAoK,EAAAomB,EAAAne,GAAA6f,EAAA9nB,EAAAsgC,SACAvqC,EAAAiK,EAAA5G,MAAA,EAAAiM,EAAAyiB,EAAA5uB,OAAiDnD,EAAAsP,IAAOtP,EAAAiK,EAAA5G,OAAA0uB,EAAA/xB,GAAAqD,KACxD4G,GAAAonC,KAAAC,GAAArnC,EAAA+mB,EAAAC,EAAAC,EAAAD,IAAAE,EAAAF,GAAAhnB,EAAA5G,SACAkuC,GAAAtnC,EAAA+mB,EAAAC,EAAAD,IAAAE,EAAAF,GAAA/mB,EAAA5G,QAAA8tB,GACA9tB,GAAA4G,EAAA5G,UAGA0P,GAAAmqE,UAAA7sD,EAAAogB,GAAAC,EAAA39B,EAAAie,EAAAC,EAAAC,EAAAC,GACAd,EAAAqgB,QAQA,MAJAusC,GAAAvsC,MAAA,SAAAzpC,GACA,MAAAq/D,IAAAr/D,MAAA,EAAAA,EAAA,IAGAg2E,GACCrnD,IAEDunD,GAAA,SAAA7/C,GAOA,IANA,GAEA98B,GAFAR,GAAA,EACAsP,EAAAguB,EAAAn6B,OAEA1C,EAAA68B,EAAAhuB,EAAA,GACAwkE,EAAA,IAEA9zE,EAAAsP,GACA9O,EAAAC,EACAA,EAAA68B,EAAAt9B,GACA8zE,GAAAtzE,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,EAGA,OAAAqzE,GAAA,GAGAsJ,GAAA,SAAA9/C,GAUA,IATA,GAIA98B,GAEAV,EANAE,GAAA,EACAsP,EAAAguB,EAAAn6B,OACA8D,EAAA,EACAI,EAAA,EAEA5G,EAAA68B,EAAAhuB,EAAA,GAEAjB,EAAA,IAEArO,EAAAsP,GACA9O,EAAAC,EACAA,EAAA68B,EAAAt9B,GACAqO,GAAAvO,EAAAU,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GACAyG,IAAAzG,EAAA,GAAAC,EAAA,IAAAX,EACAuH,IAAA7G,EAAA,GAAAC,EAAA,IAAAX,CAGA,OAAAuO,IAAA,GAAApH,EAAAoH,EAAAhH,EAAAgH,IAOAsjC,GAAA,SAAAnxC,EAAAC,EAAAX,GACA,OAAAW,EAAA,GAAAD,EAAA,KAAAV,EAAA,GAAAU,EAAA,KAAAC,EAAA,GAAAD,EAAA,KAAAV,EAAA,GAAAU,EAAA,KAuBA68E,GAAA,SAAAhhD,GACA,IAAA/sB,EAAA+sB,EAAAl5B,QAAA,aAEA,IAAAnD,GACAsP,EACAguE,EAAA,GAAA52E,OAAA4I,GACAiuE,EAAA,GAAA72E,OAAA4I,EAEA,KAAAtP,EAAA,EAAaA,EAAAsP,IAAOtP,EAAAs9E,EAAAt9E,KAAAq8B,EAAAr8B,GAAA,IAAAq8B,EAAAr8B,GAAA,GAAAA,EAEpB,KADAs9E,EAAA7mC,KAAAjF,IACAxxC,EAAA,EAAaA,EAAAsP,IAAOtP,EAAAu9E,EAAAv9E,IAAAs9E,EAAAt9E,GAAA,IAAAs9E,EAAAt9E,GAAA,GAEpB,IAAAw9E,GAAA/rC,GAAA6rC,GACAG,EAAAhsC,GAAA8rC,GAGAG,EAAAD,EAAA,KAAAD,EAAA,GACAG,EAAAF,IAAAt6E,OAAA,KAAAq6E,IAAAr6E,OAAA,GACAk6E,IAIA,KAAAr9E,EAAAw9E,EAAAr6E,OAAA,EAAmCnD,GAAA,IAAQA,EAAAq9E,EAAA56E,KAAA45B,EAAAihD,EAAAE,EAAAx9E,IAAA,IAC3C,KAAAA,GAAA09E,EAAqB19E,EAAAy9E,EAAAt6E,OAAAw6E,IAAqC39E,EAAAq9E,EAAA56E,KAAA45B,EAAAihD,EAAAG,EAAAz9E,IAAA,IAE1D,OAAAq9E,IAGAO,GAAA,SAAAtgD,EAAAhS,GAQA,OAHA4F,GAAAC,EAJA7hB,EAAAguB,EAAAn6B,OACApD,EAAAu9B,EAAAhuB,EAAA,GACArI,EAAAqkB,EAAA,GAAAjkB,EAAAikB,EAAA,GACA0F,EAAAjxB,EAAA,GAAAkxB,EAAAlxB,EAAA,GAEA89E,GAAA,EAEA79E,EAAA,EAAiBA,EAAAsP,IAAOtP,EACxBD,EAAAu9B,EAAAt9B,GAAAkxB,EAAAnxB,EAAA,GAAAoxB,EAAApxB,EAAA,GACAoxB,EAAA9pB,GAAA4pB,EAAA5pB,GAAAJ,GAAA+pB,EAAAE,IAAA7pB,EAAA8pB,IAAAF,EAAAE,GAAAD,IAAA2sD,MACA7sD,EAAAE,EAAAD,EAAAE,CAGA,OAAA0sD,IAGAC,GAAA,SAAAxgD,GAUA,IATA,GAGArd,GACAC,EAJAlgB,GAAA,EACAsP,EAAAguB,EAAAn6B,OACA1C,EAAA68B,EAAAhuB,EAAA,GAGA6Q,EAAA1f,EAAA,GACA2f,EAAA3f,EAAA,GACAs9E,EAAA,IAEA/9E,EAAAsP,GACA2Q,EAAAE,EACAD,EAAAE,EACA3f,EAAA68B,EAAAt9B,GACAmgB,EAAA1f,EAAA,GACA2f,EAAA3f,EAAA,GACAwf,GAAAE,EACAD,GAAAE,EACA29D,GAAAn2E,KAAAkV,KAAAmD,IAAAC,IAGA,OAAA69D,IAGAC,MAAA19E,MAEAkyC,KAeAZ,IAAA1xC,UAAA4D,GAAA5D,WACA+B,YAAA2vC,GACAqsC,MAAA,SAAAz5E,GACA,qBAAAA,IAAA7D,KAAAohB,MAAA,SAAAxS,MACA,UAAA5O,KAAAmxC,OAAA,MAAAnxC,KACA,IAAA0O,GAAA2uE,GAAAp+E,KAAAoP,UAAA,EAIA,OAHAK,GAAA5M,KAAA+B,KACA7D,KAAAsxC,SAAAtxC,KAAAoxC,OAAAtvC,KAAA4M,GACAgjC,GAAA1xC,MACAA,MAEA4xC,MAAA,WAEA,MADA,OAAA5xC,KAAAmxC,QAAAS,GAAA5xC,KAAA,GAAA4O,OAAA,UACA5O,MAEAu9E,MAAA,SAAA15E,GACA,qBAAAA,IAAA7D,KAAAohB,MAAA,SAAAxS,MAGA,OAFA5O,MAAAohB,MAAA,SAAA9V,EAAAkyE,GAA2C35E,EAAA9D,MAAA,MAAAuL,GAAArL,OAAAu9E,KAC3C1rC,GAAA9xC,MACAA,MAEAy9E,SAAA,SAAA55E,GACA,qBAAAA,IAAA7D,KAAAohB,MAAA,SAAAxS,MAGA,OAFA5O,MAAAohB,MAAAvd,EACAiuC,GAAA9xC,MACAA,MA4EA,IAAA09E,IAAA,SAAAt2E,EAAA6D,GAKA,MAJA7D,GAAA,MAAAA,EAAA,GAAAA,EACA6D,EAAA,MAAAA,EAAA,GAAAA,EACA,IAAAoD,UAAA7L,QAAAyI,EAAA7D,IAAA,GACA6D,GAAA7D,EACA,WACA,MAAAH,MAAAiqD,SAAAjmD,EAAA7D,IAIA2vB,GAAA,SAAA4mD,EAAAC,GACA,GAAAt3E,GAAA0T,CAGA,OAFA2jE,GAAA,MAAAA,EAAA,GAAAA,EACAC,EAAA,MAAAA,EAAA,GAAAA,EACA,WACA,GAAAl3E,EAGA,UAAAJ,EAAAI,EAAAJ,IAAA,SAGA,GACAA,GAAA,EAAAW,KAAAiqD,SAAA,EACAxqD,EAAA,EAAAO,KAAAiqD,SAAA,EACAl3C,EAAA1T,IAAAI,WACKsT,KAAA,EAEL,OAAA2jE,GAAAC,EAAAl3E,EAAAO,KAAAkV,MAAA,EAAAlV,KAAAmE,IAAA4O,QAIA6jE,GAAA,WACA,GAAAC,GAAA/mD,GAAAh3B,MAAAC,KAAAqO,UACA,mBACA,MAAApH,MAAAiZ,IAAA49D,OAIAC,GAAA,SAAApvE,GACA,kBACA,OAAAw7B,GAAA,EAAA9qC,EAAA,EAA4BA,EAAAsP,IAAOtP,EAAA8qC,GAAAljC,KAAAiqD,QACnC,OAAA/mB,KAIA6zC,GAAA,SAAArvE,GACA,GAAAsvE,GAAAF,GAAApvE,EACA,mBACA,MAAAsvE,KAAAtvE,IAIAuvE,GAAA,SAAAlpD,GACA,kBACA,OAAA/tB,KAAAmE,IAAA,EAAAnE,KAAAiqD,UAAAl8B,IAIAmpD,GAAA,SAAAh5E,EAAAtB,GAqBA,QAAAu6E,GAAA9sE,GACA,GAAAusB,GAAAwgD,EAAApsC,EAAAosC,MACA,KAAAA,GAAAnsC,GAAAD,IACAosC,GAAA,KAAAA,EAAA,KACA,MAAAA,EAAA,CACA,GAAAjsC,EACA,IACAvU,EAAAuU,EAAAnzC,KAAAk/E,EAAAlsC,GACS,MAAAnzB,GAET,WADApO,GAAAzR,KAAA,QAAAk/E,EAAAr/D,OAIA+e,GAAAoU,CAEAvhC,GAAAzR,KAAA,OAAAk/E,EAAAtgD,OAEAntB,GAAAzR,KAAA,QAAAk/E,EAAA7sE,GArCA,GAAA6sE,GAEAG,EAKAlsC,EACAD,EAPAzhC,EAAAjC,EAAA,wCAEA8vE,EAAA5vD,KACAsjB,EAAA,GAAAusC,gBACAC,EAAA,KACAC,EAAA,KAGA38D,EAAA,CAsHA,IAnHA,mBAAA48D,iBACA,mBAAA1sC,KACA,oBAAAuE,KAAArxC,KAAA8sC,EAAA,GAAA0sC,iBAEA,UAAA1sC,GACAA,EAAA2sC,OAAA3sC,EAAA4sC,QAAA5sC,EAAA6sC,UAAAV,EACAnsC,EAAA8sC,mBAAA,SAAAztE,GAA8C2gC,EAAA+sC,WAAA,GAAAZ,EAAA9sE,IAuB9C2gC,EAAAgtC,WAAA,SAAAngE,GACApO,EAAAzR,KAAA,WAAAk/E,EAAAr/D,IAGAq/D,GACAe,OAAA,SAAAh6E,EAAAxC,GAEA,MADAwC,MAAA,IAAA8T,cACA3K,UAAA7L,OAAA,EAAA+7E,EAAAnvE,IAAAlK,IACA,MAAAxC,EAAA67E,EAAAtwE,OAAA/I,GACAq5E,EAAAlvE,IAAAnK,EAAAxC,EAAA,IACAy7E,IAIAG,SAAA,SAAA57E,GACA,MAAA2L,WAAA7L,QACA87E,EAAA,MAAA57E,EAAA,KAAAA,EAAA,GACAy7E,GAFAG,GAOAnsC,aAAA,SAAAzvC,GACA,MAAA2L,WAAA7L,QACA2vC,EAAAzvC,EACAy7E,GAFAhsC,GAKApwB,QAAA,SAAArf,GACA,MAAA2L,WAAA7L,QACAuf,GAAArf,EACAy7E,GAFAp8D,GAKA08D,KAAA,SAAA/7E,GACA,MAAA2L,WAAA7L,OAAA,EAAAi8E,KAAA,MAAA/7E,EAAA,KAAAA,EAAA,GAAAy7E,IAGAO,SAAA,SAAAh8E,GACA,MAAA2L,WAAA7L,OAAA,EAAAk8E,KAAA,MAAAh8E,EAAA,KAAAA,EAAA,GAAAy7E,IAKA/rC,SAAA,SAAA1vC,GAEA,MADA0vC,GAAA1vC,EACAy7E,GAIA/uE,IAAA,SAAA9K,EAAAT,GACA,MAAAs6E,GAAAgB,KAAA,MAAA76E,EAAAT,IAIAu7E,KAAA,SAAA96E,EAAAT,GACA,MAAAs6E,GAAAgB,KAAA,OAAA76E,EAAAT,IAIAs7E,KAAA,SAAAE,EAAA/6E,EAAAT,GAYA,MAXAouC,GAAAqtC,KAAAD,EAAAl6E,GAAA,EAAAs5E,EAAAC,GACA,MAAAJ,GAAAC,EAAA3rC,IAAA,WAAA2rC,EAAAlvE,IAAA,SAAAivE,EAAA,QACArsC,EAAAstC,kBAAAhB,EAAApwE,KAAA,SAAAzL,EAAAwC,GAAoE+sC,EAAAstC,iBAAAr6E,EAAAxC,KACpE,MAAA47E,GAAArsC,EAAAutC,kBAAAvtC,EAAAutC,iBAAAlB,GACA,MAAAnsC,IAAAF,EAAAE,gBACApwB,EAAA,IAAAkwB,EAAAlwB,WACA,MAAAle,GAAA,kBAAAS,KAAAT,EAAAS,IAAA,MACA,MAAAT,GAAA,IAAAA,EAAArB,SAAAqB,EAAAmuC,GAAAnuC,IACA,MAAAA,GAAAs6E,EAAA/sE,GAAA,QAAAvN,GAAAuN,GAAA,gBAAA6gC,GAAoFpuC,EAAA,KAAAouC,KACpFvhC,EAAAzR,KAAA,aAAAk/E,EAAAlsC,GACAA,EAAAktC,KAAA,MAAA76E,EAAA,KAAAA,GACA65E,GAGAvsC,MAAA,WAEA,MADAK,GAAAL,QACAusC,GAGA/sE,GAAA,WACA,GAAA1O,GAAAgO,EAAAU,GAAArR,MAAA2Q,EAAArC,UACA,OAAA3L,KAAAgO,EAAAytE,EAAAz7E,IAIA,MAAAmB,EAAA,CACA,qBAAAA,GAAA,SAAA+K,OAAA,qBAAA/K,EACA,OAAAs6E,GAAA/uE,IAAAvL,GAGA,MAAAs6E,IAgBAsB,GAAA,SAAAC,EAAAttC,GACA,gBAAAjtC,EAAAtB,GACA,GAAAmW,GAAAmkE,GAAAh5E,GAAAm5E,SAAAoB,GAAAttC,WACA,UAAAvuC,EAAA,CACA,qBAAAA,GAAA,SAAA+K,OAAA,qBAAA/K,EACA,OAAAmW,GAAA5K,IAAAvL,GAEA,MAAAmW,KAIA08C,GAAA+oB,GAAA,qBAAAxtC,GACA,MAAA/tC,UAAAy7E,cAAAC,yBAAA3tC,EAAAI,gBAGAwtC,GAAAJ,GAAA,4BAAAxtC,GACA,MAAA3iB,MAAAtQ,MAAAizB,EAAAI,gBAGAloC,GAAAs1E,GAAA,sBAAAxtC,GACA,MAAAA,GAAAI,eAGAmf,GAAAiuB,GAAA,2BAAAxtC,GACA,GAAAuf,GAAAvf,EAAA6tC,WACA,KAAAtuB,EAAA,SAAA5iD,OAAA,cACA,OAAA4iD,KAGAuuB,GAAA,SAAAL,EAAA1gE,GACA,gBAAA7Z,EAAAmE,EAAAzF,GACAwK,UAAA7L,OAAA,IAAAqB,EAAAyF,IAAA,KACA,IAAA0Q,GAAAmkE,GAAAh5E,GAAAm5E,SAAAoB,EAGA,OAFA1lE,GAAA1Q,IAAA,SAAA8E,GAAyB,MAAAC,WAAA7L,OAAAwX,EAAAo4B,SAAAE,GAAAtzB,EAAA1V,EAAA8E,IAAA9E,GACzB0Q,EAAA1Q,OACAzF,EAAAmW,EAAA5K,IAAAvL,GAAAmW,IAUAgmE,GAAAD,GAAA,WAAAxU,IAEA0U,GAAAF,GAAA,4BAAAnU,IAEAsU,GAAAn6E,MAAAxG,UAEA60C,GAAA8rC,GAAAh4E,IACAyqC,GAAAutC,GAAAvgF,MAEA+yC,IAAgBxtC,KAAA,YA+IhBquC,GAAA,SAAAjtC,GACA,kBACA,MAAAA,KAIA+tC,GAAA,SAAA/tC,GACA,OAAAA,GAGA6tC,IAAA,KA4GA9pC,GAAA,SAAAtC,EAAA+C,EAAAknB,GACA,GAGAS,GAHA7nB,EAAA7C,EAAA,GACA8C,EAAA9C,IAAAvF,OAAA,GACA+4B,EAAA5wB,EAAAC,EAAAC,EAAA,MAAAC,EAAA,GAAAA,EAGA,QADAknB,EAAAD,GAAA,MAAAC,EAAA,KAAAA,GACAA,EAAA7iB,MACA,QACA,GAAAzM,GAAAuE,KAAAgE,IAAAhE,KAAA+D,IAAAJ,GAAA3D,KAAA+D,IAAAH,GAEA,OADA,OAAAmnB,EAAAS,WAAAlV,MAAAkV,EAAAs/C,GAAAx2C,EAAA74B,MAAAsvB,EAAAS,aACA5zB,EAAAi0B,aAAAd,EAAAtvB,EAEA,QACA,QACA,QACA,QACA,QACA,MAAAsvB,EAAAS,WAAAlV,MAAAkV,EAAAu/C,GAAAz2C,EAAAt0B,KAAAgE,IAAAhE,KAAA+D,IAAAJ,GAAA3D,KAAA+D,IAAAH,QAAAmnB,EAAAS,aAAA,MAAAT,EAAA7iB,MACA,MAEA,SACA,QACA,MAAA6iB,EAAAS,WAAAlV,MAAAkV,EAAAq/C,GAAAv2C,MAAAvJ,EAAAS,YAAA,SAAAT,EAAA7iB,OAIA,MAAAtQ,GAAA4N,OAAAulB,IAkEAwiB,GAAA,SAAAzsC,EAAAua,GACAva,IAAApI,OAEA,IAIA+O,GAJA8hC,EAAA,EACAC,EAAA1oC,EAAAvF,OAAA,EACA6tB,EAAAtoB,EAAAyoC,GACAjgB,EAAAxoB,EAAA0oC,EAUA,OAPAlgB,GAAAF,IACA3hB,EAAA8hC,IAAAC,IAAA/hC,EACAA,EAAA2hB,IAAAE,IAAA7hB,GAGA3G,EAAAyoC,GAAAluB,EAAApb,MAAAmpB,GACAtoB,EAAA0oC,GAAAnuB,EAAAwd,KAAAvP,GACAxoB,GA4RA2uC,GAAA,GAAAH,MACAI,GAAA,GAAAJ,MA6DA4pC,GAAAjqC,GAAA,aAEC,SAAAI,EAAA/a,GACD+a,EAAAG,SAAAH,EAAA/a,IACC,SAAA3wB,EAAA2V,GACD,MAAAA,GAAA3V,GAIAu1E,IAAA76D,MAAA,SAAA5X,GAEA,MADAA,GAAAzG,KAAAC,MAAAwG,GACAG,SAAAH,MAAA,EACAA,EAAA,EACAwoC,GAAA,SAAAI,GACAA,EAAAG,QAAAxvC,KAAAC,MAAAovC,EAAA5oC,OACG,SAAA4oC,EAAA/a,GACH+a,EAAAG,SAAAH,EAAA/a,EAAA7tB,IACG,SAAA9C,EAAA2V,GACH,OAAAA,EAAA3V,GAAA8C,IANAyyE,GADA,KAWA,IAAAC,IAAAD,GAAAl4E,MAEAo4E,GAAA,IACAnpC,GAAA,IACAopC,GAAA,KACAC,GAAA,MACAppC,GAAA,OAEAqpC,GAAAtqC,GAAA,SAAAI,GACAA,EAAAG,QAAAxvC,KAAAC,MAAAovC,EAAA+pC,SACC,SAAA/pC,EAAA/a,GACD+a,EAAAG,SAAAH,EAAA/a,EAAA8kD,KACC,SAAAz1E,EAAA2V,GACD,OAAAA,EAAA3V,GAAAy1E,IACC,SAAA/pC,GACD,MAAAA,GAAA4J,kBAGAugC,GAAAD,GAAAv4E,MAEAy4E,GAAAxqC,GAAA,SAAAI,GACAA,EAAAG,QAAAxvC,KAAAC,MAAAovC,EAAAY,SACC,SAAAZ,EAAA/a,GACD+a,EAAAG,SAAAH,EAAA/a,EAAA2b,KACC,SAAAtsC,EAAA2V,GACD,OAAAA,EAAA3V,GAAAssC,IACC,SAAAZ,GACD,MAAAA,GAAAmJ,eAGAkhC,GAAAD,GAAAz4E,MAEA24E,GAAA1qC,GAAA,SAAAI,GACA,GAAAxqC,GAAAwqC,EAAAW,oBAAAC,GAAAopC,EACAx0E,GAAA,IAAAA,GAAAw0E,IACAhqC,EAAAG,QAAAxvC,KAAAC,QAAAovC,EAAAxqC,GAAAw0E,OAAAx0E,IACC,SAAAwqC,EAAA/a,GACD+a,EAAAG,SAAAH,EAAA/a,EAAA+kD,KACC,SAAA11E,EAAA2V,GACD,OAAAA,EAAA3V,GAAA01E,IACC,SAAAhqC,GACD,MAAAA,GAAA0E,aAGA6lC,GAAAD,GAAA34E,MAEAq3C,GAAApJ,GAAA,SAAAI,GACAA,EAAAU,SAAA,UACC,SAAAV,EAAA/a,GACD+a,EAAAO,QAAAP,EAAAQ,UAAAvb,IACC,SAAA3wB,EAAA2V,GACD,OAAAA,EAAA3V,GAAA2V,EAAA02B,oBAAArsC,EAAAqsC,qBAAAC,IAAAqpC,IACC,SAAAjqC,GACD,MAAAA,GAAAQ,UAAA,IAGA4E,GAAA4D,GAAAr3C,MAaA03C,GAAA/I,GAAA,GACAgJ,GAAAhJ,GAAA,GACAkqC,GAAAlqC,GAAA,GACAmqC,GAAAnqC,GAAA,GACAoqC,GAAApqC,GAAA,GACAqqC,GAAArqC,GAAA,GACAsqC,GAAAtqC,GAAA,GAEAuqC,GAAAxhC,GAAA13C,MACAm5E,GAAAxhC,GAAA33C,MACAo5E,GAAAP,GAAA74E,MACAq5E,GAAAP,GAAA94E,MACAs5E,GAAAP,GAAA/4E,MACAu5E,GAAAP,GAAAh5E,MACAw5E,GAAAP,GAAAj5E,MAEAy5E,GAAAxrC,GAAA,SAAAI,GACAA,EAAAO,QAAA,GACAP,EAAAU,SAAA,UACC,SAAAV,EAAA/a,GACD+a,EAAAqrC,SAAArrC,EAAAqE,WAAApf,IACC,SAAA3wB,EAAA2V,GACD,MAAAA,GAAAo6B,WAAA/vC,EAAA+vC,WAAA,IAAAp6B,EAAAs/B,cAAAj1C,EAAAi1C,gBACC,SAAAvJ,GACD,MAAAA,GAAAqE,aAGAiB,GAAA8lC,GAAAz5E,MAEAs3C,GAAArJ,GAAA,SAAAI,GACAA,EAAAqrC,SAAA,KACArrC,EAAAU,SAAA,UACC,SAAAV,EAAA/a,GACD+a,EAAAsB,YAAAtB,EAAAuJ,cAAAtkB,IACC,SAAA3wB,EAAA2V,GACD,MAAAA,GAAAs/B,cAAAj1C,EAAAi1C,eACC,SAAAvJ,GACD,MAAAA,GAAAuJ,eAIAN,IAAAj6B,MAAA,SAAA5X,GACA,MAAAG,UAAAH,EAAAzG,KAAAC,MAAAwG,OAAA,EAAAwoC,GAAA,SAAAI,GACAA,EAAAsB,YAAA3wC,KAAAC,MAAAovC,EAAAuJ,cAAAnyC,MACA4oC,EAAAqrC,SAAA,KACArrC,EAAAU,SAAA,UACG,SAAAV,EAAA/a,GACH+a,EAAAsB,YAAAtB,EAAAuJ,cAAAtkB,EAAA7tB,KALA,KASA,IAAAk0E,IAAAriC,GAAAt3C,MAEA45E,GAAA3rC,GAAA,SAAAI,GACAA,EAAAwrC,cAAA,MACC,SAAAxrC,EAAA/a,GACD+a,EAAAG,SAAAH,EAAA/a,EAAA2b,KACC,SAAAtsC,EAAA2V,GACD,OAAAA,EAAA3V,GAAAssC,IACC,SAAAZ,GACD,MAAAA,GAAA2J,kBAGA8hC,GAAAF,GAAA55E,MAEA+5E,GAAA9rC,GAAA,SAAAI,GACAA,EAAA2rC,cAAA,QACC,SAAA3rC,EAAA/a,GACD+a,EAAAG,SAAAH,EAAA/a,EAAA+kD,KACC,SAAA11E,EAAA2V,GACD,OAAAA,EAAA3V,GAAA01E,IACC,SAAAhqC,GACD,MAAAA,GAAAiF,gBAGA2mC,GAAAF,GAAA/5E,MAEA63C,GAAA5J,GAAA,SAAAI,GACAA,EAAAkB,YAAA,UACC,SAAAlB,EAAA/a,GACD+a,EAAAe,WAAAf,EAAAgB,aAAA/b,IACC,SAAA3wB,EAAA2V,GACD,OAAAA,EAAA3V,GAAA21E,IACC,SAAAjqC,GACD,MAAAA,GAAAgB,aAAA,IAGA6qC,GAAAriC,GAAA73C,MAaAk4C,GAAA/I,GAAA,GACAgJ,GAAAhJ,GAAA,GACAgrC,GAAAhrC,GAAA,GACAirC,GAAAjrC,GAAA,GACAkrC,GAAAlrC,GAAA,GACAmrC,GAAAnrC,GAAA,GACAorC,GAAAprC,GAAA,GAEAqrC,GAAAtiC,GAAAl4C,MACAy6E,GAAAtiC,GAAAn4C,MACA06E,GAAAP,GAAAn6E,MACA26E,GAAAP,GAAAp6E,MACA46E,GAAAP,GAAAr6E,MACA66E,GAAAP,GAAAt6E,MACA86E,GAAAP,GAAAv6E,MAEA+6E,GAAA9sC,GAAA,SAAAI,GACAA,EAAAe,WAAA,GACAf,EAAAkB,YAAA,UACC,SAAAlB,EAAA/a,GACD+a,EAAA2sC,YAAA3sC,EAAA8E,cAAA7f,IACC,SAAA3wB,EAAA2V,GACD,MAAAA,GAAA66B,cAAAxwC,EAAAwwC,cAAA,IAAA76B,EAAA8/B,iBAAAz1C,EAAAy1C,mBACC,SAAA/J,GACD,MAAAA,GAAA8E,gBAGA8nC,GAAAF,GAAA/6E,MAEA83C,GAAA7J,GAAA,SAAAI,GACAA,EAAA2sC,YAAA,KACA3sC,EAAAkB,YAAA,UACC,SAAAlB,EAAA/a,GACD+a,EAAAyB,eAAAzB,EAAA+J,iBAAA9kB,IACC,SAAA3wB,EAAA2V,GACD,MAAAA,GAAA8/B,iBAAAz1C,EAAAy1C,kBACC,SAAA/J,GACD,MAAAA,GAAA+J,kBAIAN,IAAAz6B,MAAA,SAAA5X,GACA,MAAAG,UAAAH,EAAAzG,KAAAC,MAAAwG,OAAA,EAAAwoC,GAAA,SAAAI,GACAA,EAAAyB,eAAA9wC,KAAAC,MAAAovC,EAAA+J,iBAAA3yC,MACA4oC,EAAA2sC,YAAA,KACA3sC,EAAAkB,YAAA,UACG,SAAAlB,EAAA/a,GACH+a,EAAAyB,eAAAzB,EAAA+J,iBAAA9kB,EAAA7tB,KALA,KASA,IAkhBA6yC,IAlhBA4iC,GAAApjC,GAAA93C,MA2TAswC,IAAY6qC,IAAA,GAAAh1E,EAAA,IAAAi1E,EAAA,KACZjkC,GAAA,UACAC,GAAA,KACAH,GAAA,iCA0NAoB,KACA9E,SAAA,SACAlF,KAAA,aACA90B,KAAA,eACAi6B,SAAA,WACAC,MAAA,wEACAC,WAAA,2CACAC,QAAA,+GACAC,aAAA,0EAYA,IAAAynC,IAAA,wBAMAC,GAAAhtC,KAAAh3C,UAAAmhD,YACAD,GACA5hD,EAAAigD,UAAAwkC,IAOAE,IAAA,GAAAjtC,MAAA,4BACAoK,GACA9hD,EAAAkgD,SAAAukC,IAEAthC,GAAA,IACAC,GAAA,GAAAD,GACAE,GAAA,GAAAD,GACAE,GAAA,GAAAD,GACAE,GAAA,EAAAD,GACAE,GAAA,GAAAF,GACAJ,GAAA,IAAAI,GAsHA3gC,GAAA,WACA,MAAAs/B,IAAAvB,GAAAmiC,GAAA/hC,GAAAL,GAAAshC,GAAAF,GAAAF,GAAAL,GAAAthF,EAAA2hD,YAAAz4C,QAAA,GAAAwuC,MAAA,YAAAA,MAAA,YAGAktC,GAAA,WACA,MAAA3iC,IAAAf,GAAAijC,GAAA7iC,GAAAL,GAAAkiC,GAAAH,GAAArB,GAAAL,GAAAthF,EAAAigD,WAAA/2C,QAAAwuC,KAAAuB,IAAA,SAAAvB,KAAAuB,IAAA,YAGAl6B,GAAA,SAAAtD,GACA,MAAAA,GAAA4X,MAAA,SAAsBhqB,IAAA,SAAA5B,GACtB,UAAAA,KAIAo9E,GAAA9lE,GAAA,gEAEA+lE,GAAA/lE,GAAA,4HAEAgmE,GAAAhmE,GAAA,4HAEAimE,GAAAjmE,GAAA,4HAEAkmE,GAAApgB,GAAA5mD,GAAA,UAAAA,IAAA,WAEAinE,GAAArgB,GAAA5mD,IAAA,aAAAA,GAAA,YAEAknE,GAAAtgB,GAAA5mD,GAAA,aAAAA,GAAA,YAEAmnE,GAAAnnE,KAEAonE,GAAA,SAAAx1E,IACAA,EAAA,GAAAA,EAAA,KAAAA,GAAAzH,KAAAC,MAAAwH,GACA,IAAAy1E,GAAAl9E,KAAA+D,IAAA0D,EAAA,GAIA,OAHAu1E,IAAA5pE,EAAA,IAAA3L,EAAA,IACAu1E,GAAA3pE,EAAA,QAAA6pE,EACAF,GAAA1pE,EAAA,MAAA4pE,EACAF,GAAA,IAUAG,GAAA9hC,GAAA1kC,GAAA,qgDAEAymE,GAAA/hC,GAAA1kC,GAAA,qgDAEA0mE,GAAAhiC,GAAA1kC,GAAA,qgDAEA2mE,GAAAjiC,GAAA1kC,GAAA,qgDA+BA4mE,GAAA,SAAAl+E,GACA,kBACA,MAAAA,KAIAm+E,GAAAx9E,KAAA+D,IACA05E,GAAAz9E,KAAAgV,MACA0oE,GAAA19E,KAAAgU,IACA+oC,GAAA/8C,KAAAgE,IACA25E,GAAA39E,KAAAG,IACAy9E,GAAA59E,KAAAiU,IACA2oC,GAAA58C,KAAAkV,KAEA+pC,GAAA,MACAxD,GAAAz7C,KAAAo6D,GACAze,GAAAF,GAAA,EACAoiC,GAAA,EAAApiC,GAgFAh5C,GAAA,WAUA,QAAAA,KACA,GAAA2/D,GACArvD,EACA2tB,GAAA99B,EAAA9J,MAAAC,KAAAqO,WACA69B,GAAApiC,EAAA/J,MAAAC,KAAAqO,WACAuuB,EAAA3yB,EAAAlK,MAAAC,KAAAqO,WAAAu0C,GACAzmB,EAAAjyB,EAAAnK,MAAAC,KAAAqO,WAAAu0C,GACA1V,EAAAu3C,GAAAtoD,EAAAS,GACA6mB,EAAAtnB,EAAAS,CAQA,IANAvwB,MAAAg9D,EAAAl8D,MAGA++B,EAAAvE,IAAA3tB,EAAAkyB,IAAAvE,IAAA3tB,GAGAkyB,EAAAga,GAGA,GAAAhZ,EAAA43C,GAAA5+B,GACA75C,EAAAg8D,OAAAn8B,EAAAy4C,GAAA/nD,GAAAsP,EAAA24C,GAAAjoD,IACAvwB,EAAA3C,IAAA,IAAAwiC,EAAAtP,EAAAT,GAAAsnB,GACA9b,EAAAue,KACA75C,EAAAg8D,OAAA1gC,EAAAg9C,GAAAxoD,GAAAwL,EAAAk9C,GAAA1oD,IACA9vB,EAAA3C,IAAA,IAAAi+B,EAAAxL,EAAAS,EAAA6mB,QAKA,CACA,GAWA7nC,GACAE,EAZAipE,EAAAnoD,EACAooD,EAAA7oD,EACA+J,EAAAtJ,EACAqoD,EAAA9oD,EACA+oD,EAAAh4C,EACAi4C,EAAAj4C,EACAk4C,EAAAp7E,EAAAjK,MAAAC,KAAAqO,WAAA,EACAg3E,EAAAD,EAAAl/B,KAAAo/B,KAAAvlF,MAAAC,KAAAqO,WAAAw1C,GAAAlc,IAAAuE,MACAsX,EAAAohC,GAAAH,GAAAv4C,EAAAvE,GAAA,GAAA59B,EAAAhK,MAAAC,KAAAqO,YACAk3E,EAAA/hC,EACAgiC,EAAAhiC,CAKA,IAAA6hC,EAAAn/B,GAAA,CACA,GAAApvB,GAAA6rB,GAAA0iC,EAAA19C,EAAAk9C,GAAAO,IACA15C,EAAAiX,GAAA0iC,EAAAn5C,EAAA24C,GAAAO,KACAF,GAAA,EAAApuD,GAAAovB,IAAApvB,GAAA2sB,EAAA,KAAAvd,GAAApP,EAAAmuD,GAAAnuD,IACAouD,EAAA,EAAAh/C,EAAA++C,GAAAroD,EAAAT,GAAA,IACAgpD,GAAA,EAAAz5C,GAAAwa,IAAAxa,GAAA+X,EAAA,KAAAshC,GAAAr5C,EAAAs5C,GAAAt5C,IACAy5C,EAAA,EAAAJ,EAAAC,GAAApoD,EAAAT,GAAA,GAGA,GAAAunB,GAAAxX,EAAAy4C,GAAAI,GACAphC,EAAAzX,EAAA24C,GAAAE,GACA5hC,EAAAxb,EAAAg9C,GAAAM,GACA7hC,EAAAzb,EAAAk9C,GAAAI,EAGA,IAAAzhC,EAAA0C,GAAA,CACA,GAAApC,GAAA5X,EAAAy4C,GAAAK,GACAjhC,EAAA7X,EAAA24C,GAAAG,GACApkD,EAAA+G,EAAAg9C,GAAAz+C,GACApF,EAAA6G,EAAAk9C,GAAA3+C,EAGA,IAAAgH,EAAAwV,GAAA,CACA,GAAA+iC,GAAAP,EAAAh/B,GAAAhD,GAAAQ,EAAAC,EAAA/iB,EAAAE,EAAAgjB,EAAAC,EAAAZ,EAAAC,IAAAD,EAAAC,GACApW,EAAA0W,EAAA+hC,EAAA,GACAx4C,EAAA0W,EAAA8hC,EAAA,GACAt8B,EAAArF,EAAA2hC,EAAA,GACAr8B,EAAArF,EAAA0hC,EAAA,GACAC,EAAA,EAAAb,GAAApiC,IAAAzV,EAAAmc,EAAAlc,EAAAmc,IAAAvF,GAAA7W,IAAAC,KAAA4W,GAAAsF,IAAAC,OAAA,GACAu8B,EAAA9hC,GAAA4hC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAF,GAAAX,GAAAphC,GAAA7b,EAAAg+C,IAAAD,EAAA,IACAF,EAAAZ,GAAAphC,GAAAtX,EAAAy5C,IAAAD,EAAA,KAKAP,EAAAj/B,GAGAs/B,EAAAt/B,IACAtqC,EAAA2nC,GAAA3iB,EAAAE,EAAA4iB,EAAAC,EAAAzX,EAAAs5C,EAAA/hC,GACA3nC,EAAAynC,GAAAO,EAAAC,EAAAZ,EAAAC,EAAAlX,EAAAs5C,EAAA/hC,GAEAp3C,EAAAg8D,OAAAzsD,EAAAie,GAAAje,EAAA8nC,IAAA9nC,EAAAke,GAAAle,EAAA+nC,KAGA6hC,EAAAhiC,EAAAn3C,EAAA3C,IAAAkS,EAAAie,GAAAje,EAAAke,GAAA0rD,EAAAd,GAAA9oE,EAAA+nC,IAAA/nC,EAAA8nC,KAAAghC,GAAA5oE,EAAA6nC,IAAA7nC,EAAA4nC,MAAAD,IAIAp3C,EAAA3C,IAAAkS,EAAAie,GAAAje,EAAAke,GAAA0rD,EAAAd,GAAA9oE,EAAA+nC,IAAA/nC,EAAA8nC,KAAAghC,GAAA9oE,EAAAmoC,IAAAnoC,EAAAkoC,MAAAL,GACAp3C,EAAA3C,IAAA,IAAAwiC,EAAAw4C,GAAA9oE,EAAAke,GAAAle,EAAAmoC,IAAAnoC,EAAAie,GAAAje,EAAAkoC,KAAA4gC,GAAA5oE,EAAAge,GAAAhe,EAAAioC,IAAAjoC,EAAA+d,GAAA/d,EAAAgoC,MAAAL,GACAp3C,EAAA3C,IAAAoS,EAAA+d,GAAA/d,EAAAge,GAAA0rD,EAAAd,GAAA5oE,EAAAioC,IAAAjoC,EAAAgoC,KAAA4gC,GAAA5oE,EAAA6nC,IAAA7nC,EAAA4nC,MAAAD,MAKAp3C,EAAAg8D,OAAA3kB,EAAAC,GAAAt3C,EAAA3C,IAAA,IAAAwiC,EAAA64C,EAAAC,GAAAvhC,IArBAp3C,EAAAg8D,OAAA3kB,EAAAC,GAyBAhc,EAAAue,IAAAg/B,EAAAh/B,GAGAq/B,EAAAr/B,IACAtqC,EAAA2nC,GAAAJ,EAAAC,EAAAU,EAAAC,EAAApc,GAAA49C,EAAA9hC,GACA3nC,EAAAynC,GAAAG,EAAAC,EAAA/iB,EAAAE,EAAA6G,GAAA49C,EAAA9hC,GAEAp3C,EAAAk8D,OAAA3sD,EAAAie,GAAAje,EAAA8nC,IAAA9nC,EAAAke,GAAAle,EAAA+nC,KAGA4hC,EAAA/hC,EAAAn3C,EAAA3C,IAAAkS,EAAAie,GAAAje,EAAAke,GAAAyrD,EAAAb,GAAA9oE,EAAA+nC,IAAA/nC,EAAA8nC,KAAAghC,GAAA5oE,EAAA6nC,IAAA7nC,EAAA4nC,MAAAD,IAIAp3C,EAAA3C,IAAAkS,EAAAie,GAAAje,EAAAke,GAAAyrD,EAAAb,GAAA9oE,EAAA+nC,IAAA/nC,EAAA8nC,KAAAghC,GAAA9oE,EAAAmoC,IAAAnoC,EAAAkoC,MAAAL,GACAp3C,EAAA3C,IAAA,IAAAi+B,EAAA+8C,GAAA9oE,EAAAke,GAAAle,EAAAmoC,IAAAnoC,EAAAie,GAAAje,EAAAkoC,KAAA4gC,GAAA5oE,EAAAge,GAAAhe,EAAAioC,IAAAjoC,EAAA+d,GAAA/d,EAAAgoC,KAAAL,GACAp3C,EAAA3C,IAAAoS,EAAA+d,GAAA/d,EAAAge,GAAAyrD,EAAAb,GAAA5oE,EAAAioC,IAAAjoC,EAAAgoC,KAAA4gC,GAAA5oE,EAAA6nC,IAAA7nC,EAAA4nC,MAAAD,KAKAp3C,EAAA3C,IAAA,IAAAi+B,EAAAs9C,EAAA/+C,EAAAud,GArBAp3C,EAAAk8D,OAAAplB,EAAAC,OA1FA/2C,GAAAg8D,OAAA,IAoHA,IAFAh8D,EAAAi8D,YAEAe,EAAA,MAAAh9D,GAAA,KAAAg9D,EAAA,SA7IA,GAAAx/D,GAAAg5C,GACA/4C,EAAAg5C,GACA/4C,EAAAy6E,GAAA,GACAc,EAAA,KACAr7E,EAAA84C,GACA74C,EAAA84C,GACAh5C,EAAAi5C,GACA52C,EAAA,IA+KA,OAtCA3C,GAAA6pE,SAAA,WACA,GAAAv5D,KAAAnQ,EAAA9J,MAAAC,KAAAqO,aAAAvE,EAAA/J,MAAAC,KAAAqO,YAAA,EACAxO,IAAAoK,EAAAlK,MAAAC,KAAAqO,aAAAnE,EAAAnK,MAAAC,KAAAqO,YAAA,EAAAq0C,GAAA,CACA,QAAAiiC,GAAA9kF,GAAAma,EAAA6qE,GAAAhlF,GAAAma,IAGAtQ,EAAAG,YAAA,SAAAuE,GACA,MAAAC,WAAA7L,QAAAqH,EAAA,kBAAAuE,KAAAo2E,IAAAp2E,GAAA1E,GAAAG,GAGAH,EAAAI,YAAA,SAAAsE,GACA,MAAAC,WAAA7L,QAAAsH,EAAA,kBAAAsE,KAAAo2E,IAAAp2E,GAAA1E,GAAAI,GAGAJ,EAAAK,aAAA,SAAAqE,GACA,MAAAC,WAAA7L,QAAAuH,EAAA,kBAAAqE,KAAAo2E,IAAAp2E,GAAA1E,GAAAK,GAGAL,EAAA47E,UAAA,SAAAl3E,GACA,MAAAC,WAAA7L,QAAA8iF,EAAA,MAAAl3E,EAAA,uBAAAA,KAAAo2E,IAAAp2E,GAAA1E,GAAA47E,GAGA57E,EAAAO,WAAA,SAAAmE,GACA,MAAAC,WAAA7L,QAAAyH,EAAA,kBAAAmE,KAAAo2E,IAAAp2E,GAAA1E,GAAAO,GAGAP,EAAAQ,SAAA,SAAAkE,GACA,MAAAC,WAAA7L,QAAA0H,EAAA,kBAAAkE,KAAAo2E,IAAAp2E,GAAA1E,GAAAQ,GAGAR,EAAAM,SAAA,SAAAoE,GACA,MAAAC,WAAA7L,QAAAwH,EAAA,kBAAAoE,KAAAo2E,IAAAp2E,GAAA1E,GAAAM,GAGAN,EAAA2C,QAAA,SAAA+B,GACA,MAAAC,WAAA7L,QAAA6J,EAAA,MAAA+B,EAAA,KAAAA,EAAA1E,GAAA2C,GAGA3C,EAOA86C,IAAAjlD,WACAqmF,UAAA,WACA5lF,KAAA60E,MAAA,GAEAgR,QAAA,WACA7lF,KAAA60E,MAAA3hE,KAEAkhB,UAAA,WACAp0B,KAAA80E,OAAA,GAEAzgD,QAAA,YACAr0B,KAAA60E,OAAA,IAAA70E,KAAA60E,OAAA,IAAA70E,KAAA80E,SAAA90E,KAAA6iC,SAAAylC,YACAtoE,KAAA60E,MAAA,EAAA70E,KAAA60E,OAEAlqD,MAAA,SAAArkB,EAAAI,GAEA,OADAJ,KAAAI,KACA1G,KAAA80E,QACA,OAAA90E,KAAA80E,OAAA,EAA8B90E,KAAA60E,MAAA70E,KAAA6iC,SAAA0lC,OAAAjiE,EAAAI,GAAA1G,KAAA6iC,SAAAwlC,OAAA/hE,EAAAI,EAAsE,MACpG,QAAA1G,KAAA80E,OAAA,CACA,SAAA90E,KAAA6iC,SAAA0lC,OAAAjiE,EAAAI,KAKA,IAAAo/E,IAAA,SAAAz5E,GACA,UAAAm4C,IAAAn4C,IAWA1D,GAAA,WAQA,QAAAA,GAAArE,GACA,GAAAjF,GAEAyJ,EAEAugE,EAHA16D,EAAArK,EAAA9B,OAEAujF,GAAA,CAKA,KAFA,MAAA15E,IAAA+c,EAAAxgB,EAAAygE,EAAAl8D,OAEA9N,EAAA,EAAeA,GAAAsP,IAAQtP,IACvBA,EAAAsP,GAAAq3E,EAAAl9E,EAAAxE,EAAAjF,KAAAiF,MAAAyhF,KACAA,MAAA38D,EAAAgL,YACAhL,EAAAiL,WAEA0xD,GAAA38D,EAAAuB,OAAA8kD,EAAA3mE,EAAAzJ,EAAAiF,IAAAorE,EAAA5mE,EAAAzJ,EAAAiF,GAGA,IAAA+kE,EAAA,MAAAjgD,GAAA,KAAAigD,EAAA,SAxBA,GAAAoG,GAAAhrB,GACAirB,EAAAhrB,GACAshC,EAAAxB,IAAA,GACAn4E,EAAA,KACAzD,EAAAk9E,GACA18D,EAAA,IA0CA,OApBAzgB,GAAArC,EAAA,SAAA8H,GACA,MAAAC,WAAA7L,QAAAitE,EAAA,kBAAArhE,KAAAo2E,IAAAp2E,GAAAzF,GAAA8mE,GAGA9mE,EAAAjC,EAAA,SAAA0H,GACA,MAAAC,WAAA7L,QAAAktE,EAAA,kBAAAthE,KAAAo2E,IAAAp2E,GAAAzF,GAAA+mE,GAGA/mE,EAAAq9E,QAAA,SAAA53E,GACA,MAAAC,WAAA7L,QAAAwjF,EAAA,kBAAA53E,KAAAo2E,KAAAp2E,GAAAzF,GAAAq9E,GAGAr9E,EAAAC,MAAA,SAAAwF,GACA,MAAAC,WAAA7L,QAAAoG,EAAAwF,EAAA,MAAA/B,IAAA+c,EAAAxgB,EAAAyD,IAAA1D,GAAAC,GAGAD,EAAA0D,QAAA,SAAA+B,GACA,MAAAC,WAAA7L,QAAA,MAAA4L,EAAA/B,EAAA+c,EAAA,KAAAA,EAAAxgB,EAAAyD,EAAA+B,GAAAzF,GAAA0D,GAGA1D,GAGAs9E,GAAA,WAUA,QAAA9S,GAAA7uE,GACA,GAAAjF,GACAkS,EACA7D,EAEA5E,EAEAugE,EAHA16D,EAAArK,EAAA9B,OAEAujF,GAAA,EAEAG,EAAA,GAAAngF,OAAA4I,GACAw3E,EAAA,GAAApgF,OAAA4I,EAIA,KAFA,MAAAtC,IAAA+c,EAAAxgB,EAAAygE,EAAAl8D,OAEA9N,EAAA,EAAeA,GAAAsP,IAAQtP,EAAA,CACvB,KAAAA,EAAAsP,GAAAq3E,EAAAl9E,EAAAxE,EAAAjF,KAAAiF,MAAAyhF,EACA,GAAAA,KACAx0E,EAAAlS,EACA+pB,EAAAw8D,YACAx8D,EAAAgL,gBACS,CAGT,IAFAhL,EAAAiL,UACAjL,EAAAgL,YACA1mB,EAAArO,EAAA,EAAyBqO,GAAA6D,IAAQ7D,EACjC0b,EAAAuB,MAAAu7D,EAAAx4E,GAAAy4E,EAAAz4E,GAEA0b,GAAAiL,UACAjL,EAAAy8D,UAGAE,IACAG,EAAA7mF,IAAAgxB,EAAAvnB,EAAAzJ,EAAAiF,GAAA6hF,EAAA9mF,IAAAixB,EAAAxnB,EAAAzJ,EAAAiF,GACA8kB,EAAAuB,MAAA4F,KAAAznB,EAAAzJ,EAAAiF,GAAA4hF,EAAA7mF,GAAAmxB,KAAA1nB,EAAAzJ,EAAAiF,GAAA6hF,EAAA9mF,KAIA,GAAAgqE,EAAA,MAAAjgD,GAAA,KAAAigD,EAAA,SAGA,QAAA+c,KACA,MAAAz9E,MAAAq9E,WAAAp9E,SAAAyD,WAhDA,GAAAgkB,GAAAo0B,GACAl0B,EAAA,KACAD,EAAAk0D,GAAA,GACAh0D,EAAAk0B,GACAshC,EAAAxB,IAAA,GACAn4E,EAAA,KACAzD,EAAAk9E,GACA18D,EAAA,IA6FA,OAjDA+pD,GAAA7sE,EAAA,SAAA8H,GACA,MAAAC,WAAA7L,QAAA6tB,EAAA,kBAAAjiB,KAAAo2E,IAAAp2E,GAAAmiB,EAAA,KAAA4iD,GAAA9iD,GAGA8iD,EAAA9iD,GAAA,SAAAjiB,GACA,MAAAC,WAAA7L,QAAA6tB,EAAA,kBAAAjiB,KAAAo2E,IAAAp2E,GAAA+kE,GAAA9iD,GAGA8iD,EAAA5iD,GAAA,SAAAniB,GACA,MAAAC,WAAA7L,QAAA+tB,EAAA,MAAAniB,EAAA,uBAAAA,KAAAo2E,IAAAp2E,GAAA+kE,GAAA5iD,GAGA4iD,EAAAzsE,EAAA,SAAA0H,GACA,MAAAC,WAAA7L,QAAA8tB,EAAA,kBAAAliB,KAAAo2E,IAAAp2E,GAAAoiB,EAAA,KAAA2iD,GAAA7iD,GAGA6iD,EAAA7iD,GAAA,SAAAliB,GACA,MAAAC,WAAA7L,QAAA8tB,EAAA,kBAAAliB,KAAAo2E,IAAAp2E,GAAA+kE,GAAA7iD,GAGA6iD,EAAA3iD,GAAA,SAAApiB,GACA,MAAAC,WAAA7L,QAAAguB,EAAA,MAAApiB,EAAA,uBAAAA,KAAAo2E,IAAAp2E,GAAA+kE,GAAA3iD,GAGA2iD,EAAAkT,OACAlT,EAAAmT,OAAA,WACA,MAAAF,KAAA9/E,EAAA+pB,GAAA3pB,EAAA4pB,IAGA6iD,EAAAoT,OAAA,WACA,MAAAH,KAAA9/E,EAAA+pB,GAAA3pB,EAAA8pB,IAGA2iD,EAAAqT,OAAA,WACA,MAAAJ,KAAA9/E,EAAAiqB,GAAA7pB,EAAA4pB,IAGA6iD,EAAA6S,QAAA,SAAA53E,GACA,MAAAC,WAAA7L,QAAAwjF,EAAA,kBAAA53E,KAAAo2E,KAAAp2E,GAAA+kE,GAAA6S,GAGA7S,EAAAvqE,MAAA,SAAAwF,GACA,MAAAC,WAAA7L,QAAAoG,EAAAwF,EAAA,MAAA/B,IAAA+c,EAAAxgB,EAAAyD,IAAA8mE,GAAAvqE,GAGAuqE,EAAA9mE,QAAA,SAAA+B,GACA,MAAAC,WAAA7L,QAAA,MAAA4L,EAAA/B,EAAA+c,EAAA,KAAAA,EAAAxgB,EAAAyD,EAAA+B,GAAA+kE,GAAA9mE,GAGA8mE,GAGAsT,GAAA,SAAA5mF,EAAAC,GACA,MAAAA,GAAAD,GAAA,EAAAC,EAAAD,EAAA,EAAAC,GAAAD,EAAA,EAAAqT,KAGAwzE,GAAA,SAAA59E,GACA,MAAAA,IAGAW,GAAA,WAQA,QAAAA,GAAAnF,GACA,GAAAjF,GAEAkS,EACA7D,EAMAyuB,EAGAvoB,EAXAjF,EAAArK,EAAA9B,OAGA2nC,EAAA,EACA5mC,EAAA,GAAAwC,OAAA4I,GACAnF,EAAA,GAAAzD,OAAA4I,GACAiuB,GAAA3yB,EAAAlK,MAAAC,KAAAqO,WACA6+B,EAAAjmC,KAAAG,IAAA09E,GAAA79E,KAAAgE,KAAA65E,GAAA56E,EAAAnK,MAAAC,KAAAqO,WAAAuuB,IAEAx9B,EAAA6H,KAAAG,IAAAH,KAAA+D,IAAAkiC,GAAAv+B,EAAA3E,EAAAjK,MAAAC,KAAAqO,YACA+nE,EAAAh3E,GAAA8tC,EAAA,OAGA,KAAA7tC,EAAA,EAAeA,EAAAsP,IAAOtP,GACtBuU,EAAApK,EAAAjG,EAAAlE,OAAAqD,EAAA4B,EAAAjF,KAAAiF,IAAA,IACA6lC,GAAAv2B,EASA,KAJA,MAAAw2D,EAAA7mE,EAAAuyC,KAAA,SAAAz2C,EAAAkS,GAAuD,MAAA64D,GAAA5gE,EAAAnK,GAAAmK,EAAA+H,MACvD,MAAAukC,GAAAvyC,EAAAuyC,KAAA,SAAAz2C,EAAAkS,GAAsD,MAAAukC,GAAAxxC,EAAAjF,GAAAiF,EAAAiN,MAGtDlS,EAAA,EAAAqO,EAAAy8B,GAAA+C,EAAAv+B,EAAAynE,GAAAjsC,EAAA,EAAkD9qC,EAAAsP,IAAOtP,EAAAu9B,EAAAT,EACzD5qB,EAAAhO,EAAAlE,GAAAuU,EAAApK,EAAA+H,GAAA4qB,EAAAS,GAAAhpB,EAAA,EAAAA,EAAAlG,EAAA,GAAA0oE,EAAA5sE,EAAA+H,IACAjN,OAAAiN,GACAhO,MAAAlE,EACAqD,MAAAkR,EACA3J,WAAA2yB,EACA1yB,SAAAiyB,EACAnyB,SAAA5K,EAIA,OAAAoK,GA5CA,GAAA9G,GAAAgkF,GACAtc,EAAAqc,GACA3wC,EAAA,KACA7rC,EAAAu6E,GAAA,GACAt6E,EAAAs6E,GAAAM,IACA96E,EAAAw6E,GAAA,EAkEA,OAxBA/6E,GAAA/G,MAAA,SAAA0L,GACA,MAAAC,WAAA7L,QAAAE,EAAA,kBAAA0L,KAAAo2E,IAAAp2E,GAAA3E,GAAA/G,GAGA+G,EAAA2gE,WAAA,SAAAh8D,GACA,MAAAC,WAAA7L,QAAA4nE,EAAAh8D,EAAA0nC,EAAA,KAAArsC,GAAA2gE,GAGA3gE,EAAAqsC,KAAA,SAAA1nC,GACA,MAAAC,WAAA7L,QAAAszC,EAAA1nC,EAAAg8D,EAAA,KAAA3gE,GAAAqsC,GAGArsC,EAAAQ,WAAA,SAAAmE,GACA,MAAAC,WAAA7L,QAAAyH,EAAA,kBAAAmE,KAAAo2E,IAAAp2E,GAAA3E,GAAAQ,GAGAR,EAAAS,SAAA,SAAAkE,GACA,MAAAC,WAAA7L,QAAA0H,EAAA,kBAAAkE,KAAAo2E,IAAAp2E,GAAA3E,GAAAS,GAGAT,EAAAO,SAAA,SAAAoE,GACA,MAAAC,WAAA7L,QAAAwH,EAAA,kBAAAoE,KAAAo2E,IAAAp2E,GAAA3E,GAAAO,GAGAP,GAGAk9E,GAAA9hC,GAAAihC,GAMAnhC,IAAAplD,WACAqmF,UAAA,WACA5lF,KAAA4kD,OAAAghC,aAEAC,QAAA,WACA7lF,KAAA4kD,OAAAihC,WAEAzxD,UAAA,WACAp0B,KAAA4kD,OAAAxwB,aAEAC,QAAA,WACAr0B,KAAA4kD,OAAAvwB,WAEA1J,MAAA,SAAA9qB,EAAAma,GACAha,KAAA4kD,OAAAj6B,MAAA3Q,EAAA/S,KAAAiU,IAAArb,GAAAma,GAAA/S,KAAAgU,IAAApb,KA4BA,IAAA+mF,IAAA,WACA,MAAA7hC,IAAAp8C,KAAAC,MAAA+9E,MAGAE,GAAA,WACA,GAAAhnF,GAAAomF,KAAAr9E,MAAA+9E,IACAxnF,EAAAU,EAAA+I,MACAynB,EAAAxwB,EAAAwmF,OACA91D,EAAA1wB,EAAA2mF,OACAl2D,EAAAzwB,EAAAymF,OACA91D,EAAA3wB,EAAA0mF,MAiBA,OAfA1mF,GAAA43B,MAAA53B,EAAAyG,QAAAzG,GAAAyG,EACAzG,EAAAoK,WAAApK,EAAAwwB,SAAAxwB,GAAAwwB,GACAxwB,EAAAqK,SAAArK,EAAA0wB,SAAA1wB,GAAA0wB,GACA1wB,EAAA0uB,OAAA1uB,EAAA6G,QAAA7G,GAAA6G,EACA7G,EAAAgK,YAAAhK,EAAAywB,SAAAzwB,GAAAywB,GACAzwB,EAAAiK,YAAAjK,EAAA2wB,SAAA3wB,GAAA2wB,GACA3wB,EAAAinF,eAAA;AAAiC,MAAA/hC,IAAA10B,YAA2BxwB,GAAAwmF,OAC5DxmF,EAAAknF,aAAA,WAA+B,MAAAhiC,IAAAx0B,YAA2B1wB,GAAA2mF,OAC1D3mF,EAAAmnF,gBAAA,WAAkC,MAAAjiC,IAAAz0B,YAA2BzwB,GAAAymF,OAC7DzmF,EAAAonF,gBAAA,WAAkC,MAAAliC,IAAAv0B,YAA2B3wB,GAAA0mF,OAE7D1mF,EAAA+I,MAAA,SAAAwF,GACA,MAAAC,WAAA7L,OAAArD,EAAA0lD,GAAAz2C,IAAAjP,IAAAylD,QAGA/kD,GAGAqnF,IACAC,KAAA,SAAA96E,EAAAu4B,GACA,GAAA5qB,GAAA/S,KAAAkV,KAAAyoB,EAAA8d,GACAr2C,GAAAg8D,OAAAruD,EAAA,GACA3N,EAAA3C,IAAA,IAAAsQ,EAAA,EAAA8qE,MAIAsC,IACAD,KAAA,SAAA96E,EAAAu4B,GACA,GAAA5qB,GAAA/S,KAAAkV,KAAAyoB,EAAA,IACAv4B,GAAAg8D,QAAA,EAAAruD,MACA3N,EAAAk8D,QAAAvuD,MACA3N,EAAAk8D,QAAAvuD,GAAA,EAAAA,GACA3N,EAAAk8D,OAAAvuD,GAAA,EAAAA,GACA3N,EAAAk8D,OAAAvuD,MACA3N,EAAAk8D,OAAA,EAAAvuD,MACA3N,EAAAk8D,OAAA,EAAAvuD,KACA3N,EAAAk8D,OAAAvuD,KACA3N,EAAAk8D,OAAAvuD,EAAA,EAAAA,GACA3N,EAAAk8D,QAAAvuD,EAAA,EAAAA,GACA3N,EAAAk8D,QAAAvuD,KACA3N,EAAAk8D,QAAA,EAAAvuD,KACA3N,EAAAi8D,cAIA+e,GAAApgF,KAAAkV,KAAA,KACAmrE,GAAA,EAAAD,GAEAE,IACAJ,KAAA,SAAA96E,EAAAu4B,GACA,GAAAl+B,GAAAO,KAAAkV,KAAAyoB,EAAA0iD,IACAhhF,EAAAI,EAAA2gF,EACAh7E,GAAAg8D,OAAA,GAAA3hE,GACA2F,EAAAk8D,OAAAjiE,EAAA,GACA+F,EAAAk8D,OAAA,EAAA7hE,GACA2F,EAAAk8D,QAAAjiE,EAAA,GACA+F,EAAAi8D,cAIAkf,GAAA,kBACAC,GAAAxgF,KAAAiU,IAAAwnC,GAAA,IAAAz7C,KAAAiU,IAAA,EAAAwnC,GAAA,IACAvZ,GAAAliC,KAAAiU,IAAA4pE,GAAA,IAAA2C,GACAr+C,IAAAniC,KAAAgU,IAAA6pE,GAAA,IAAA2C,GAEAC,IACAP,KAAA,SAAA96E,EAAAu4B,GACA,GAAA5qB,GAAA/S,KAAAkV,KAAAyoB,EAAA4iD,IACAlhF,EAAA6iC,GAAAnvB,EACAtT,EAAA0iC,GAAApvB,CACA3N,GAAAg8D,OAAA,GAAAruD,GACA3N,EAAAk8D,OAAAjiE,EAAAI,EACA,QAAArH,GAAA,EAAmBA,EAAA,IAAOA,EAAA,CAC1B,GAAAQ,GAAAilF,GAAAzlF,EAAA,EACAF,EAAA8H,KAAAgU,IAAApb,GACAya,EAAArT,KAAAiU,IAAArb,EACAwM,GAAAk8D,OAAAjuD,EAAAN,GAAA7a,EAAA6a,GACA3N,EAAAk8D,OAAAppE,EAAAmH,EAAAgU,EAAA5T,EAAA4T,EAAAhU,EAAAnH,EAAAuH,GAEA2F,EAAAi8D,cAIAqf,IACAR,KAAA,SAAA96E,EAAAu4B,GACA,GAAA3L,GAAAhyB,KAAAkV,KAAAyoB,GACAt+B,GAAA2yB,EAAA,CACA5sB,GAAA6mD,KAAA5sD,IAAA2yB,OAIA2uD,GAAA3gF,KAAAkV,KAAA,GAEA0rE,IACAV,KAAA,SAAA96E,EAAAu4B,GACA,GAAAl+B,IAAAO,KAAAkV,KAAAyoB,GAAA,EAAAgjD,IACAv7E,GAAAg8D,OAAA,IAAA3hE,GACA2F,EAAAk8D,QAAAqf,GAAAlhF,MACA2F,EAAAk8D,OAAAqf,GAAAlhF,MACA2F,EAAAi8D,cAIAnpE,IAAA,GACAmb,GAAArT,KAAAkV,KAAA,KACAzO,GAAA,EAAAzG,KAAAkV,KAAA,IACAtc,GAAA,GAAA6N,GAAA,KAEAo6E,IACAX,KAAA,SAAA96E,EAAAu4B,GACA,GAAA5qB,GAAA/S,KAAAkV,KAAAyoB,EAAA/kC,IACAwwB,EAAArW,EAAA,EACAsW,EAAAtW,EAAAtM,GACA6iB,EAAAF,EACAG,EAAAxW,EAAAtM,GAAAsM,EACAurB,GAAAhV,EACAiV,EAAAhV,CACAnkB,GAAAg8D,OAAAh4C,EAAAC,GACAjkB,EAAAk8D,OAAAh4C,EAAAC,GACAnkB,EAAAk8D,OAAAhjC,EAAAC,GACAn5B,EAAAk8D,OAAAppE,GAAAkxB,EAAA/V,GAAAgW,EAAAhW,GAAA+V,EAAAlxB,GAAAmxB,GACAjkB,EAAAk8D,OAAAppE,GAAAoxB,EAAAjW,GAAAkW,EAAAlW,GAAAiW,EAAApxB,GAAAqxB,GACAnkB,EAAAk8D,OAAAppE,GAAAomC,EAAAjrB,GAAAkrB,EAAAlrB,GAAAirB,EAAApmC,GAAAqmC,GACAn5B,EAAAk8D,OAAAppE,GAAAkxB,EAAA/V,GAAAgW,EAAAnxB,GAAAmxB,EAAAhW,GAAA+V,GACAhkB,EAAAk8D,OAAAppE,GAAAoxB,EAAAjW,GAAAkW,EAAArxB,GAAAqxB,EAAAlW,GAAAiW,GACAlkB,EAAAk8D,OAAAppE,GAAAomC,EAAAjrB,GAAAkrB,EAAArmC,GAAAqmC,EAAAlrB,GAAAirB,GACAl5B,EAAAi8D,cAIAyf,IACAb,GACAE,GACAG,GACAI,GACAD,GACAG,GACAC,IAGAv1D,GAAA,WAKA,QAAAA,KACA,GAAA82C,EAGA,IAFAh9D,MAAAg9D,EAAAl8D,MACAgC,EAAApP,MAAAC,KAAAqO,WAAA84E,KAAA96E,GAAAu4B,EAAA7kC,MAAAC,KAAAqO,YACAg7D,EAAA,MAAAh9D,GAAA,KAAAg9D,EAAA,SARA,GAAAl6D,GAAAq1E,GAAA0C,IACAtiD,EAAA4/C,GAAA,IACAn4E,EAAA,IAqBA,OAZAkmB,GAAApjB,KAAA,SAAAf,GACA,MAAAC,WAAA7L,QAAA2M,EAAA,kBAAAf,KAAAo2E,GAAAp2E,GAAAmkB,GAAApjB,GAGAojB,EAAAqS,KAAA,SAAAx2B,GACA,MAAAC,WAAA7L,QAAAoiC,EAAA,kBAAAx2B,KAAAo2E,IAAAp2E,GAAAmkB,GAAAqS,GAGArS,EAAAlmB,QAAA,SAAA+B,GACA,MAAAC,WAAA7L,QAAA6J,EAAA,MAAA+B,EAAA,KAAAA,EAAAmkB,GAAAlmB,GAGAkmB,GAGAy1D,GAAA,YAiBA9iC,IAAA3lD,WACAqmF,UAAA,WACA5lF,KAAA60E,MAAA,GAEAgR,QAAA,WACA7lF,KAAA60E,MAAA3hE,KAEAkhB,UAAA,WACAp0B,KAAAguB,IAAAhuB,KAAAkuB,IACAluB,KAAAiuB,IAAAjuB,KAAAmuB,IAAAjb,IACAlT,KAAA80E,OAAA,GAEAzgD,QAAA,WACA,OAAAr0B,KAAA80E,QACA,OAAA9vB,GAAAhlD,UAAAkuB,IAAAluB,KAAAmuB,IACA,QAAAnuB,KAAA6iC,SAAA0lC,OAAAvoE,KAAAkuB,IAAAluB,KAAAmuB,MAEAnuB,KAAA60E,OAAA,IAAA70E,KAAA60E,OAAA,IAAA70E,KAAA80E,SAAA90E,KAAA6iC,SAAAylC,YACAtoE,KAAA60E,MAAA,EAAA70E,KAAA60E,OAEAlqD,MAAA,SAAArkB,EAAAI,GAEA,OADAJ,KAAAI,KACA1G,KAAA80E,QACA,OAAA90E,KAAA80E,OAAA,EAA8B90E,KAAA60E,MAAA70E,KAAA6iC,SAAA0lC,OAAAjiE,EAAAI,GAAA1G,KAAA6iC,SAAAwlC,OAAA/hE,EAAAI,EAAsE,MACpG,QAAA1G,KAAA80E,OAAA,CAA8B,MAC9B,QAAA90E,KAAA80E,OAAA,EAA8B90E,KAAA6iC,SAAA0lC,QAAA,EAAAvoE,KAAAguB,IAAAhuB,KAAAkuB,KAAA,KAAAluB,KAAAiuB,IAAAjuB,KAAAmuB,KAAA,EAC9B,SAAA62B,GAAAhlD,KAAAsG,EAAAI,GAEA1G,KAAAguB,IAAAhuB,KAAAkuB,IAAAluB,KAAAkuB,IAAA5nB,EACAtG,KAAAiuB,IAAAjuB,KAAAmuB,IAAAnuB,KAAAmuB,IAAAznB,GAIA,IAAAuhF,IAAA,SAAA57E,GACA,UAAA64C,IAAA74C,GAOA84C,IAAA5lD,WACAqmF,UAAAoC,GACAnC,QAAAmC,GACA5zD,UAAA,WACAp0B,KAAAguB,IAAAhuB,KAAAkuB,IAAAluB,KAAA0lD,IAAA1lD,KAAAkoF,IAAAloF,KAAAmoF,IACAnoF,KAAAiuB,IAAAjuB,KAAAmuB,IAAAnuB,KAAA2lD,IAAA3lD,KAAAooF,IAAApoF,KAAAqoF,IAAAn1E,IACAlT,KAAA80E,OAAA,GAEAzgD,QAAA,WACA,OAAAr0B,KAAA80E,QACA,OACA90E,KAAA6iC,SAAAwlC,OAAAroE,KAAA0lD,IAAA1lD,KAAA2lD,KACA3lD,KAAA6iC,SAAAylC,WACA,MAEA,QACAtoE,KAAA6iC,SAAAwlC,QAAAroE,KAAA0lD,IAAA,EAAA1lD,KAAAkoF,KAAA,GAAAloF,KAAA2lD,IAAA,EAAA3lD,KAAAooF,KAAA,GACApoF,KAAA6iC,SAAA0lC,QAAAvoE,KAAAkoF,IAAA,EAAAloF,KAAA0lD,KAAA,GAAA1lD,KAAAooF,IAAA,EAAApoF,KAAA2lD,KAAA,GACA3lD,KAAA6iC,SAAAylC,WACA,MAEA,QACAtoE,KAAA2qB,MAAA3qB,KAAA0lD,IAAA1lD,KAAA2lD,KACA3lD,KAAA2qB,MAAA3qB,KAAAkoF,IAAAloF,KAAAooF,KACApoF,KAAA2qB,MAAA3qB,KAAAmoF,IAAAnoF,KAAAqoF,OAKA19D,MAAA,SAAArkB,EAAAI,GAEA,OADAJ,KAAAI,KACA1G,KAAA80E,QACA,OAAA90E,KAAA80E,OAAA,EAA8B90E,KAAA0lD,IAAAp/C,EAAAtG,KAAA2lD,IAAAj/C,CAA4B,MAC1D,QAAA1G,KAAA80E,OAAA,EAA8B90E,KAAAkoF,IAAA5hF,EAAAtG,KAAAooF,IAAA1hF,CAA4B,MAC1D,QAAA1G,KAAA80E,OAAA,EAA8B90E,KAAAmoF,IAAA7hF,EAAAtG,KAAAqoF,IAAA3hF,EAA4B1G,KAAA6iC,SAAAwlC,QAAAroE,KAAAguB,IAAA,EAAAhuB,KAAAkuB,IAAA5nB,GAAA,GAAAtG,KAAAiuB,IAAA,EAAAjuB,KAAAmuB,IAAAznB,GAAA,EAA4F,MACtJ,SAAAs+C,GAAAhlD,KAAAsG,EAAAI,GAEA1G,KAAAguB,IAAAhuB,KAAAkuB,IAAAluB,KAAAkuB,IAAA5nB,EACAtG,KAAAiuB,IAAAjuB,KAAAmuB,IAAAnuB,KAAAmuB,IAAAznB,GAIA,IAAA4hF,IAAA,SAAAj8E,GACA,UAAA84C,IAAA94C,GAOA+4C,IAAA7lD,WACAqmF,UAAA,WACA5lF,KAAA60E,MAAA,GAEAgR,QAAA,WACA7lF,KAAA60E,MAAA3hE,KAEAkhB,UAAA,WACAp0B,KAAAguB,IAAAhuB,KAAAkuB,IACAluB,KAAAiuB,IAAAjuB,KAAAmuB,IAAAjb,IACAlT,KAAA80E,OAAA,GAEAzgD,QAAA,YACAr0B,KAAA60E,OAAA,IAAA70E,KAAA60E,OAAA,IAAA70E,KAAA80E,SAAA90E,KAAA6iC,SAAAylC,YACAtoE,KAAA60E,MAAA,EAAA70E,KAAA60E,OAEAlqD,MAAA,SAAArkB,EAAAI,GAEA,OADAJ,KAAAI,KACA1G,KAAA80E,QACA,OAAA90E,KAAA80E,OAAA,CAA8B,MAC9B,QAAA90E,KAAA80E,OAAA,CAA8B,MAC9B,QAAA90E,KAAA80E,OAAA,CAA8B,IAAAzkD,IAAArwB,KAAAguB,IAAA,EAAAhuB,KAAAkuB,IAAA5nB,GAAA,EAAAgqB,GAAAtwB,KAAAiuB,IAAA,EAAAjuB,KAAAmuB,IAAAznB,GAAA,CAAoF1G,MAAA60E,MAAA70E,KAAA6iC,SAAA0lC,OAAAl4C,EAAAC,GAAAtwB,KAAA6iC,SAAAwlC,OAAAh4C,EAAAC,EAA0E,MAC5L,QAAAtwB,KAAA80E,OAAA,CACA,SAAA9vB,GAAAhlD,KAAAsG,EAAAI,GAEA1G,KAAAguB,IAAAhuB,KAAAkuB,IAAAluB,KAAAkuB,IAAA5nB,EACAtG,KAAAiuB,IAAAjuB,KAAAmuB,IAAAnuB,KAAAmuB,IAAAznB,GAIA,IAAA6hF,IAAA,SAAAl8E,GACA,UAAA+4C,IAAA/4C,GAQAg5C,IAAA9lD,WACA60B,UAAA,WACAp0B,KAAAywB,MACAzwB,KAAA0wB,MACA1wB,KAAAslD,OAAAlxB,aAEAC,QAAA,WACA,GAAA/tB,GAAAtG,KAAAywB,GACA/pB,EAAA1G,KAAA0wB,GACAnf,EAAAjL,EAAA9D,OAAA,CAEA,IAAA+O,EAAA,EAQA,IAPA,GAKA7C,GALA2hB,EAAA/pB,EAAA,GACAgqB,EAAA5pB,EAAA,GACA0R,EAAA9R,EAAAiL,GAAA8e,EACAhY,EAAA3R,EAAA6K,GAAA+e,EACAjxB,GAAA,IAGAA,GAAAkS,GACA7C,EAAArP,EAAAkS,EACAvR,KAAAslD,OAAA36B,MACA3qB,KAAAulD,MAAAj/C,EAAAjH,IAAA,EAAAW,KAAAulD,QAAAl1B,EAAA3hB,EAAA0J,GACApY,KAAAulD,MAAA7+C,EAAArH,IAAA,EAAAW,KAAAulD,QAAAj1B,EAAA5hB,EAAA2J,GAKArY,MAAAywB,GAAAzwB,KAAA0wB,GAAA,KACA1wB,KAAAslD,OAAAjxB,WAEA1J,MAAA,SAAArkB,EAAAI,GACA1G,KAAAywB,GAAA3uB,MAAAwE,GACAtG,KAAA0wB,GAAA5uB,MAAA4E,IAIA,IAAA8hF,IAAA,QAAA7iB,GAAAp1B,GAEA,QAAAi4C,GAAAn8E,GACA,WAAAkkC,EAAA,GAAA2U,IAAA74C,GAAA,GAAAg5C,IAAAh5C,EAAAkkC,GAOA,MAJAi4C,GAAAj4C,KAAA,SAAAA,GACA,MAAAo1B,IAAAp1B,IAGAi4C,GACC,IAkBD5iC,IAAArmD,WACAqmF,UAAA,WACA5lF,KAAA60E,MAAA,GAEAgR,QAAA,WACA7lF,KAAA60E,MAAA3hE,KAEAkhB,UAAA,WACAp0B,KAAAguB,IAAAhuB,KAAAkuB,IAAAluB,KAAA0lD,IACA1lD,KAAAiuB,IAAAjuB,KAAAmuB,IAAAnuB,KAAA2lD,IAAAzyC,IACAlT,KAAA80E,OAAA,GAEAzgD,QAAA,WACA,OAAAr0B,KAAA80E,QACA,OAAA90E,KAAA6iC,SAAA0lC,OAAAvoE,KAAA0lD,IAAA1lD,KAAA2lD,IAAuD,MACvD,QAAAH,GAAAxlD,UAAAkuB,IAAAluB,KAAAmuB,MAEAnuB,KAAA60E,OAAA,IAAA70E,KAAA60E,OAAA,IAAA70E,KAAA80E,SAAA90E,KAAA6iC,SAAAylC,YACAtoE,KAAA60E,MAAA,EAAA70E,KAAA60E,OAEAlqD,MAAA,SAAArkB,EAAAI,GAEA,OADAJ,KAAAI,KACA1G,KAAA80E,QACA,OAAA90E,KAAA80E,OAAA,EAA8B90E,KAAA60E,MAAA70E,KAAA6iC,SAAA0lC,OAAAjiE,EAAAI,GAAA1G,KAAA6iC,SAAAwlC,OAAA/hE,EAAAI,EAAsE,MACpG,QAAA1G,KAAA80E,OAAA,EAA8B90E,KAAAkuB,IAAA5nB,EAAAtG,KAAAmuB,IAAAznB,CAA4B,MAC1D,QAAA1G,KAAA80E,OAAA,CACA,SAAAtvB,GAAAxlD,KAAAsG,EAAAI,GAEA1G,KAAAguB,IAAAhuB,KAAAkuB,IAAAluB,KAAAkuB,IAAAluB,KAAA0lD,IAAA1lD,KAAA0lD,IAAAp/C,EACAtG,KAAAiuB,IAAAjuB,KAAAmuB,IAAAnuB,KAAAmuB,IAAAnuB,KAAA2lD,IAAA3lD,KAAA2lD,IAAAj/C,GAIA,IAAA+hF,IAAA,QAAA9iB,GAAA9f,GAEA,QAAA4iC,GAAAp8E,GACA,UAAAu5C,IAAAv5C,EAAAw5C,GAOA,MAJA4iC,GAAA5iC,QAAA,SAAAA,GACA,MAAA8f,IAAA9f,IAGA4iC,GACC,EAOD3iC,IAAAvmD,WACAqmF,UAAAoC,GACAnC,QAAAmC,GACA5zD,UAAA,WACAp0B,KAAAguB,IAAAhuB,KAAAkuB,IAAAluB,KAAA0lD,IAAA1lD,KAAAkoF,IAAAloF,KAAAmoF,IAAAnoF,KAAA0oF,IACA1oF,KAAAiuB,IAAAjuB,KAAAmuB,IAAAnuB,KAAA2lD,IAAA3lD,KAAAooF,IAAApoF,KAAAqoF,IAAAroF,KAAA2oF,IAAAz1E,IACAlT,KAAA80E,OAAA,GAEAzgD,QAAA,WACA,OAAAr0B,KAAA80E,QACA,OACA90E,KAAA6iC,SAAAwlC,OAAAroE,KAAAkoF,IAAAloF,KAAAooF,KACApoF,KAAA6iC,SAAAylC,WACA,MAEA,QACAtoE,KAAA6iC,SAAA0lC,OAAAvoE,KAAAkoF,IAAAloF,KAAAooF,KACApoF,KAAA6iC,SAAAylC,WACA,MAEA,QACAtoE,KAAA2qB,MAAA3qB,KAAAkoF,IAAAloF,KAAAooF,KACApoF,KAAA2qB,MAAA3qB,KAAAmoF,IAAAnoF,KAAAqoF,KACAroF,KAAA2qB,MAAA3qB,KAAA0oF,IAAA1oF,KAAA2oF,OAKAh+D,MAAA,SAAArkB,EAAAI,GAEA,OADAJ,KAAAI,KACA1G,KAAA80E,QACA,OAAA90E,KAAA80E,OAAA,EAA8B90E,KAAAkoF,IAAA5hF,EAAAtG,KAAAooF,IAAA1hF,CAA4B,MAC1D,QAAA1G,KAAA80E,OAAA,EAA8B90E,KAAA6iC,SAAAwlC,OAAAroE,KAAAmoF,IAAA7hF,EAAAtG,KAAAqoF,IAAA3hF,EAAkD,MAChF,QAAA1G,KAAA80E,OAAA,EAA8B90E,KAAA0oF,IAAApiF,EAAAtG,KAAA2oF,IAAAjiF,CAA4B,MAC1D,SAAA8+C,GAAAxlD,KAAAsG,EAAAI,GAEA1G,KAAAguB,IAAAhuB,KAAAkuB,IAAAluB,KAAAkuB,IAAAluB,KAAA0lD,IAAA1lD,KAAA0lD,IAAAp/C,EACAtG,KAAAiuB,IAAAjuB,KAAAmuB,IAAAnuB,KAAAmuB,IAAAnuB,KAAA2lD,IAAA3lD,KAAA2lD,IAAAj/C,GAIA,IAAAkiF,IAAA,QAAAjjB,GAAA9f,GAEA,QAAA4iC,GAAAp8E,GACA,UAAAy5C,IAAAz5C,EAAAw5C,GAOA,MAJA4iC,GAAA5iC,QAAA,SAAAA,GACA,MAAA8f,IAAA9f,IAGA4iC,GACC,EAOD1iC,IAAAxmD,WACAqmF,UAAA,WACA5lF,KAAA60E,MAAA,GAEAgR,QAAA,WACA7lF,KAAA60E,MAAA3hE,KAEAkhB,UAAA,WACAp0B,KAAAguB,IAAAhuB,KAAAkuB,IAAAluB,KAAA0lD,IACA1lD,KAAAiuB,IAAAjuB,KAAAmuB,IAAAnuB,KAAA2lD,IAAAzyC,IACAlT,KAAA80E,OAAA,GAEAzgD,QAAA,YACAr0B,KAAA60E,OAAA,IAAA70E,KAAA60E,OAAA,IAAA70E,KAAA80E,SAAA90E,KAAA6iC,SAAAylC,YACAtoE,KAAA60E,MAAA,EAAA70E,KAAA60E,OAEAlqD,MAAA,SAAArkB,EAAAI,GAEA,OADAJ,KAAAI,KACA1G,KAAA80E,QACA,OAAA90E,KAAA80E,OAAA,CAA8B,MAC9B,QAAA90E,KAAA80E,OAAA,CAA8B,MAC9B,QAAA90E,KAAA80E,OAAA,EAA8B90E,KAAA60E,MAAA70E,KAAA6iC,SAAA0lC,OAAAvoE,KAAA0lD,IAAA1lD,KAAA2lD,KAAA3lD,KAAA6iC,SAAAwlC,OAAAroE,KAAA0lD,IAAA1lD,KAAA2lD,IAAkG,MAChI,QAAA3lD,KAAA80E,OAAA,CACA,SAAAtvB,GAAAxlD,KAAAsG,EAAAI,GAEA1G,KAAAguB,IAAAhuB,KAAAkuB,IAAAluB,KAAAkuB,IAAAluB,KAAA0lD,IAAA1lD,KAAA0lD,IAAAp/C,EACAtG,KAAAiuB,IAAAjuB,KAAAmuB,IAAAnuB,KAAAmuB,IAAAnuB,KAAA2lD,IAAA3lD,KAAA2lD,IAAAj/C,GAIA,IAAAmiF,IAAA,QAAAljB,GAAA9f,GAEA,QAAA4iC,GAAAp8E,GACA,UAAA05C,IAAA15C,EAAAw5C,GAOA,MAJA4iC,GAAA5iC,QAAA,SAAAA,GACA,MAAA8f,IAAA9f,IAGA4iC,GACC,EA8BDjiC,IAAAjnD,WACAqmF,UAAA,WACA5lF,KAAA60E,MAAA,GAEAgR,QAAA,WACA7lF,KAAA60E,MAAA3hE,KAEAkhB,UAAA,WACAp0B,KAAAguB,IAAAhuB,KAAAkuB,IAAAluB,KAAA0lD,IACA1lD,KAAAiuB,IAAAjuB,KAAAmuB,IAAAnuB,KAAA2lD,IAAAzyC,IACAlT,KAAAimD,OAAAjmD,KAAAomD,OAAApmD,KAAAsmD,OACAtmD,KAAAmmD,QAAAnmD,KAAAqmD,QAAArmD,KAAAumD,QACAvmD,KAAA80E,OAAA,GAEAzgD,QAAA,WACA,OAAAr0B,KAAA80E,QACA,OAAA90E,KAAA6iC,SAAA0lC,OAAAvoE,KAAA0lD,IAAA1lD,KAAA2lD,IAAuD,MACvD,QAAA3lD,KAAA2qB,MAAA3qB,KAAA0lD,IAAA1lD,KAAA2lD,MAEA3lD,KAAA60E,OAAA,IAAA70E,KAAA60E,OAAA,IAAA70E,KAAA80E,SAAA90E,KAAA6iC,SAAAylC,YACAtoE,KAAA60E,MAAA,EAAA70E,KAAA60E,OAEAlqD,MAAA,SAAArkB,EAAAI,GAGA,GAFAJ,KAAAI,KAEA1G,KAAA80E,OAAA,CACA,GAAAgU,GAAA9oF,KAAA0lD,IAAAp/C,EACAyiF,EAAA/oF,KAAA2lD,IAAAj/C,CACA1G,MAAAsmD,OAAAr/C,KAAAkV,KAAAnc,KAAAumD,QAAAt/C,KAAAkE,IAAA29E,IAAAC,IAAA/oF,KAAAymD,SAGA,OAAAzmD,KAAA80E,QACA,OAAA90E,KAAA80E,OAAA,EAA8B90E,KAAA60E,MAAA70E,KAAA6iC,SAAA0lC,OAAAjiE,EAAAI,GAAA1G,KAAA6iC,SAAAwlC,OAAA/hE,EAAAI,EAAsE,MACpG,QAAA1G,KAAA80E,OAAA,CAA8B,MAC9B,QAAA90E,KAAA80E,OAAA,CACA,SAAA9uB,GAAAhmD,KAAAsG,EAAAI,GAGA1G,KAAAimD,OAAAjmD,KAAAomD,OAAApmD,KAAAomD,OAAApmD,KAAAsmD,OACAtmD,KAAAmmD,QAAAnmD,KAAAqmD,QAAArmD,KAAAqmD,QAAArmD,KAAAumD,QACAvmD,KAAAguB,IAAAhuB,KAAAkuB,IAAAluB,KAAAkuB,IAAAluB,KAAA0lD,IAAA1lD,KAAA0lD,IAAAp/C,EACAtG,KAAAiuB,IAAAjuB,KAAAmuB,IAAAnuB,KAAAmuB,IAAAnuB,KAAA2lD,IAAA3lD,KAAA2lD,IAAAj/C,GAIA,IAAAsiF,IAAA,QAAArjB,GAAAr1B,GAEA,QAAA04C,GAAA38E,GACA,MAAAikC,GAAA,GAAAkW,IAAAn6C,EAAAikC,GAAA,GAAAsV,IAAAv5C,EAAA,GAOA,MAJA28E,GAAA14C,MAAA,SAAAA,GACA,MAAAq1B,IAAAr1B,IAGA04C,GACC,GAODtiC,IAAAnnD,WACAqmF,UAAAoC,GACAnC,QAAAmC,GACA5zD,UAAA,WACAp0B,KAAAguB,IAAAhuB,KAAAkuB,IAAAluB,KAAA0lD,IAAA1lD,KAAAkoF,IAAAloF,KAAAmoF,IAAAnoF,KAAA0oF,IACA1oF,KAAAiuB,IAAAjuB,KAAAmuB,IAAAnuB,KAAA2lD,IAAA3lD,KAAAooF,IAAApoF,KAAAqoF,IAAAroF,KAAA2oF,IAAAz1E,IACAlT,KAAAimD,OAAAjmD,KAAAomD,OAAApmD,KAAAsmD,OACAtmD,KAAAmmD,QAAAnmD,KAAAqmD,QAAArmD,KAAAumD,QACAvmD,KAAA80E,OAAA,GAEAzgD,QAAA,WACA,OAAAr0B,KAAA80E,QACA,OACA90E,KAAA6iC,SAAAwlC,OAAAroE,KAAAkoF,IAAAloF,KAAAooF,KACApoF,KAAA6iC,SAAAylC,WACA,MAEA,QACAtoE,KAAA6iC,SAAA0lC,OAAAvoE,KAAAkoF,IAAAloF,KAAAooF,KACApoF,KAAA6iC,SAAAylC,WACA,MAEA,QACAtoE,KAAA2qB,MAAA3qB,KAAAkoF,IAAAloF,KAAAooF,KACApoF,KAAA2qB,MAAA3qB,KAAAmoF,IAAAnoF,KAAAqoF,KACAroF,KAAA2qB,MAAA3qB,KAAA0oF,IAAA1oF,KAAA2oF,OAKAh+D,MAAA,SAAArkB,EAAAI,GAGA,GAFAJ,KAAAI,KAEA1G,KAAA80E,OAAA,CACA,GAAAgU,GAAA9oF,KAAA0lD,IAAAp/C,EACAyiF,EAAA/oF,KAAA2lD,IAAAj/C,CACA1G,MAAAsmD,OAAAr/C,KAAAkV,KAAAnc,KAAAumD,QAAAt/C,KAAAkE,IAAA29E,IAAAC,IAAA/oF,KAAAymD,SAGA,OAAAzmD,KAAA80E,QACA,OAAA90E,KAAA80E,OAAA,EAA8B90E,KAAAkoF,IAAA5hF,EAAAtG,KAAAooF,IAAA1hF,CAA4B,MAC1D,QAAA1G,KAAA80E,OAAA,EAA8B90E,KAAA6iC,SAAAwlC,OAAAroE,KAAAmoF,IAAA7hF,EAAAtG,KAAAqoF,IAAA3hF,EAAkD,MAChF,QAAA1G,KAAA80E,OAAA,EAA8B90E,KAAA0oF,IAAApiF,EAAAtG,KAAA2oF,IAAAjiF,CAA4B,MAC1D,SAAAs/C,GAAAhmD,KAAAsG,EAAAI,GAGA1G,KAAAimD,OAAAjmD,KAAAomD,OAAApmD,KAAAomD,OAAApmD,KAAAsmD,OACAtmD,KAAAmmD,QAAAnmD,KAAAqmD,QAAArmD,KAAAqmD,QAAArmD,KAAAumD,QACAvmD,KAAAguB,IAAAhuB,KAAAkuB,IAAAluB,KAAAkuB,IAAAluB,KAAA0lD,IAAA1lD,KAAA0lD,IAAAp/C,EACAtG,KAAAiuB,IAAAjuB,KAAAmuB,IAAAnuB,KAAAmuB,IAAAnuB,KAAA2lD,IAAA3lD,KAAA2lD,IAAAj/C,GAIA,IAAAuiF,IAAA,QAAAtjB,GAAAr1B,GAEA,QAAA04C,GAAA38E,GACA,MAAAikC,GAAA,GAAAoW,IAAAr6C,EAAAikC,GAAA,GAAAwV,IAAAz5C,EAAA,GAOA,MAJA28E,GAAA14C,MAAA,SAAAA,GACA,MAAAq1B,IAAAr1B,IAGA04C,GACC,GAODriC,IAAApnD,WACAqmF,UAAA,WACA5lF,KAAA60E,MAAA,GAEAgR,QAAA,WACA7lF,KAAA60E,MAAA3hE,KAEAkhB,UAAA,WACAp0B,KAAAguB,IAAAhuB,KAAAkuB,IAAAluB,KAAA0lD,IACA1lD,KAAAiuB,IAAAjuB,KAAAmuB,IAAAnuB,KAAA2lD,IAAAzyC,IACAlT,KAAAimD,OAAAjmD,KAAAomD,OAAApmD,KAAAsmD,OACAtmD,KAAAmmD,QAAAnmD,KAAAqmD,QAAArmD,KAAAumD,QACAvmD,KAAA80E,OAAA,GAEAzgD,QAAA,YACAr0B,KAAA60E,OAAA,IAAA70E,KAAA60E,OAAA,IAAA70E,KAAA80E,SAAA90E,KAAA6iC,SAAAylC,YACAtoE,KAAA60E,MAAA,EAAA70E,KAAA60E,OAEAlqD,MAAA,SAAArkB,EAAAI,GAGA,GAFAJ,KAAAI,KAEA1G,KAAA80E,OAAA,CACA,GAAAgU,GAAA9oF,KAAA0lD,IAAAp/C,EACAyiF,EAAA/oF,KAAA2lD,IAAAj/C,CACA1G,MAAAsmD,OAAAr/C,KAAAkV,KAAAnc,KAAAumD,QAAAt/C,KAAAkE,IAAA29E,IAAAC,IAAA/oF,KAAAymD,SAGA,OAAAzmD,KAAA80E,QACA,OAAA90E,KAAA80E,OAAA,CAA8B,MAC9B,QAAA90E,KAAA80E,OAAA,CAA8B,MAC9B,QAAA90E,KAAA80E,OAAA,EAA8B90E,KAAA60E,MAAA70E,KAAA6iC,SAAA0lC,OAAAvoE,KAAA0lD,IAAA1lD,KAAA2lD,KAAA3lD,KAAA6iC,SAAAwlC,OAAAroE,KAAA0lD,IAAA1lD,KAAA2lD,IAAkG,MAChI,QAAA3lD,KAAA80E,OAAA,CACA,SAAA9uB,GAAAhmD,KAAAsG,EAAAI,GAGA1G,KAAAimD,OAAAjmD,KAAAomD,OAAApmD,KAAAomD,OAAApmD,KAAAsmD,OACAtmD,KAAAmmD,QAAAnmD,KAAAqmD,QAAArmD,KAAAqmD,QAAArmD,KAAAumD,QACAvmD,KAAAguB,IAAAhuB,KAAAkuB,IAAAluB,KAAAkuB,IAAAluB,KAAA0lD,IAAA1lD,KAAA0lD,IAAAp/C,EACAtG,KAAAiuB,IAAAjuB,KAAAmuB,IAAAnuB,KAAAmuB,IAAAnuB,KAAA2lD,IAAA3lD,KAAA2lD,IAAAj/C,GAIA,IAAAwiF,IAAA,QAAAvjB,GAAAr1B,GAEA,QAAA04C,GAAA38E,GACA,MAAAikC,GAAA,GAAAqW,IAAAt6C,EAAAikC,GAAA,GAAAyV,IAAA15C,EAAA,GAOA,MAJA28E,GAAA14C,MAAA,SAAAA,GACA,MAAAq1B,IAAAr1B,IAGA04C,GACC,GAMDpiC,IAAArnD,WACAqmF,UAAAoC,GACAnC,QAAAmC,GACA5zD,UAAA,WACAp0B,KAAA80E,OAAA,GAEAzgD,QAAA,WACAr0B,KAAA80E,QAAA90E,KAAA6iC,SAAAylC,aAEA39C,MAAA,SAAArkB,EAAAI,GACAJ,KAAAI,KACA1G,KAAA80E,OAAA90E,KAAA6iC,SAAA0lC,OAAAjiE,EAAAI,IACA1G,KAAA80E,OAAA,EAAA90E,KAAA6iC,SAAAwlC,OAAA/hE,EAAAI,KAIA,IAAAyiF,IAAA,SAAA98E,GACA,UAAAu6C,IAAAv6C,GA0CA86C,IAAA5nD,WACAqmF,UAAA,WACA5lF,KAAA60E,MAAA,GAEAgR,QAAA,WACA7lF,KAAA60E,MAAA3hE,KAEAkhB,UAAA,WACAp0B,KAAAguB,IAAAhuB,KAAAkuB,IACAluB,KAAAiuB,IAAAjuB,KAAAmuB,IACAnuB,KAAAopF,IAAAl2E,IACAlT,KAAA80E,OAAA,GAEAzgD,QAAA,WACA,OAAAr0B,KAAA80E,QACA,OAAA90E,KAAA6iC,SAAA0lC,OAAAvoE,KAAAkuB,IAAAluB,KAAAmuB,IAAuD,MACvD,QAAA+4B,GAAAlnD,UAAAopF,IAAAniC,GAAAjnD,UAAAopF,OAEAppF,KAAA60E,OAAA,IAAA70E,KAAA60E,OAAA,IAAA70E,KAAA80E,SAAA90E,KAAA6iC,SAAAylC,YACAtoE,KAAA60E,MAAA,EAAA70E,KAAA60E,OAEAlqD,MAAA,SAAArkB,EAAAI,GACA,GAAAoV,GAAA5I,GAGA,IADA5M,KAAAI,KACAJ,IAAAtG,KAAAkuB,KAAAxnB,IAAA1G,KAAAmuB,IAAA,CACA,OAAAnuB,KAAA80E,QACA,OAAA90E,KAAA80E,OAAA,EAA8B90E,KAAA60E,MAAA70E,KAAA6iC,SAAA0lC,OAAAjiE,EAAAI,GAAA1G,KAAA6iC,SAAAwlC,OAAA/hE,EAAAI,EAAsE,MACpG,QAAA1G,KAAA80E,OAAA,CAA8B,MAC9B,QAAA90E,KAAA80E,OAAA,EAA8B5tB,GAAAlnD,KAAAinD,GAAAjnD,KAAA8b,EAAAgrC,GAAA9mD,KAAAsG,EAAAI,IAAAoV,EAA0D,MACxF,SAAAorC,GAAAlnD,UAAAopF,IAAAttE,EAAAgrC,GAAA9mD,KAAAsG,EAAAI,IAGA1G,KAAAguB,IAAAhuB,KAAAkuB,IAAAluB,KAAAkuB,IAAA5nB,EACAtG,KAAAiuB,IAAAjuB,KAAAmuB,IAAAnuB,KAAAmuB,IAAAznB,EACA1G,KAAAopF,IAAAttE,MAQAsrC,GAAA7nD,UAAAD,OAAAuZ,OAAAsuC,GAAA5nD,YAAAorB,MAAA,SAAArkB,EAAAI,GACAygD,GAAA5nD,UAAAorB,MAAA1rB,KAAAe,KAAA0G,EAAAJ,IAOA+gD,GAAA9nD,WACA8oE,OAAA,SAAA/hE,EAAAI,GAA0B1G,KAAA6iC,SAAAwlC,OAAA3hE,EAAAJ,IAC1BgiE,UAAA,WAAyBtoE,KAAA6iC,SAAAylC,aACzBC,OAAA,SAAAjiE,EAAAI,GAA0B1G,KAAA6iC,SAAA0lC,OAAA7hE,EAAAJ,IAC1B2+C,cAAA,SAAA10B,EAAAC,EAAA+U,EAAAC,EAAAl/B,EAAAI,GAAiD1G,KAAA6iC,SAAAoiB,cAAAz0B,EAAAD,EAAAiV,EAAAD,EAAA7+B,EAAAJ,KAejDkhD,GAAAjoD,WACAqmF,UAAA,WACA5lF,KAAA60E,MAAA,GAEAgR,QAAA,WACA7lF,KAAA60E,MAAA3hE,KAEAkhB,UAAA,WACAp0B,KAAAywB,MACAzwB,KAAA0wB,OAEA2D,QAAA,WACA,GAAA/tB,GAAAtG,KAAAywB,GACA/pB,EAAA1G,KAAA0wB,GACA/hB,EAAArI,EAAA9D,MAEA,IAAAmM,EAEA,GADA3O,KAAA60E,MAAA70E,KAAA6iC,SAAA0lC,OAAAjiE,EAAA,GAAAI,EAAA,IAAA1G,KAAA6iC,SAAAwlC,OAAA/hE,EAAA,GAAAI,EAAA,IACA,IAAAiI,EACA3O,KAAA6iC,SAAA0lC,OAAAjiE,EAAA,GAAAI,EAAA,QAIA,QAFA2iF,GAAA5hC,GAAAnhD,GACAgjF,EAAA7hC,GAAA/gD,GACA8pC,EAAA,EAAAC,EAAA,EAAgCA,EAAA9hC,IAAQ6hC,IAAAC,EACxCzwC,KAAA6iC,SAAAoiB,cAAAokC,EAAA,GAAA74C,GAAA84C,EAAA,GAAA94C,GAAA64C,EAAA,GAAA74C,GAAA84C,EAAA,GAAA94C,GAAAlqC,EAAAmqC,GAAA/pC,EAAA+pC,KAKAzwC,KAAA60E,OAAA,IAAA70E,KAAA60E,OAAA,IAAAlmE,IAAA3O,KAAA6iC,SAAAylC,YACAtoE,KAAA60E,MAAA,EAAA70E,KAAA60E,MACA70E,KAAAywB,GAAAzwB,KAAA0wB,GAAA,MAEA/F,MAAA,SAAArkB,EAAAI,GACA1G,KAAAywB,GAAA3uB,MAAAwE,GACAtG,KAAA0wB,GAAA5uB,MAAA4E,IAuBA,IAAA6iF,IAAA,SAAAl9E,GACA,UAAAm7C,IAAAn7C,GAQAq7C,IAAAnoD,WACAqmF,UAAA,WACA5lF,KAAA60E,MAAA,GAEAgR,QAAA,WACA7lF,KAAA60E,MAAA3hE,KAEAkhB,UAAA,WACAp0B,KAAAywB,GAAAzwB,KAAA0wB,GAAAxd,IACAlT,KAAA80E,OAAA,GAEAzgD,QAAA,WACA,EAAAr0B,KAAA2nD,IAAA3nD,KAAA2nD,GAAA,OAAA3nD,KAAA80E,QAAA90E,KAAA6iC,SAAA0lC,OAAAvoE,KAAAywB,GAAAzwB,KAAA0wB,KACA1wB,KAAA60E,OAAA,IAAA70E,KAAA60E,OAAA,IAAA70E,KAAA80E,SAAA90E,KAAA6iC,SAAAylC,YACAtoE,KAAA60E,OAAA,IAAA70E,KAAA2nD,GAAA,EAAA3nD,KAAA2nD,GAAA3nD,KAAA60E,MAAA,EAAA70E,KAAA60E,QAEAlqD,MAAA,SAAArkB,EAAAI,GAEA,OADAJ,KAAAI,KACA1G,KAAA80E,QACA,OAAA90E,KAAA80E,OAAA,EAA8B90E,KAAA60E,MAAA70E,KAAA6iC,SAAA0lC,OAAAjiE,EAAAI,GAAA1G,KAAA6iC,SAAAwlC,OAAA/hE,EAAAI,EAAsE,MACpG,QAAA1G,KAAA80E,OAAA,CACA,SACA,GAAA90E,KAAA2nD,IAAA,EACA3nD,KAAA6iC,SAAA0lC,OAAAvoE,KAAAywB,GAAA/pB,GACA1G,KAAA6iC,SAAA0lC,OAAAjiE,EAAAI,OACS,CACT,GAAA6pB,GAAAvwB,KAAAywB,IAAA,EAAAzwB,KAAA2nD,IAAArhD,EAAAtG,KAAA2nD,EACA3nD,MAAA6iC,SAAA0lC,OAAAh4C,EAAAvwB,KAAA0wB,IACA1wB,KAAA6iC,SAAA0lC,OAAAh4C,EAAA7pB,IAKA1G,KAAAywB,GAAAnqB,EAAAtG,KAAA0wB,GAAAhqB,GAIA,IAAA60B,IAAA,SAAAlvB,GACA,UAAAq7C,IAAAr7C,EAAA,KAWAm9E,GAAAzjF,MAAAxG,UAAAI,MAEA8pF,GAAA,SAAAzhC,EAAA36C,GACA,IAAAsB,EAAAq5C,EAAAxlD,QAAA,EACA,OAAAqpB,GAAAld,EAAAtP,EAAA,EAAA0sB,EAAAi8B,EAAA36C,EAAA,IAAAnO,EAAA6sB,EAAAvpB,OAA8DnD,EAAAsP,IAAOtP,EAAA,CACrEwsB,EAAAE,IAAAi8B,EAAA36C,EAAAhO,GACA,QAAAkS,GAAA,EAAmBA,EAAArS,IAAOqS,EAC1Bwa,EAAAxa,GAAA,IAAAwa,EAAAxa,GAAA,GAAAgM,MAAAsO,EAAAta,GAAA,IAAAsa,EAAAta,GAAA,GAAAsa,EAAAta,GAAA,KAKAm4E,GAAA,SAAA1hC,GAEA,IADA,GAAAr5C,GAAAq5C,EAAAxlD,OAAA8O,EAAA,GAAAvL,OAAA4I,KACAA,GAAA,GAAA2C,EAAA3C,IACA,OAAA2C,IAOAq4E,GAAA,WAMA,QAAAA,GAAArlF,GACA,GACAjF,GAIAuqF,EALAC,EAAA7hF,EAAAjI,MAAAC,KAAAqO,WAEAnP,EAAAoF,EAAA9B,OACAmM,EAAAk7E,EAAArnF,OACAsnF,EAAA,GAAA/jF,OAAA4I,EAGA,KAAAtP,EAAA,EAAeA,EAAAsP,IAAOtP,EAAA,CACtB,OAAA0qF,GAAAC,EAAAH,EAAAxqF,GAAA4qF,EAAAH,EAAAzqF,GAAA,GAAA0G,OAAA7G,GAAAqS,EAAA,EAAiEA,EAAArS,IAAOqS,EACxE04E,EAAA14E,GAAAw4E,GAAA,GAAArnF,EAAA4B,EAAAiN,GAAAy4E,EAAAz4E,EAAAjN,IACAylF,EAAAzlF,OAAAiN,EAEA04E,GAAAvkF,IAAAskF,EAGA,IAAA3qF,EAAA,EAAAuqF,EAAAv8E,EAAAy8E,GAA+BzqF,EAAAsP,IAAOtP,EACtCyqF,EAAAF,EAAAvqF,IAAAkE,MAAAlE,CAIA,OADAyM,GAAAg+E,EAAAF,GACAE,EA1BA,GAAA9hF,GAAAw8E,OACAn3E,EAAAq8E,GACA59E,EAAA29E,GACA/mF,EAAAolD,EA0CA,OAhBA6hC,GAAA3hF,KAAA,SAAAoG,GACA,MAAAC,WAAA7L,QAAAwF,EAAA,kBAAAoG,KAAAo2E,GAAAgF,GAAAvqF,KAAAmP,IAAAu7E,GAAA3hF,GAGA2hF,EAAAjnF,MAAA,SAAA0L,GACA,MAAAC,WAAA7L,QAAAE,EAAA,kBAAA0L,KAAAo2E,IAAAp2E,GAAAu7E,GAAAjnF,GAGAinF,EAAAt8E,MAAA,SAAAe,GACA,MAAAC,WAAA7L,QAAA6K,EAAA,MAAAe,EAAAs7E,GAAA,kBAAAt7E,KAAAo2E,GAAAgF,GAAAvqF,KAAAmP,IAAAu7E,GAAAt8E,GAGAs8E,EAAA79E,OAAA,SAAAsC,GACA,MAAAC,WAAA7L,QAAAsJ,EAAA,MAAAsC,EAAAq7E,GAAAr7E,EAAAu7E,GAAA79E,GAGA69E,GAGAO,GAAA,SAAAliC,EAAA36C,GACA,IAAAsB,EAAAq5C,EAAAxlD,QAAA,GACA,OAAAnD,GAAAsP,EAAAjI,EAAA6K,EAAA,EAAArS,EAAA8oD,EAAA,GAAAxlD,OAAgD+O,EAAArS,IAAOqS,EAAA,CACvD,IAAA7K,EAAArH,EAAA,EAAmBA,EAAAsP,IAAOtP,EAAAqH,GAAAshD,EAAA3oD,GAAAkS,GAAA,KAC1B,IAAA7K,EAAA,IAAArH,EAAA,EAAsBA,EAAAsP,IAAOtP,EAAA2oD,EAAA3oD,GAAAkS,GAAA,IAAA7K,EAE7B+iF,GAAAzhC,EAAA36C,KAGA88E,GAAA,SAAAniC,EAAA36C,GACA,IAAAsB,EAAAq5C,EAAAxlD,QAAA,GACA,OAAAmM,GAAA4C,EAAA,EAAAsa,EAAAm8B,EAAA36C,EAAA,IAAAnO,EAAA2sB,EAAArpB,OAA0D+O,EAAArS,IAAOqS,EAAA,CACjE,OAAAlS,GAAA,EAAAqH,EAAA,EAA0BrH,EAAAsP,IAAOtP,EAAAqH,GAAAshD,EAAA3oD,GAAAkS,GAAA,KACjCsa,GAAAta,GAAA,IAAAsa,EAAAta,GAAA,IAAA7K,EAAA,EAEA+iF,GAAAzhC,EAAA36C,KAGA+8E,GAAA,SAAApiC,EAAA36C,GACA,IAAAsB,EAAAq5C,EAAAxlD,QAAA,IAAAtD,GAAA2sB,EAAAm8B,EAAA36C,EAAA,KAAA7K,QAAA,GACA,OAAAqpB,GAAA3sB,EAAAyP,EAAAjI,EAAA,EAAA6K,EAAA,EAAkCA,EAAArS,IAAOqS,EAAA,CACzC,OAAAlS,GAAA,EAAA0sB,EAAA,EAAAs+D,EAAA,EAAmChrF,EAAAsP,IAAOtP,EAAA,CAK1C,OAJA4qF,GAAAjiC,EAAA36C,EAAAhO,IACAirF,EAAAL,EAAA14E,GAAA,MACAg5E,EAAAN,EAAA14E,EAAA,SACAi5E,GAAAF,EAAAC,GAAA,EACA78E,EAAA,EAAqBA,EAAArO,IAAOqO,EAAA,CAC5B,GAAAmgC,GAAAma,EAAA36C,EAAAK,IACA+8E,EAAA58C,EAAAt8B,GAAA,MACAm5E,EAAA78C,EAAAt8B,EAAA,QACAi5E,IAAAC,EAAAC,EAEA3+D,GAAAu+D,EAAAD,GAAAG,EAAAF,EAEAz+D,EAAAta,EAAA,OAAAsa,EAAAta,EAAA,MAAA7K,EACAqlB,IAAArlB,GAAA2jF,EAAAt+D,GAEAF,EAAAta,EAAA,OAAAsa,EAAAta,EAAA,MAAA7K,EACA+iF,GAAAzhC,EAAA36C,KAGAs9E,GAAA,SAAA3iC,GACA,GAAA+zB,GAAA/zB,EAAA9/C,IAAA6/C,GACA,OAAA2hC,IAAA1hC,GAAAlS,KAAA,SAAAj2C,EAAAC,GAA6C,MAAAi8E,GAAAl8E,GAAAk8E,EAAAj8E,MAS7C8qF,GAAA,SAAA5iC,GACA,MAAA2iC,IAAA3iC,GAAA9nB,WAGA2qD,GAAA,SAAA7iC,GACA,GACA3oD,GACAkS,EAFA5C,EAAAq5C,EAAAxlD,OAGAu5E,EAAA/zB,EAAA9/C,IAAA6/C,IACA16C,EAAAq8E,GAAA1hC,GAAAlS,KAAA,SAAAj2C,EAAAC,GAAkD,MAAAi8E,GAAAj8E,GAAAi8E,EAAAl8E,KAClD0H,EAAA,EACAE,EAAA,EACAqjF,KACAC,IAEA,KAAA1rF,EAAA,EAAaA,EAAAsP,IAAOtP,EACpBkS,EAAAlE,EAAAhO,GACAkI,EAAAE,GACAF,GAAAw0E,EAAAxqE,GACAu5E,EAAAhpF,KAAAyP,KAEA9J,GAAAs0E,EAAAxqE,GACAw5E,EAAAjpF,KAAAyP,GAIA,OAAAw5E,GAAA7qD,UAAAjgC,OAAA6qF,IAGA5qD,GAAA,SAAA8nB,GACA,MAAA0hC,IAAA1hC,GAAA9nB,WAGA8qD,GAAA,SAAA1kF,GACA,kBACA,MAAAA,IAyBA6hD,IAAA5oD,WACA+B,YAAA6mD,GAEA16C,OAAA,SAAAw9E,EAAAhnF,GACA,GAAAmO,GAAA84E,EAAAC,CAEA,IAAAF,EAAA,CAKA,GAJAhnF,EAAAqkD,EAAA2iC,EACAhnF,EAAAynB,EAAAu/D,EAAAv/D,EACAu/D,EAAAv/D,IAAAu/D,EAAAv/D,EAAA48B,EAAArkD,GACAgnF,EAAAv/D,EAAAznB,EACAgnF,EAAA5iC,EAAA,CAEA,IADA4iC,IAAA5iC,EACA4iC,EAAA3/C,GAAA2/C,IAAA3/C,CACA2/C,GAAA3/C,EAAArnC,MAEAgnF,GAAA5iC,EAAApkD,CAEAmO,GAAA64E,MACKjrF,MAAAoO,GACL68E,EAAAxiC,GAAAzoD,KAAAoO,GACAnK,EAAAqkD,EAAA,KACArkD,EAAAynB,EAAAu/D,EACAA,EAAA3iC,EAAA2iC,EAAA3/C,EAAArnC,EACAmO,EAAA64E,IAEAhnF,EAAAqkD,EAAArkD,EAAAynB,EAAA,KACA1rB,KAAAoO,EAAAnK,EACAmO,EAAA,KAOA,KALAnO,EAAAqnC,EAAArnC,EAAAokD,EAAA,KACApkD,EAAA40C,EAAAzmC,EACAnO,EAAA2Y,GAAA,EAEAquE,EAAAhnF,EACAmO,KAAAwK,GACAsuE,EAAA94E,EAAAymC,EACAzmC,IAAA84E,EAAA5/C,GACA6/C,EAAAD,EAAA7iC,EACA8iC,KAAAvuE,GACAxK,EAAAwK,EAAAuuE,EAAAvuE,GAAA,EACAsuE,EAAAtuE,GAAA,EACAquE,EAAAC,IAEAD,IAAA74E,EAAAi2C,IACAE,GAAAvoD,KAAAoS,GACA64E,EAAA74E,EACAA,EAAA64E,EAAApyC,GAEAzmC,EAAAwK,GAAA,EACAsuE,EAAAtuE,GAAA,EACA4rC,GAAAxoD,KAAAkrF,MAGAC,EAAAD,EAAA5/C,EACA6/C,KAAAvuE,GACAxK,EAAAwK,EAAAuuE,EAAAvuE,GAAA,EACAsuE,EAAAtuE,GAAA,EACAquE,EAAAC,IAEAD,IAAA74E,EAAAk5B,IACAkd,GAAAxoD,KAAAoS,GACA64E,EAAA74E,EACAA,EAAA64E,EAAApyC,GAEAzmC,EAAAwK,GAAA,EACAsuE,EAAAtuE,GAAA,EACA2rC,GAAAvoD,KAAAkrF,KAGA94E,EAAA64E,EAAApyC,CAEA74C,MAAAoO,EAAAwO,GAAA,GAGA3O,OAAA,SAAAhK,GACAA,EAAAynB,IAAAznB,EAAAynB,EAAA48B,EAAArkD,EAAAqkD,GACArkD,EAAAqkD,IAAArkD,EAAAqkD,EAAA58B,EAAAznB,EAAAynB,GACAznB,EAAAynB,EAAAznB,EAAAqkD,EAAA,IAEA,IACA8iC,GAGAz6D,EACA8uC,EALArtD,EAAAnO,EAAA40C,EAEAnxC,EAAAzD,EAAAqnC,EACA9jC,EAAAvD,EAAAokD,CAsCA,IAhCA13B,EAFAjpB,EACAF,EACAihD,GAAAjhD,GADAE,EADAF,EAIA4K,EACAA,EAAAk5B,IAAArnC,EAAAmO,EAAAk5B,EAAA3a,EACAve,EAAAi2C,EAAA13B,EAEA3wB,KAAAoO,EAAAuiB,EAGAjpB,GAAAF,GACAi4D,EAAA9uC,EAAA/T,EACA+T,EAAA/T,EAAA3Y,EAAA2Y,EACA+T,EAAA2a,EAAA5jC,EACAA,EAAAmxC,EAAAloB,EACAA,IAAAnpB,GACA4K,EAAAue,EAAAkoB,EACAloB,EAAAkoB,EAAA50C,EAAA40C,EACA50C,EAAA0sB,EAAA03B,EACAj2C,EAAAk5B,EAAArnC,EACA0sB,EAAA03B,EAAA7gD,EACAA,EAAAqxC,EAAAloB,IAEAA,EAAAkoB,EAAAzmC,EACAA,EAAAue,EACA1sB,EAAA0sB,EAAA03B,KAGAoX,EAAAx7D,EAAA2Y,EACA3Y,EAAA0sB,GAGA1sB,MAAA40C,EAAAzmC,IACAqtD,EAAA,CACA,GAAAx7D,KAAA2Y,EAAyC,YAAhB3Y,EAAA2Y,GAAA,EAEzB,IACA,GAAA3Y,IAAAjE,KAAAoO,EAAA,KACA,IAAAnK,IAAAmO,EAAAk5B,GAQA,GAPA8/C,EAAAh5E,EAAAi2C,EACA+iC,EAAAxuE,IACAwuE,EAAAxuE,GAAA,EACAxK,EAAAwK,GAAA,EACA2rC,GAAAvoD,KAAAoS,GACAg5E,EAAAh5E,EAAAi2C,GAEA+iC,EAAA9/C,GAAA8/C,EAAA9/C,EAAA1uB,GACAwuE,EAAA/iC,GAAA+iC,EAAA/iC,EAAAzrC,EAAA,CACAwuE,EAAA/iC,GAAA+iC,EAAA/iC,EAAAzrC,IACAwuE,EAAA9/C,EAAA1uB,GAAA,EACAwuE,EAAAxuE,GAAA,EACA4rC,GAAAxoD,KAAAorF,GACAA,EAAAh5E,EAAAi2C,GAEA+iC,EAAAxuE,EAAAxK,EAAAwK,EACAxK,EAAAwK,EAAAwuE,EAAA/iC,EAAAzrC,GAAA,EACA2rC,GAAAvoD,KAAAoS,GACAnO,EAAAjE,KAAAoO,CACA,YAUA,IAPAg9E,EAAAh5E,EAAAk5B,EACA8/C,EAAAxuE,IACAwuE,EAAAxuE,GAAA,EACAxK,EAAAwK,GAAA,EACA4rC,GAAAxoD,KAAAoS,GACAg5E,EAAAh5E,EAAAk5B,GAEA8/C,EAAA9/C,GAAA8/C,EAAA9/C,EAAA1uB,GACAwuE,EAAA/iC,GAAA+iC,EAAA/iC,EAAAzrC,EAAA,CACAwuE,EAAA9/C,GAAA8/C,EAAA9/C,EAAA1uB,IACAwuE,EAAA/iC,EAAAzrC,GAAA,EACAwuE,EAAAxuE,GAAA,EACA2rC,GAAAvoD,KAAAorF,GACAA,EAAAh5E,EAAAk5B,GAEA8/C,EAAAxuE,EAAAxK,EAAAwK,EACAxK,EAAAwK,EAAAwuE,EAAA9/C,EAAA1uB,GAAA,EACA4rC,GAAAxoD,KAAAoS,GACAnO,EAAAjE,KAAAoO,CACA,OAGAg9E,EAAAxuE,GAAA,EACA3Y,EAAAmO,EACAA,IAAAymC,SACK50C,EAAA2Y,EAEL3Y,OAAA2Y,GAAA,KAkVA,IAEAqvC,IAwQAO,GACA1D,GACAnb,GACAib,GA7QAmD,MA4EAO,MA4LAxC,GAAA,KACA8B,GAAA,KA6DAoC,IAAAzuD,WACA+B,YAAA0sD,GAEAq9B,SAAA,WACA,GAAAziC,GAAA5oD,KAAA4oD,KAEA,OAAA5oD,MAAA8oD,MAAA5gD,IAAA,SAAAgiD,GACA,GAAAvtB,GAAAutB,EAAAnB,UAAA7gD,IAAA,SAAA7I,GAAoD,MAAAgrD,IAAAH,EAAAtB,EAAAvpD,KAEpD,OADAs9B,GAAAr4B,KAAA4lD,EAAAF,KAAA1lD,KACAq4B,KAIA2uD,UAAA,WACA,GAAAA,MACA1iC,EAAA5oD,KAAA4oD,KAsBA,OApBA5oD,MAAA8oD,MAAAl5B,QAAA,SAAAs6B,EAAA7qD,GACA,GAAAH,GAAA6pD,EAAAmB,EAAAnB,WAAAvmD,OASA,IARA,GACAumD,GAEA7pD,EACA2sB,EAJAm+B,EAAAE,EAAAF,KAEAz4C,GAAA,EAGAia,EAAAo9B,EAAAG,EAAA7pD,EAAA,IACA6sB,EAAAP,EAAA9jB,OAAAsiD,EAAAx+B,EAAAhkB,MAAAgkB,EAAA9jB,OAEA6J,EAAArS,GACA2sB,EAAAE,EACAP,EAAAo9B,EAAAG,EAAAx3C,IACAwa,EAAAP,EAAA9jB,OAAAsiD,EAAAx+B,EAAAhkB,MAAAgkB,EAAA9jB,KACAmkB,GAAAE,GAAA1sB,EAAAwsB,EAAAtoB,OAAAlE,EAAA0sB,EAAAxoB,OAAAuqD,GAAA9D,EAAAn+B,EAAAE,GAAA,GACAu/D,EAAAxpF,MAAAkoD,EAAA1lD,KAAAunB,EAAAvnB,KAAAynB,EAAAznB,SAKAgnF,GAGAld,MAAA,WACA,MAAApuE,MAAA4oD,MAAA5/C,OAAA,SAAA2/C,GACA,MAAAA,GAAAnhD,QACKU,IAAA,SAAAygD,GACL,OACA76B,OAAA66B,EAAAjhD,KAAApD,KACA2T,OAAA0wC,EAAAnhD,MAAAlD,SAKAotB,KAAA,SAAAprB,EAAAI,EAAA6nB,GAIA,IAHA,GAAAiiB,GAAA0Z,EAAAn4C,EAAA/R,KAAAywC,EAAA1+B,EAAAw5E,QAAA,EAAA58E,EAAAoD,EAAA+2C,MAAAtmD,SAGA0nD,EAAAn4C,EAAA+2C,MAAArY,KAAA,KAAAA,GAAA9hC,EAAA,WACA,IAAAyJ,GAAA9R,EAAA4jD,EAAAF,KAAA,GAAA3xC,EAAA3R,EAAAwjD,EAAAF,KAAA,GAAA3kB,EAAAjtB,IAAAC,GAGA,GACA6xC,GAAAn4C,EAAA+2C,MAAAtY,EAAAC,KAAA,KACAyZ,EAAAnB,UAAAn5B,QAAA,SAAA9Q,GACA,GAAA6pC,GAAA52C,EAAA62C,MAAA9pC,GAAAlL,EAAA+0C,EAAAjhD,IACA,IAAAkM,IAAAs2C,EAAAF,MAAAp2C,MAAA+0C,EAAAnhD,OAAA,CACA,GAAAgqB,GAAAlrB,EAAAsN,EAAA,GAAA6d,EAAA/qB,EAAAkN,EAAA,GAAAsJ,EAAAsU,IAAAC,GACAvU,GAAAmoB,MAAAnoB,EAAAuzB,EAAA78B,EAAArQ,gBAEK,OAAAktC,EAIL,OAFA1+B,GAAAw5E,OAAA/6C,EAEA,MAAAjiB,GAAA8W,GAAA9W,IAAA27B,EAAAF,KAAA,MAIA,IAAAwhC,IAAA,WAKA,QAAAA,GAAAlnF,GACA,UAAA0pD,IAAA1pD,EAAA4D,IAAA,SAAAY,EAAAzJ,GACA,GAAAib,IAAArT,KAAA+E,MAAAyjE,EAAA3mE,EAAAzJ,EAAAiF,GAAAwlD,OAAA7iD,KAAA+E,MAAA0jE,EAAA5mE,EAAAzJ,EAAAiF,GAAAwlD,OAGA,OAFAxvC,GAAA/W,MAAAlE,EACAib,EAAAhW,KAAAwE,EACAwR,IACK2O,GAVL,GAAAwmD,GAAAxnB,GACAynB,EAAAxnB,GACAj/B,EAAA,IAuCA,OA5BAuiE,GAAAH,SAAA,SAAA/mF,GACA,MAAAknF,GAAAlnF,GAAA+mF,YAGAG,EAAApd,MAAA,SAAA9pE,GACA,MAAAknF,GAAAlnF,GAAA8pE,SAGAod,EAAAF,UAAA,SAAAhnF,GACA,MAAAknF,GAAAlnF,GAAAgnF,aAGAE,EAAAllF,EAAA,SAAA8H,GACA,MAAAC,WAAA7L,QAAAitE,EAAA,kBAAArhE,KAAA48E,IAAA58E,GAAAo9E,GAAA/b,GAGA+b,EAAA9kF,EAAA,SAAA0H,GACA,MAAAC,WAAA7L,QAAAktE,EAAA,kBAAAthE,KAAA48E,IAAA58E,GAAAo9E,GAAA9b,GAGA8b,EAAAviE,OAAA,SAAA7a,GACA,MAAAC,WAAA7L,QAAAymB,EAAA,MAAA7a,EAAA,QAAAA,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,QAAAo9E,GAAAviE,OAAA,MAAAA,EAAA,QAAAA,EAAA,MAAAA,EAAA,SAGAuiE,EAAA5mD,KAAA,SAAAx2B,GACA,MAAAC,WAAA7L,QAAAymB,EAAA,MAAA7a,EAAA,cAAAA,EAAA,IAAAA,EAAA,KAAAo9E,GAAAviE,MAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAGAuiE,GAGAC,GAAA,SAAAnlF,GACA,kBACA,MAAAA,IAgBA6nD,IAAA5uD,WACA+B,YAAA6sD,GACAtiD,MAAA,SAAA6B,GACA,WAAAA,EAAA1N,KAAA,GAAAmuD,IAAAnuD,KAAA0N,IAAA1N,KAAAsG,EAAAtG,KAAA0G,IAEA2Y,UAAA,SAAA/Y,EAAAI,GACA,WAAAJ,EAAA,IAAAI,EAAA1G,KAAA,GAAAmuD,IAAAnuD,KAAA0N,EAAA1N,KAAAsG,EAAAtG,KAAA0N,EAAApH,EAAAtG,KAAA0G,EAAA1G,KAAA0N,EAAAhH,IAEA3G,MAAA,SAAA4qB,GACA,OAAAA,EAAA,GAAA3qB,KAAA0N,EAAA1N,KAAAsG,EAAAqkB,EAAA,GAAA3qB,KAAA0N,EAAA1N,KAAA0G,IAEAglF,OAAA,SAAAplF,GACA,MAAAA,GAAAtG,KAAA0N,EAAA1N,KAAAsG,GAEAqlF,OAAA,SAAAjlF,GACA,MAAAA,GAAA1G,KAAA0N,EAAA1N,KAAA0G,GAEAo0B,OAAA,SAAA8wD,GACA,QAAAA,EAAA,GAAA5rF,KAAAsG,GAAAtG,KAAA0N,GAAAk+E,EAAA,GAAA5rF,KAAA0G,GAAA1G,KAAA0N,IAEAm+E,QAAA,SAAAvlF,GACA,OAAAA,EAAAtG,KAAAsG,GAAAtG,KAAA0N,GAEAo+E,QAAA,SAAAplF,GACA,OAAAA,EAAA1G,KAAA0G,GAAA1G,KAAA0N,GAEAq+E,SAAA,SAAAzlF,GACA,MAAAA,GAAA2G,OAAAlF,OAAAzB,EAAA2B,QAAAC,IAAAlI,KAAA6rF,QAAA7rF,MAAAkI,IAAA5B,EAAAw0B,OAAAx0B,KAEA0lF,SAAA,SAAAtlF,GACA,MAAAA,GAAAuG,OAAAlF,OAAArB,EAAAuB,QAAAC,IAAAlI,KAAA8rF,QAAA9rF,MAAAkI,IAAAxB,EAAAo0B,OAAAp0B,KAEA2J,SAAA,WACA,mBAAArQ,KAAAsG,EAAA,IAAAtG,KAAA0G,EAAA,WAAA1G,KAAA0N,EAAA,KAIA,IAAA4gD,IAAA,GAAAH,IAAA,MAEAC,IAAA7uD,UAAA4uD,GAAA5uD,SAUA,IAAA0sF,IAAA,WACAptF,EAAA6R,MAAAkmD,iBACA/3D,EAAA6R,MAAA8G,4BAyBA00E,GAAA,WAkBA,QAAAA,GAAAt0E,GACAA,EACAxG,GAAA,aAAA+6E,GACA/6E,GAAA,iBAAA2lD,GACA3lD,GAAA,gBAAAg7E,GACAh7E,GAAA,kBAAA4lD,GACA5lD,GAAA,iBAAA6lD,GACA7lD,GAAA,iCAAA8lD,GACA7xD,MAAA,+CACAukB,SAAA,SAAAilC,IA8CA,QAAAhjD,GAAAiC,EAAAJ,GAEA,MADAA,GAAAzG,KAAAgE,IAAAohF,EAAAplF,KAAAG,IAAAklF,EAAA5+E,IACAA,IAAAI,EAAAJ,EAAAI,EAAA,GAAAqgD,IAAAzgD,EAAAI,EAAAxH,EAAAwH,EAAApH,GAGA,QAAA2Y,GAAAvR,EAAAgpB,EAAA4U,GACA,GAAAplC,GAAAwwB,EAAA,GAAA4U,EAAA,GAAA59B,EAAAJ,EAAAhH,EAAAowB,EAAA,GAAA4U,EAAA,GAAA59B,EAAAJ,CACA,OAAApH,KAAAwH,EAAAxH,GAAAI,IAAAoH,EAAApH,EAAAoH,EAAA,GAAAqgD,IAAArgD,EAAAJ,EAAApH,EAAAI,GAGA,QAAA6lF,GAAAz+E,EAAAmb,GACA,GAAAm7B,GAAAt2C,EAAA+9E,QAAA5iE,EAAA,OAAAoH,EACAi0B,EAAAx2C,EAAA+9E,QAAA5iE,EAAA,OAAAsH,EACA8zB,EAAAv2C,EAAAg+E,QAAA7iE,EAAA,OAAAqH,EACAi0B,EAAAz2C,EAAAg+E,QAAA7iE,EAAA,OAAAuH,CACA,OAAA1iB,GAAAuR,UACAilC,EAAAF,KAAAE,GAAA,EAAAr9C,KAAAG,IAAA,EAAAg9C,IAAAn9C,KAAAgE,IAAA,EAAAq5C,GACAC,EAAAF,KAAAE,GAAA,EAAAt9C,KAAAG,IAAA,EAAAi9C,IAAAp9C,KAAAgE,IAAA,EAAAs5C,IAIA,QAAAgvB,GAAAtqD,GACA,SAAAA,EAAA,QAAAA,EAAA,WAAAA,EAAA,QAAAA,EAAA,UAGA,QAAAzG,GAAAgqE,EAAA1+E,EAAAlC,GACA4gF,EACAp7E,GAAA,wBAAsC+lD,EAAAn3D,KAAAqO,WAAAzD,UACtCwG,GAAA,qCAAmD+lD,EAAAn3D,KAAAqO,WAAAkS,QACnD+C,MAAA,kBACA,GAAAvR,GAAA/R,KACAN,EAAA2O,UACA4L,EAAAk9C,EAAAplD,EAAArS,GACAof,EAAAmK,EAAAlpB,MAAAgS,EAAArS,GACAN,EAAAwM,GAAA2nE,EAAAz0D,GACAma,EAAAhyB,KAAAgE,IAAA6T,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACAjf,EAAAkS,EAAAs8C,OACAvuD,EAAA,kBAAAgO,KAAA/N,MAAAgS,EAAArS,GAAAoO,EACAzO,EAAA+kB,EAAAvkB,EAAAi7B,OAAA17B,GAAAa,OAAAg5B,EAAAp5B,EAAA6N,GAAA5N,EAAAg7B,OAAA17B,GAAAa,OAAAg5B,EAAAn5B,EAAA4N,GACA,iBAAAgB,GACA,OAAAA,IAAA5O,MACA,CAAkB,GAAAya,GAAAlb,EAAAqP,GAAAhB,EAAAurB,EAAA1e,EAAA,EAA4B7L,GAAA,GAAAy/C,IAAAzgD,EAAAtO,EAAA,GAAAmb,EAAA,GAAA7M,EAAAtO,EAAA,GAAAmb,EAAA,GAAA7M,GAC9CuM,EAAAiyE,KAAA,KAAAx9E,MAKA,QAAAyoD,GAAAplD,EAAArS,GACA,OAAAua,GAAA5a,EAAA,EAAAsP,EAAA6oD,EAAAh1D,OAA2CnD,EAAAsP,IAAOtP,EAClD,IAAA4a,EAAAu9C,EAAAn4D,IAAA0S,SACA,MAAAkI,EAGA,WAAAwyE,GAAA16E,EAAArS,GAGA,QAAA+sF,GAAA16E,EAAArS,GACAM,KAAA+R,OACA/R,KAAAN,OACAM,KAAAuD,OAAA,EACAvD,KAAAmY,OAAA,EACAnY,KAAAipB,SAAAlpB,MAAAgS,EAAArS,GAgCA,QAAAysF,KA8BA,QAAAO,KACAzyE,EAAA0yE,MAAA,KACA1yE,EAAAsG,MA/BA,GAAAvX,EAAAjJ,MAAAC,KAAAqO,WAAA,CACA,GAAA4L,GAAAk9C,EAAAn3D,KAAAqO,WACAK,EAAA1O,KAAAquD,OACA3gD,EAAAzG,KAAAgE,IAAAohF,EAAAplF,KAAAG,IAAAklF,EAAA59E,EAAAhB,EAAAzG,KAAAkE,IAAA,GAAAtM,EAAA6R,MAAAk8E,QAAA/tF,EAAA6R,MAAAm8E,UAAA,cACAztF,EAAAmrB,GAAAvqB,KAIA,IAAAia,EAAA0yE,MACA1yE,EAAAsQ,MAAA,QAAAnrB,EAAA,IAAA6a,EAAAsQ,MAAA,QAAAnrB,EAAA,KACA6a,EAAAsQ,MAAA,GAAA7b,EAAAosB,OAAA7gB,EAAAsQ,MAAA,GAAAnrB,IAEAqF,aAAAwV,EAAA0yE,WAIA,IAAAj+E,EAAAhB,MAAA,MAIAuM,GAAAsQ,OAAAnrB,EAAAsP,EAAAosB,OAAA17B,IACA+tB,GAAAntB,MACAia,EAAArP,QAGAqhF,KACAhyE,EAAA0yE,MAAA9nF,WAAA6nF,EAAAI,GACA7yE,EAAAiyE,KAAA,QAAAK,EAAAltE,EAAAxT,EAAA6C,EAAAhB,GAAAuM,EAAAsQ,MAAA,GAAAtQ,EAAAsQ,MAAA,IAAAtQ,EAAAgP,UAQA,QAAA8tC,KAYA,QAAAM,KACA40B,KACAhyE,EAAAoQ,OAAA,EACApQ,EAAAiyE,KAAA,QAAAK,EAAAltE,EAAApF,EAAAlI,KAAAs8C,OAAAp0C,EAAAsQ,MAAA,GAAAA,GAAAtQ,EAAAlI,MAAAkI,EAAAsQ,MAAA,IAAAtQ,EAAAgP,SAGA,QAAAquC,KACA1jD,EAAAxC,GAAA,oCACAqG,GAAA5Y,EAAA6R,MAAAgH,KAAAuC,EAAAoQ,OACA4hE,KACAhyE,EAAAsG,MArBA,IAAAgM,GAAAvjB,EAAAjJ,MAAAC,KAAAqO,WAAA,CACA,GAAA4L,GAAAk9C,EAAAn3D,KAAAqO,WACAuF,EAAAvL,GAAAxJ,EAAA6R,MAAAgH,MAAAtG,GAAA,iBAAAimD,GAAA,GAAAjmD,GAAA,eAAAkmD,GAAA,GACAl4D,EAAAmrB,GAAAvqB,KAEAktB,IAAAruB,EAAA6R,MAAAgH,MACA62C,KACAt0C,EAAAsQ,OAAAnrB,EAAAY,KAAAquD,OAAAvzB,OAAA17B,IACA+tB,GAAAntB,MACAia,EAAArP,SAgBA,QAAAwhF,KACA,GAAApjF,EAAAjJ,MAAAC,KAAAqO,WAAA,CACA,GAAAuN,GAAA5b,KAAAquD,OACAv3B,EAAAvM,GAAAvqB,MACA0rC,EAAA9vB,EAAAkf,OAAAhE,GACAw1D,EAAA1wE,EAAAlO,GAAA7O,EAAA6R,MAAAsc,SAAA,MACAlR,EAAAywE,EAAAltE,EAAAxT,EAAA+P,EAAA0wE,GAAAx1D,EAAA4U,GAAAziB,EAAAlpB,MAAAC,KAAAqO,WAEA49E,MACA1oE,EAAA,EAAAlb,GAAArI,MAAA2N,aAAA4V,YAAAtkB,KAAAujB,EAAA1G,EAAAgb,GACAzuB,GAAArI,MAAAf,KAAAitF,EAAAp+E,UAAAgO,IAGA,QAAAk7C,KACA,GAAAhuD,EAAAjJ,MAAAC,KAAAqO,WAAA,CACA,GAEA4b,GACA5qB,EAAAqP,EAAAtP,EAHA6a,EAAAk9C,EAAAn3D,KAAAqO,WACAopD,EAAA54D,EAAA6R,MAAAkc,eAEAje,EAAA8oD,EAAAj1D,MAGA,KADA+rD,KACAlvD,EAAA,EAAeA,EAAAsP,IAAOtP,EACtBqP,EAAA+oD,EAAAp4D,GAAAD,EAAAu3D,GAAA32D,KAAAy3D,EAAA/oD,EAAA4J,YACAlZ,KAAAY,KAAAquD,OAAAvzB,OAAA17B,GAAAsP,EAAA4J,YACA2B,EAAA8yE,OACA9yE,EAAA+yE,SAAA/yE,EAAA+yE,OAAA5tF,IADA6a,EAAA8yE,OAAA3tF,EAAA6qB,GAAA,EAKA,OAAAgjE,KACAA,EAAAxoF,aAAAwoF,IACAhzE,EAAA+yE,SACA/yE,EAAAsG,MACAnhB,EAAAiJ,GAAArI,MAAAoR,GAAA,sBACAhS,KAAAW,MAAAC,KAAAqO,kBAKA4b,IACAgjE,EAAApoF,WAAA,WAA6CooF,EAAA,MAAwBC,GACrE//D,GAAAntB,MACAia,EAAArP,WAIA,QAAAqsD,KACA,GAEA53D,GAAAqP,EAAAtP,EAAAmb,EAFAN,EAAAk9C,EAAAn3D,KAAAqO,WACAopD,EAAA54D,EAAA6R,MAAAkc,eACAje,EAAA8oD,EAAAj1D,MAIA,KAFAypF,KACAgB,MAAAxoF,aAAAwoF,IACA5tF,EAAA,EAAeA,EAAAsP,IAAOtP,EACtBqP,EAAA+oD,EAAAp4D,GAAAD,EAAAu3D,GAAA32D,KAAAy3D,EAAA/oD,EAAA4J,YACA2B,EAAA8yE,QAAA9yE,EAAA8yE,OAAA,KAAAr+E,EAAA4J,WAAA2B,EAAA8yE,OAAA,GAAA3tF,EACA6a,EAAA+yE,QAAA/yE,EAAA+yE,OAAA,KAAAt+E,EAAA4J,aAAA2B,EAAA+yE,OAAA,GAAA5tF,EAGA,IADAsP,EAAAuL,EAAAlI,KAAAs8C,OACAp0C,EAAA+yE,OAAA,CACA,GAAAl2D,GAAA7c,EAAA8yE,OAAA,GAAAphD,EAAA1xB,EAAA8yE,OAAA,GACArhD,EAAAzxB,EAAA+yE,OAAA,GAAAphD,EAAA3xB,EAAA+yE,OAAA,GACAG,KAAAzhD,EAAA,GAAA5U,EAAA,IAAAq2D,KAAAzhD,EAAA,GAAA5U,EAAA,IAAAq2D,EACAC,KAAAxhD,EAAA,GAAAD,EAAA,IAAAyhD,KAAAxhD,EAAA,GAAAD,EAAA,IAAAyhD,CACA1+E,GAAA7C,EAAA6C,EAAAzH,KAAAkV,KAAAgxE,EAAAC,IACAhuF,IAAA03B,EAAA,GAAA4U,EAAA,OAAA5U,EAAA,GAAA4U,EAAA,OACAnxB,IAAAoxB,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,WAEA,KAAA3xB,EAAA8yE,OACA,MADA3tF,GAAA6a,EAAA8yE,OAAA,GAAAxyE,EAAAN,EAAA8yE,OAAA,GAEA9yE,EAAAiyE,KAAA,QAAAK,EAAAltE,EAAA3Q,EAAAtP,EAAAmb,GAAAN,EAAAgP,SAGA,QAAAiuC,KACA,GAEA73D,GAAAqP,EAFAuL,EAAAk9C,EAAAn3D,KAAAqO,WACAopD,EAAA54D,EAAA6R,MAAAkc,eACAje,EAAA8oD,EAAAj1D,MAKA,KAHA+rD,KACAhiC,GAAA9nB,aAAA8nB,GACAA,EAAA1nB,WAAA,WAAyC0nB,EAAA,MAAsB2gE,GAC/D7tF,EAAA,EAAeA,EAAAsP,IAAOtP,EACtBqP,EAAA+oD,EAAAp4D,GACA4a,EAAA8yE,QAAA9yE,EAAA8yE,OAAA,KAAAr+E,EAAA4J,iBAAA2B,GAAA8yE,OACA9yE,EAAA+yE,QAAA/yE,EAAA+yE,OAAA,KAAAt+E,EAAA4J,kBAAA2B,GAAA+yE,MAEA/yE,GAAA+yE,SAAA/yE,EAAA8yE,SAAA9yE,EAAA8yE,OAAA9yE,EAAA+yE,aAAA/yE,GAAA+yE,QACA/yE,EAAA8yE,QAAA9yE,EAAAsG,MA1TA,GAYA0sE,GACA1gE,EAbAvjB,EAAAwlD,GACAvlC,EAAAwlC,GACA49B,EAAA,EACAC,EAAAnqE,IACAkO,GAAAi8D,EACA/7D,EAAA+7D,EACAh8D,EAAAD,EACAG,EAAAD,EACAhN,EAAA,IACAa,EAAA2+C,GACAvL,KACApqC,EAAA3e,EAAA,sBAGAy+E,EAAA,IACAJ,EAAA,GA2UA,OA7TAZ,GAAAp+E,UAAA,SAAAu/E,EAAAv/E,GACA,GAAA8J,GAAAy1E,EAAAngF,UAAAmgF,EAAAngF,YAAAmgF,CACAz1E,GAAAgS,SAAA,SAAAilC,IACAw+B,IAAAz1E,EACA4K,EAAA6qE,EAAAv/E,GAEA8J,EAAAuV,YAAAhf,KAAA,WACAgpD,EAAAn3D,KAAAqO,WACAzD,QACAshF,KAAA,uBAAAp+E,KAAA/N,MAAAC,KAAAqO,WAAAP,GACAyS,SAKA2rE,EAAAoB,QAAA,SAAA11E,EAAAlK,GACAw+E,EAAAqB,QAAA31E,EAAA,WACA,GAAAy0E,GAAArsF,KAAAquD,OAAA3gD,EACA4+E,EAAA,kBAAA5+E,KAAA3N,MAAAC,KAAAqO,WAAAX,CACA,OAAA2+E,GAAAC,KAIAJ,EAAAqB,QAAA,SAAA31E,EAAAlK,GACAw+E,EAAAp+E,UAAA8J,EAAA,WACA,GAAAkH,GAAAmK,EAAAlpB,MAAAC,KAAAqO,WACAuN,EAAA5b,KAAAquD,OACAv3B,EAAAy8C,EAAAz0D,GACA4sB,EAAA9vB,EAAAkf,OAAAhE,GACAw1D,EAAA,kBAAA5+E,KAAA3N,MAAAC,KAAAqO,WAAAX,CACA,OAAA6+E,GAAAltE,EAAAxT,EAAA+P,EAAA0wE,GAAAx1D,EAAA4U,GAAA5sB,MAIAotE,EAAAsB,YAAA,SAAA51E,EAAAtR,EAAAI,GACAwlF,EAAAp+E,UAAA8J,EAAA,WACA,MAAA20E,GAAAvsF,KAAAquD,OAAAhvC,UACA,kBAAA/Y,KAAAvG,MAAAC,KAAAqO,WAAA/H,EACA,kBAAAI,KAAA3G,MAAAC,KAAAqO,WAAA3H,GACAuiB,EAAAlpB,MAAAC,KAAAqO,eAoEAo+E,EAAAltF,WACAqL,MAAA,WAKA,MAJA,OAAA5K,KAAAmY,SACAnY,KAAAuD,MAAAi0D,EAAA11D,KAAA9B,MAAA,EACAA,KAAAosB,KAAA,UAEApsB,MAEAksF,KAAA,SAAAxmF,EAAAoI,GAMA,MALA9N,MAAAuqB,OAAA,UAAA7kB,IAAA1F,KAAAuqB,MAAA,GAAAzc,EAAAgtB,OAAA96B,KAAAuqB,MAAA,KACAvqB,KAAA+sF,QAAA,UAAArnF,IAAA1F,KAAA+sF,OAAA,GAAAj/E,EAAAgtB,OAAA96B,KAAA+sF,OAAA,KACA/sF,KAAAgtF,QAAA,UAAAtnF,IAAA1F,KAAAgtF,OAAA,GAAAl/E,EAAAgtB,OAAA96B,KAAAgtF,OAAA,KACAhtF,KAAA+R,KAAAs8C,OAAAvgD,EACA9N,KAAAosB,KAAA,QACApsB,MAEAugB,IAAA,WAMA,MALA,OAAAvgB,KAAAmY,SACAq/C,EAAA3zC,OAAA7jB,KAAAuD,MAAA,GACAvD,KAAAuD,OAAA,EACAvD,KAAAosB,KAAA,QAEApsB,MAEAosB,KAAA,SAAAjd,GACA2C,EAAA,GAAAo8C,IAAAg+B,EAAA/8E,EAAAnP,KAAA+R,KAAAs8C,QAAAjhC,EAAArtB,MAAAqtB,GAAAje,EAAAnP,KAAA+R,KAAA/R,KAAAN,SA4JAwsF,EAAAljF,OAAA,SAAAoF,GACA,MAAAC,WAAA7L,QAAAwG,EAAA,kBAAAoF,KAAAq9E,KAAAr9E,GAAA89E,GAAAljF,GAGAkjF,EAAAjjE,OAAA,SAAA7a,GACA,MAAAC,WAAA7L,QAAAymB,EAAA,kBAAA7a,KAAAq9E,MAAAr9E,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,SAAA89E,GAAAjjE,GAGAijE,EAAAuB,YAAA,SAAAr/E,GACA,MAAAC,WAAA7L,QAAA6pF,GAAAj+E,EAAA,GAAAk+E,GAAAl+E,EAAA,GAAA89E,IAAAG,EAAAC,IAGAJ,EAAAwB,gBAAA,SAAAt/E,GACA,MAAAC,WAAA7L,QAAA6tB,GAAAjiB,EAAA,MAAAmiB,GAAAniB,EAAA,MAAAkiB,GAAAliB,EAAA,MAAAoiB,GAAApiB,EAAA,MAAA89E,KAAA77D,EAAAC,IAAAC,EAAAC,KAGA07D,EAAA3oE,SAAA,SAAAnV,GACA,MAAAC,WAAA7L,QAAA+gB,GAAAnV,EAAA89E,GAAA3oE,GAGA2oE,EAAAjwD,YAAA,SAAA7tB,GACA,MAAAC,WAAA7L,QAAA4hB,EAAAhW,EAAA89E,GAAA9nE,GAGA8nE,EAAA96E,GAAA,WACA,GAAA1O,GAAA0qB,EAAAhc,GAAArR,MAAAqtB,EAAA/e,UACA,OAAA3L,KAAA0qB,EAAA8+D,EAAAxpF,GAGAwpF,EAGArtF,GAAAiwD,WACAjwD,EAAA8uF,OAAA55C,GACAl1C,EAAAk1C,eACAl1C,EAAAqwD,cACArwD,EAAA4L,aACA5L,EAAAgjD,YACAhjD,EAAAuwD,SACAvwD,EAAA6wD,cACA7wD,EAAAgxD,aACAhxD,EAAAoqB,UACApqB,EAAAqxD,aACArxD,EAAA+uF,0BAAAt9B,GACAzxD,EAAAgvF,eAAAt9B,GACA1xD,EAAAivF,iBAAA99B,GACAnxD,EAAAoM,OACApM,EAAA2xD,QACA3xD,EAAA4xD,UACA5xD,EAAA2O,SACA3O,EAAAuI,OACAvI,EAAAswD,SACAtwD,EAAAgyD,WACAhyD,EAAAkvF,SAAAn4C,GACA/2C,EAAAoJ,MAAAy3B,GACA7gC,EAAA6E,QACA7E,EAAAoyD,WACApyD,EAAAsrC,OACAtrC,EAAA0H,SACA1H,EAAA8L,WACA9L,EAAAsyD,aACAtyD,EAAA+wD,YACA/wD,EAAAuyD,OACAvyD,EAAA0P,UACA1P,EAAA2P,YACA3P,EAAAwH,aACAxH,EAAA4H,WACA5H,EAAA6qB,SACA7qB,EAAAwqB,UACAxqB,EAAA2qB,UACA3qB,EAAAqqB,kBACArqB,EAAAuoE,SACAvoE,EAAAuqE,UACAvqE,EAAAmrE,QACAnrE,EAAAwQ,IAAA6f,GACArwB,EAAAqJ,IAAAymB,GACA9vB,EAAAmJ,QACAnJ,EAAAyN,UACAzN,EAAAkrE,WACAlrE,EAAAka,SACAla,EAAAsb,OACAtb,EAAAwI,OACAxI,EAAA4c,OACA5c,EAAAud,OACAvd,EAAAie,aACAje,EAAA4P,WACA5P,EAAAi4D,QACAj4D,EAAAquB,eACAruB,EAAAmvF,WAAAv2E,GACA5Y,EAAAovF,UAAAxjB,GACA5rE,EAAA0sE,YACA1sE,EAAA2sE,gBACA3sE,EAAA4sE,aACA5sE,EAAA6sE,iBACA7sE,EAAA+sE,YACA/sE,EAAAgtE,gBACAhtE,EAAAitE,aACAjtE,EAAAktE,iBACAltE,EAAAqvF,WAAA3nE,GACA1nB,EAAAsvF,SAAAznE,GACA7nB,EAAAuvF,WAAA5nE,GACA3nB,EAAAwvF,YAAA5nE,GACA5nB,EAAAyvF,cAAA5nE,GACA7nB,EAAA0vF,UAAA1nE,GACAhoB,EAAA2vF,YAAA7nE,GACA9nB,EAAA4vF,aAAA7nE,GACA/nB,EAAA6vF,eAAA7nE,GACAhoB,EAAA8vF,SAAA9oB,GACAhnE,EAAA+vF,WAAAlpB,GACA7mE,EAAAgwF,YAAAjpB,GACA/mE,EAAAiwF,cAAAjpB,GACAhnE,EAAAkwF,QAAA9nE,GACApoB,EAAAmwF,UAAAloE,GACAjoB,EAAAowF,WAAAjoE,GACAnoB,EAAAqwF,aAAAjoE,GACApoB,EAAAswF,QAAA9nE,GACAxoB,EAAAuwF,UAAAjoE,GACAtoB,EAAAwwF,WAAAjoE,GACAvoB,EAAAywF,aAAAjoE,GACAxoB,EAAA0wF,WAAA/nE,GACA3oB,EAAA2wF,aAAAloE,GACAzoB,EAAA4wF,cAAAloE,GACA1oB,EAAA6wF,gBAAAloE,GACA3oB,EAAA8wF,WAAAjoE,GACA7oB,EAAA+wF,aAAAnoE,GACA5oB,EAAAgxF,cAAAnoE,GACA7oB,EAAAixF,gBAAAznE,GACAxpB,EAAAkxF,SAAA9pB,GACApnE,EAAAmxF,WAAAjqB,GACAlnE,EAAAoxF,YAAAjqB,GACAnnE,EAAAqxF,cAAAjqB,GACApnE,EAAAsxF,YAAA7pB,GACAznE,EAAAuxF,cAAA/pB,GACAxnE,EAAAwxF,eAAA/pB,GACAznE,EAAAyxF,iBAAA/pB,GACA1nE,EAAA0xF,YAAAvkB,GACAntE,EAAA2xF,aAAA/iB,GACA5uE,EAAA4xF,UAAAtiB,GACAtvE,EAAA6xF,cAAAnhB,GACA1wE,EAAA8xF,gBAAA9hB,GACAhwE,EAAA+xF,OAAA5gB,GACAnxE,EAAAgyF,OAAA5gB,GACApxE,EAAAiyF,oBAAAn+D,GACA9zB,EAAAg0B,gBACAh0B,EAAAkzB,mBACAlzB,EAAAizE,kBACAjzE,EAAAkzE,mBACAlzE,EAAAmzE,kBACAnzE,EAAAkyF,QAAA5d,GACAt0E,EAAAmyF,UAAA5d,GACAv0E,EAAAoyF,YAAA1d,GACA10E,EAAAqyF,UAAA1lD,GACA3sC,EAAAsyF,cAAAxd,GACA90E,EAAAuyF,YAAAt7B,GACAj3D,EAAAwyF,YAAAryD,GACAngC,EAAAyyF,aAAA1xD,GACA/gC,EAAA0yF,eAAAhxD,GACA1hC,EAAA2yF,eAAApd,GACAv1E,EAAA4yF,UAAAxd,GACAp1E,EAAA6yF,QAAAzc,GACAp2E,EAAA8yF,UAAA3a,GACAn4E,EAAA+yF,aAAA3a,GACAp4E,EAAAgzF,sBAAAla,GACA94E,EAAAizF,yBAAAra,GACA54E,EAAAkzF,wBAAAla,GACAh5E,EAAAmzF,2BAAApa,GACA/4E,EAAAozF,kBAAAla,GACAl5E,EAAAqzF,qBAAAxpD,GACA7pC,EAAAszF,kBAAApb,GACAl4E,EAAAuzF,qBAAA1qD,GACA7oC,EAAAwzF,oBAAApa,GACAp5E,EAAAyzF,uBAAAxpD,GACAjqC,EAAA0zF,mBAAAva,GACAn5E,EAAA2zF,sBAAA3pD,GACAhqC,EAAA4zF,YAAAva,GACAr5E,EAAA6zF,eAAAzpD,GACApqC,EAAA8zF,YAAAxa,GACAt5E,EAAA+zF,cAAAruD,GACA1lC,EAAAg0F,qBAAAxsD,GACAxnC,EAAAi0F,YAAAhb,GACAj5E,EAAAk0F,eAAA1qD,GACAxpC,EAAAm0F,gBAAA1a,GACAz5E,EAAAo0F,mBAAA1pD,GACA1qC,EAAAq0F,iBAAA3a,GACA15E,EAAAs0F,oBAAA3pD,GACA3qC,EAAAu0F,sBAAA5a,GACA35E,EAAAw0F,yBAAA5pD,GACA5qC,EAAAy0F,YAAAz4D,GACAh8B,EAAA4lC,aACA5lC,EAAA00F,aAAAzlF,GACAjP,EAAA45E,WACA55E,EAAA2rC,aACA3rC,EAAAsvC,KAAA2rC,GACAj7E,EAAA20F,aAAA5Z,GACA/6E,EAAA6uC,YAAAU,GACAvvC,EAAAm7E,aACAn7E,EAAAw7E,YACAx7E,EAAAixB,QACAjxB,EAAAy8E,QAAAD,GACAx8E,EAAA40F,cAAA5X,GACAh9E,EAAA8xC,eACA9xC,EAAA+xC,gBACA/xC,EAAA60F,iBAAArX,GACAx9E,EAAA80F,gBAAAvY,GACAv8E,EAAA+0F,kBAAAtX,GACAz9E,EAAAo9B,YAAAzO,GACA3uB,EAAAg1F,iBAAA/xB,GACAjjE,EAAAi1F,iBAAAvyB,GACA1iE,EAAAk1F,uBAAAvyB,GACA3iE,EAAAm1F,gBAAA19C,GACAz3C,EAAAo1F,kBAAAt0E,GACA9gB,EAAAq1F,kBAAAtlE,GACA/vB,EAAAy1C,oBACAz1C,EAAAojE,qBACApjE,EAAA2jE,2BACA3jE,EAAA4jE,2BACA5jE,EAAAkkE,mBACAlkE,EAAA4iE,kBACA5iE,EAAAs1F,oBAAAvyB,GACA/iE,EAAAu1F,0BAAAvyB,GACAhjE,EAAAw1F,eAAAhxB,GACAxkE,EAAAy1F,mBAAAhxB,GACAzkE,EAAA01F,eAAA/zE,GACA3hB,EAAA21F,eAAAjxB,GACA1kE,EAAA41F,mBAAAjxB,GACA3kE,EAAA61F,qBAAAjxB,GACA5kE,EAAA81F,yBAAAjxB,GACA7kE,EAAA8kE,YACA9kE,EAAAsO,QACAtO,EAAA+1F,YAAApY,GACA39E,EAAAg2F,gBAAApY,GACA59E,EAAAi2F,YAAApY,EACA79E,GAAAygC,gBAAA29C,EACAp+E,GAAAk2F,cAAA5X,GACAt+E,EAAAsyB,YACAtyB,EAAAsE,SACAtE,EAAAm2F,cAAAtX,GACA7+E,EAAAi/E,aAAA/mD,GACAl4B,EAAAo2F,gBAAApX,GACAh/E,EAAAq2F,YAAAlX,GACAn/E,EAAAo/E,gBAAAF,GACAl/E,EAAAs2F,kBAAAjX,GACAr/E,EAAAs/E,WACAt/E,EAAA63D,QACA73D,EAAAghF,QACAhhF,EAAAsL,QACAtL,EAAA2yD,OACA3yD,EAAAysE,IAAA0U,GACAnhF,EAAA8sE,IAAAsU,GACAphF,EAAAu2F,UAAAviD,GACAh0C,EAAAw2F,WAAAhiD,GACAx0C,EAAAy2F,cAAA5gD,GACA71C,EAAAiJ,YAAA2sC,GACA51C,EAAA02F,SAAApgD,GACAt2C,EAAA22F,aAAAhjD,GACA3zC,EAAA42F,cAAA/iD,GACA7zC,EAAA62F,SAAAlgD,GACA32C,EAAA82F,UAAAlgD,GACA52C,EAAA+2F,cAAAlgD,GACA72C,EAAAg3F,cAAA7/C,GACAn3C,EAAAi3F,eAAA7/C,GACAp3C,EAAAk3F,UAAAv0E,GACA3iB,EAAAm3F,SAAAvS,GACA5kF,EAAAo3F,iBAAAvS,GACA7kF,EAAAq3F,kBAAAvS,GACA9kF,EAAAs3F,kBAAAvS,GACA/kF,EAAAu3F,iBAAAvS,GACAhlF,EAAAw3F,4BAAAvS,GACAjlF,EAAAy3F,mBAAApS,GACArlF,EAAA03F,gBAAAxS,GACAllF,EAAA23F,gBAAAxS,GACAnlF,EAAA43F,mBAAArS,GACAvlF,EAAA63F,iBAAArS,GACAxlF,EAAA83F,mBAAArS,GACAzlF,EAAA+3F,kBAAArS,GACA1lF,EAAAg4F,gBAAAt0C,GACA1jD,EAAA+yD,WACA/yD,EAAAoR,MAAAC,EACArR,EAAAgzD,QAAAS,GACAzzD,EAAA0rB,SACA1rB,EAAA6yD,aACA7yD,EAAAyyD,cACAzyD,EAAAwJ,UACAxJ,EAAAsK,aACAtK,EAAAqO,aACArO,EAAAizD,YACAjzD,EAAA80D,eACA90D,EAAA83D,SACA93D,EAAAytB,WACAztB,EAAAiE,UACAjE,EAAAiT,cACAjT,EAAA6K,OACA7K,EAAAs0E,KAAA8S,GACApnF,EAAA8J,QACA9J,EAAA4K,OACA5K,EAAAgoF,cACAhoF,EAAAkmD,WAAA6hC,GACA/nF,EAAA0zB,UACA1zB,EAAAkpF,WACAlpF,EAAAi4F,aAAA5P,GACAroF,EAAAk4F,YAAA3P,GACAvoF,EAAAm4F,cAAAzP,GACA1oF,EAAAo4F,aAAAtP,GACA9oF,EAAAq4F,WAAAxP,GACA7oF,EAAAs4F,eAAAtP,GACAhpF,EAAAu4F,UAAAtP,GACAjpF,EAAAw4F,iBAAA/O,GACAzpF,EAAAy4F,eAAA/O,GACA1pF,EAAA04F,WAAAtP,GACAppF,EAAA24F,YAAAhP,GACA3pF,EAAA44F,oBAAA7O,GACA/pF,EAAA64F,kBAAA7O,GACAhqF,EAAA84F,cAAAlP,GACA5pF,EAAA+4F,sBAAA3O,GACApqF,EAAAg5F,oBAAA3O,GACArqF,EAAAgK,gBAAAmgF,GACAnqF,EAAAi5F,kBAAA3O,GACAtqF,EAAAinF,eACAjnF,EAAAk5F,eAAAzwC,GACAzoD,EAAAm5F,eAAAzwC,GACA1oD,EAAAo5F,aAAA1O,GACA1qF,EAAAq5F,UAAA38D,GACA18B,EAAAs5F,eAAAtwC,GACAhpD,EAAAu5F,gBAAAxwC,GACA/oD,EAAA8qF,SACA9qF,EAAAw5F,kBAAAnO,GACArrF,EAAAy5F,gBAAA7O,GACA5qF,EAAA05F,sBAAApO,GACAtrF,EAAA25F,kBAAApO,GACAvrF,EAAA45F,oBAAA9N,GACA9rF,EAAA65F,qBAAA9N,GACA/rF,EAAA85F,oBAAA9N,GACAhsF,EAAA+5F,eAAAlP,GACA7qF,EAAAg6F,kBAAA34D,GACArhC,EAAAi6F,aAAA5iD,GACAr3C,EAAAk6F,gBAAA5Y,GACAthF,EAAAm6F,iBAAA5Y,GACAvhF,EAAAo6F,eAAA9Y,GACAthF,EAAAq6F,gBAAA9Y,GACAvhF,EAAAs6F,WAAA3Y,GACA3hF,EAAAu6F,YAAA3Y,GACA5hF,EAAAw6F,UAAA7Y,GACA3hF,EAAAy6F,WAAA7Y,GACA5hF,EAAA06F,WAAA7Y,GACA7hF,EAAA26F,YAAA7Y,GACA9hF,EAAA46F,SAAA7Y,GACA/hF,EAAA66F,UAAA7Y,GACAhiF,EAAA86F,QAAAr6C,GACAzgD,EAAA+6F,SAAAl+C,GACA78C,EAAAg7F,SAAAl6C,GACA9gD,EAAAi7F,UAAA3Y,GACAtiF,EAAAk7F,WAAAp6C,GACA9gD,EAAAm7F,YAAA7Y,GACAtiF,EAAAo7F,WAAAr6C,GACA/gD,EAAAq7F,YAAA9Y,GACAviF,EAAAs7F,YAAArZ,GACAjiF,EAAAu7F,aAAA/Y,GACAxiF,EAAAw7F,cAAAtZ,GACAliF,EAAAy7F,eAAAhZ,GACAziF,EAAA07F,aAAAvZ,GACAniF,EAAA27F,cAAAjZ,GACA1iF,EAAA47F,WAAAxZ,GACApiF,EAAA67F,YAAAlZ,GACA3iF,EAAA87F,aAAAzZ,GACAriF,EAAA+7F,cAAAnZ,GACA5iF,EAAAg8F,UAAAnZ,GACA7iF,EAAAi8F,WAAAl/C,GACA/8C,EAAAk8F,SAAAx7C,GACA1gD,EAAAm8F,UAAApZ,GACA/iF,EAAAgjF,aACAhjF,EAAAkjF,cACAljF,EAAAmjF,WACAnjF,EAAAqjF,YACArjF,EAAAihD,UACAjhD,EAAAsjF,WACAtjF,EAAAo8F,QAAA96C,GACAthD,EAAAq8F,SAAAzY,GACA5jF,EAAAshD,aACAthD,EAAA4jF,cACA5jF,EAAAuhD,aACAvhD,EAAA6jF,cACA7jF,EAAAujF,cACAvjF,EAAA8jF,eACA9jF,EAAAwjF,gBACAxjF,EAAA+jF,iBACA/jF,EAAAyjF,eACAzjF,EAAAgkF,gBACAhkF,EAAA0jF,aACA1jF,EAAAikF,cACAjkF,EAAA2jF,eACA3jF,EAAAkkF,gBACAlkF,EAAAmkF,YACAnkF,EAAAqkF,aACArkF,EAAAkhD,WACAlhD,EAAAskF,YACAtkF,EAAAs8F,wBAAA76C,GACAzhD,EAAAu8F,iBAAAnjD,GACAp5C,EAAAw8F,UAAA9X,GACA1kF,EAAAy8F,SAAA9X,GACA3kF,EAAAgiB,OACAhiB,EAAAyiB,SACAziB,EAAA6iB,cACA7iB,EAAAkjB,QAAAoB,GACAtkB,EAAAyjB,SAAAyhD,GACAllE,EAAA8O;AACA9O,EAAAsZ,UACAtZ,EAAAsuB,aACAtuB,EAAA2sF,WACA3sF,EAAAqtF,QACArtF,EAAA08F,cAAAntC,GACAvvD,EAAA28F,aAAAltC,GAEAhvD,OAAAm8F,eAAA58F,EAAA,cAA8C6D,OAAA,OPi1BxC,SAAS5D,EAAQD,KAMvB,EAEM,SAASC,EAAQD,GQ7/hBvB,YAMA,SAAA68F,GAAAC,GACA,UAAAA,GAAArqE,SAAAqqE,EACA,SAAA/6F,WAAA,wDAGA,OAAAtB,QAAAq8F,GAGA,QAAAC,KACA,IACA,IAAAt8F,OAAAyD,OACA,QAMA,IAAA84F,GAAA,GAAAC,QAAA,MAEA,IADAD,EAAA,QACA,MAAAv8F,OAAAy8F,oBAAAF,GAAA,GACA,QAKA,QADAG,MACA38F,EAAA,EAAiBA,EAAA,GAAQA,IACzB28F,EAAA,IAAAF,OAAAG,aAAA58F,KAEA,IAAA68F,GAAA58F,OAAAy8F,oBAAAC,GAAA9zF,IAAA,SAAAyG,GACA,MAAAqtF,GAAArtF,IAEA,mBAAAutF,EAAAl8E,KAAA,IACA,QAIA,IAAAm8E,KAIA,OAHA,uBAAAjtF,MAAA,IAAA0gB,QAAA,SAAAwsE,GACAD,EAAAC,OAGA,yBADA98F,OAAA0I,KAAA1I,OAAAyD,UAAkCo5F,IAAAn8E,KAAA,IAMhC,MAAAq8E,GAEF,UApDA,GAAAC,GAAAh9F,OAAAg9F,sBACA98F,EAAAF,OAAAC,UAAAC,eACA+8F,EAAAj9F,OAAAC,UAAAi9F,oBAsDA19F,GAAAD,QAAA+8F,IAAAt8F,OAAAyD,OAAA,SAAAkV,EAAA6V,GAKA,OAJA5nB,GAEA6hF,EADA7rD,EAAAw/D,EAAAzjF,GAGAqC,EAAA,EAAgBA,EAAAjM,UAAA7L,OAAsB8X,IAAA,CACtCpU,EAAA5G,OAAA+O,UAAAiM,GAEA,QAAA5U,KAAAQ,GACA1G,EAAAP,KAAAiH,EAAAR,KACAw2B,EAAAx2B,GAAAQ,EAAAR,GAIA,IAAA42F,EAAA,CACAvU,EAAAuU,EAAAp2F,EACA,QAAA7G,GAAA,EAAkBA,EAAA0oF,EAAAvlF,OAAoBnD,IACtCk9F,EAAAt9F,KAAAiH,EAAA6hF,EAAA1oF,MACA68B,EAAA6rD,EAAA1oF,IAAA6G,EAAA6hF,EAAA1oF,MAMA,MAAA68B,KR2giBM,SAASp9B,EAAQD,EAASH,GSnmiBhC,YAiBA,SAAA+9F,GAAA/5F,GACA,GAAAtD,GAAA,GAAAuB,KAAAiC,IAGA,OAFAxD,GAAA0B,IAAA,EACA1B,EAAA2B,IAAA2B,EACAtD,EAjBA,GAAAuB,GAAAjC,EAAA,EAEAI,GAAAD,QAAA8B,CAIA,IAAA+7F,GAAAD,GAAA,GACAE,EAAAF,GAAA,GACAG,EAAAH,EAAA,MACAI,EAAAJ,EAAAnrE,QACAwrE,EAAAL,EAAA,GACAM,EAAAN,EAAA,GAQA97F,GAAAY,QAAA,SAAAmB,GACA,GAAAA,YAAA/B,GAAA,MAAA+B,EAEA,WAAAA,EAAA,MAAAk6F,EACA,IAAAtrE,SAAA5uB,EAAA,MAAAm6F,EACA,IAAAn6F,KAAA,QAAAg6F,EACA,IAAAh6F,KAAA,QAAAi6F,EACA,QAAAj6F,EAAA,MAAAo6F,EACA,SAAAp6F,EAAA,MAAAq6F,EAEA,oBAAAr6F,IAAA,kBAAAA,GACA,IACA,GAAArC,GAAAqC,EAAArC,IACA,sBAAAA,GACA,UAAAM,GAAAN,EAAAiC,KAAAI,IAEK,MAAApC,GACL,UAAAK,GAAA,SAAAY,EAAAC,GACAA,EAAAlB,KAIA,MAAAm8F,GAAA/5F,IAGA/B,EAAAq8F,IAAA,SAAAl3F,GACA,GAAApG,GAAAqG,MAAAxG,UAAAI,MAAAV,KAAA6G,EAEA,WAAAnF,GAAA,SAAAY,EAAAC,GAGA,QAAAC,GAAApC,EAAAs8F,GACA,GAAAA,IAAA,gBAAAA,IAAA,kBAAAA,IAAA,CACA,GAAAA,YAAAh7F,IAAAg7F,EAAAt7F,OAAAM,EAAApB,UAAAc,KAAA,CACA,SAAAs7F,EAAA76F,KACA66F,IAAA56F,GAEA,YAAA46F,EAAA76F,IAAAW,EAAApC,EAAAs8F,EAAA56F,MACA,IAAA46F,EAAA76F,KAAAU,EAAAm6F,EAAA56F,SACA46F,GAAAt7F,KAAA,SAAAs7F,GACAl6F,EAAApC,EAAAs8F,IACWn6F,IAGX,GAAAnB,GAAAs7F,EAAAt7F,IACA,sBAAAA,GAAA,CACA,GAAAjB,GAAA,GAAAuB,GAAAN,EAAAiC,KAAAq5F,GAIA,YAHAv8F,GAAAiB,KAAA,SAAAs7F,GACAl6F,EAAApC,EAAAs8F,IACan6F,IAKb9B,EAAAL,GAAAs8F,EACA,MAAAsB,GACA17F,EAAA7B,GA3BA,OAAAA,EAAA8C,OAAA,MAAAjB,MA8BA,QA7BA07F,GAAAv9F,EAAA8C,OA6BAnD,EAAA,EAAmBA,EAAAK,EAAA8C,OAAiBnD,IACpCoC,EAAApC,EAAAK,EAAAL,OAKAsB,EAAAa,OAAA,SAAAkB,GACA,UAAA/B,GAAA,SAAAY,EAAAC,GACAA,EAAAkB,MAIA/B,EAAAu8F,KAAA,SAAA5wF,GACA,UAAA3L,GAAA,SAAAY,EAAAC,GACA8K,EAAAsjB,QAAA,SAAAltB,GACA/B,EAAAY,QAAAmB,GAAArC,KAAAkB,EAAAC,QAOAb,EAAApB,UAAA,eAAA8B,GACA,MAAArB,MAAAK,KAAA,KAAAgB,KT2miBM,SAASvC,EAAQD,EAASH,GUptiBhC,YAYA,SAAAy+F,KACAC,GAAA,EACAz8F,EAAAkB,IAAA,KACAlB,EAAA4B,IAAA,KAIA,QAAAM,GAAAw6F,GAwCA,QAAAC,GAAAv+F,IAEAs+F,EAAAE,eACAC,EACAC,EAAA1+F,GAAAuM,MACA+xF,EAAAK,WAAAC,MAGAF,EAAA1+F,GAAA6+F,cACAP,EAAAC,aACAG,EAAA1+F,GAAA8+F,QAAA,EACAR,EAAAC,YACAG,EAAA1+F,GAAA6+F,UACAH,EAAA1+F,GAAAuM,SAGAmyF,EAAA1+F,GAAA8+F,QAAA,EACAC,EACAL,EAAA1+F,GAAA6+F,UACAH,EAAA1+F,GAAAuM,SAKA,QAAAyyF,GAAAh/F,GACA0+F,EAAA1+F,GAAA8+F,SACAR,EAAAU,UACAV,EAAAU,UAAAN,EAAA1+F,GAAA6+F,UAAAH,EAAA1+F,GAAAuM,OACOmyF,EAAA1+F,GAAAu+F,cACPU,QAAAC,KACA,kCAAAR,EAAA1+F,GAAA6+F,UAAA,MAEAI,QAAAC,KACA,gHACAR,EAAA1+F,GAAA6+F,UAAA,OAzEAP,QACAD,GAAAD,IACAC,GAAA,CACA,IAAAr+F,GAAA,EACA6+F,EAAA,EACAH,IACA98F,GAAAkB,IAAA,SAAAK,GAEA,IAAAA,EAAApB,KACA28F,EAAAv7F,EAAAg8F,OAEAT,EAAAv7F,EAAAg8F,KAAAL,OACAE,EAAA77F,EAAAg8F,KAEAz5F,aAAAg5F,EAAAv7F,EAAAg8F,KAAAn8E,eAEA07E,GAAAv7F,EAAAg8F,OAGAv9F,EAAA4B,IAAA,SAAAL,EAAAm6F,GACA,IAAAn6F,EAAArB,MACAqB,EAAAg8F,IAAAn/F,IACA0+F,EAAAv7F,EAAAg8F,MACAN,UAAA,KACAtyF,MAAA+wF,EACAt6E,QAAAld,WACAy4F,EAAAh7F,KAAA,KAAAJ,EAAAg8F,KAKAV,EAAAnB,EAAAsB,GACA,IACA,KAEAE,QAAA,KA6CA,QAAAC,GAAA/+F,EAAAuM,GACA0yF,QAAAC,KAAA,6CAAAl/F,EAAA,KACA,IAAAo/F,IAAA7yF,MAAAq+E,OAAAr+E,IAAA,EACA6yF,GAAAjvF,MAAA,MAAA0gB,QAAA,SAAAjnB,GACAq1F,QAAAC,KAAA,KAAAt1F,KAIA,QAAA60F,GAAAlyF,EAAAyJ,GACA,MAAAA,GAAAqpF,KAAA,SAAAC,GACA,MAAA/yF,aAAA+yF,KA5GA,GAAA19F,GAAAjC,EAAA,GAEAi/F,GACAW,eACA19F,UACA29F,YAGAnB,GAAA,CACAv+F,GAAAs+F,UAOAt+F,EAAAgE,UVwziBM,SAAS/D,EAAQD,IW10iBvB,SAAAsC,GACA,YA2CA,SAAAq9F,GAAAt5F,GAIA,GAHA,gBAAAA,KACAA,EAAA42F,OAAA52F,IAEA,6BAAAsxC,KAAAtxC,GACA,SAAAtE,WAAA,yCAEA,OAAAsE,GAAA8T,cAGA,QAAAylF,GAAA/7F,GAIA,MAHA,gBAAAA,KACAA,EAAAo5F,OAAAp5F,IAEAA,EAIA,QAAAg8F,GAAAC,GACA,GAAAC,IACAjuE,KAAA,WACA,GAAAjuB,GAAAi8F,EAAArvD,OACA,QAAgB7sC,KAAA6uB,SAAA5uB,YAUhB,OANAm8F,GAAAC,WACAF,EAAAG,OAAAH,UAAA,WACA,MAAAA,KAIAA,EAGA,QAAAI,GAAAzgB,GACAv+E,KAAAkI,OAEAq2E,YAAAygB,GACAzgB,EAAA3uD,QAAA,SAAAltB,EAAAwC,GACAlF,KAAAsI,OAAApD,EAAAxC,IACO1C,MAEFu+E,GACLj/E,OAAAy8F,oBAAAxd,GAAA3uD,QAAA,SAAA1qB,GACAlF,KAAAsI,OAAApD,EAAAq5E,EAAAr5E,KACOlF,MA0DP,QAAAi/F,GAAAC,GACA,MAAAA,GAAAC,SACAx+F,QAAAa,OAAA,GAAAZ,WAAA,sBAEAs+F,EAAAC,UAAA,GAGA,QAAAC,GAAAC,GACA,UAAA1+F,SAAA,SAAAY,EAAAC,GACA69F,EAAAzgB,OAAA,WACAr9E,EAAA89F,EAAAxhE,SAEAwhE,EAAAxgB,QAAA,WACAr9E,EAAA69F,EAAA/zF,UAKA,QAAAg0F,GAAAC,GACA,GAAAF,GAAA,GAAAG,YACAt9F,EAAAk9F,EAAAC,EAEA,OADAA,GAAAI,kBAAAF,GACAr9F,EAGA,QAAAw9F,GAAAH,GACA,GAAAF,GAAA,GAAAG,YACAt9F,EAAAk9F,EAAAC,EAEA,OADAA,GAAAM,WAAAJ,GACAr9F,EAGA,QAAA09F,GAAAC,GAIA,OAHAnoF,GAAA,GAAAooF,YAAAD,GACAE,EAAA,GAAAh6F,OAAA2R,EAAAlV,QAEAnD,EAAA,EAAmBA,EAAAqY,EAAAlV,OAAiBnD,IACpC0gG,EAAA1gG,GAAAy8F,OAAAG,aAAAvkF,EAAArY,GAEA,OAAA0gG,GAAA//E,KAAA,IAGA,QAAAggF,GAAAH,GACA,GAAAA,EAAAlgG,MACA,MAAAkgG,GAAAlgG,MAAA,EAEA,IAAA+X,GAAA,GAAAooF,YAAAD,EAAAI,WAEA,OADAvoF,GAAArI,IAAA,GAAAywF,YAAAD,IACAnoF,EAAA2xD,OAIA,QAAA62B,KA0FA,MAzFAlgG,MAAAm/F,UAAA,EAEAn/F,KAAAmgG,UAAA,SAAAjB,GAEA,GADAl/F,KAAAogG,UAAAlB,EACAA,EAEO,mBAAAA,GACPl/F,KAAAqgG,UAAAnB,MACO,IAAAL,EAAAU,MAAAe,KAAA/gG,UAAAghG,cAAArB,GACPl/F,KAAAwgG,UAAAtB,MACO,IAAAL,EAAA4B,UAAAC,SAAAnhG,UAAAghG,cAAArB,GACPl/F,KAAA2gG,cAAAzB,MACO,IAAAL,EAAA+B,cAAAC,gBAAAthG,UAAAghG,cAAArB,GACPl/F,KAAAqgG,UAAAnB,EAAA7uF,eACO,IAAAwuF,EAAAiC,aAAAjC,EAAAU,MAAAwB,EAAA7B,GACPl/F,KAAAghG,iBAAAhB,EAAAd,EAAA71B,QAEArpE,KAAAogG,UAAA,GAAAE,OAAAtgG,KAAAghG,uBACO,KAAAnC,EAAAiC,cAAAG,YAAA1hG,UAAAghG,cAAArB,KAAAgC,EAAAhC,GAGP,SAAAtwF,OAAA,4BAFA5O,MAAAghG,iBAAAhB,EAAAd,OAdAl/F,MAAAqgG,UAAA,EAmBArgG,MAAAu+E,QAAAnvE,IAAA,kBACA,gBAAA8vF,GACAl/F,KAAAu+E,QAAAlvE,IAAA,2CACSrP,KAAAwgG,WAAAxgG,KAAAwgG,UAAArxF,KACTnP,KAAAu+E,QAAAlvE,IAAA,eAAArP,KAAAwgG,UAAArxF,MACS0vF,EAAA+B,cAAAC,gBAAAthG,UAAAghG,cAAArB,IACTl/F,KAAAu+E,QAAAlvE,IAAA,oEAKAwvF,EAAAU,OACAv/F,KAAAu/F,KAAA,WACA,GAAA4B,GAAAlC,EAAAj/F,KACA,IAAAmhG,EACA,MAAAA,EAGA,IAAAnhG,KAAAwgG,UACA,MAAA7/F,SAAAY,QAAAvB,KAAAwgG,UACS,IAAAxgG,KAAAghG,iBACT,MAAArgG,SAAAY,QAAA,GAAA++F,OAAAtgG,KAAAghG,mBACS,IAAAhhG,KAAA2gG,cACT,SAAA/xF,OAAA,uCAEA,OAAAjO,SAAAY,QAAA,GAAA++F,OAAAtgG,KAAAqgG,cAIArgG,KAAA8gG,YAAA,WACA,MAAA9gG,MAAAghG,iBACA/B,EAAAj/F,OAAAW,QAAAY,QAAAvB,KAAAghG,kBAEAhhG,KAAAu/F,OAAAl/F,KAAAi/F,KAKAt/F,KAAAmK,KAAA,WACA,GAAAg3F,GAAAlC,EAAAj/F,KACA,IAAAmhG,EACA,MAAAA,EAGA,IAAAnhG,KAAAwgG,UACA,MAAAd,GAAA1/F,KAAAwgG,UACO,IAAAxgG,KAAAghG,iBACP,MAAArgG,SAAAY,QAAAq+F,EAAA5/F,KAAAghG,kBACO,IAAAhhG,KAAA2gG,cACP,SAAA/xF,OAAA,uCAEA,OAAAjO,SAAAY,QAAAvB,KAAAqgG,YAIAxB,EAAA4B,WACAzgG,KAAAygG,SAAA,WACA,MAAAzgG,MAAAmK,OAAA9J,KAAA+gG,KAIAphG,KAAA6/E,KAAA,WACA,MAAA7/E,MAAAmK,OAAA9J,KAAAivB,KAAAtQ,QAGAhf,KAMA,QAAAqhG,GAAAhiB,GACA,GAAAiiB,GAAAjiB,EAAAlO,aACA,OAAA/sC,GAAAr7B,QAAAu4F,IAAA,EAAAA,EAAAjiB,EAGA,QAAAkiB,GAAAh0E,EAAA8vE,GACAA,OACA,IAAA6B,GAAA7B,EAAA6B,IAEA,IAAA3xE,YAAAg0E,GAAA,CACA,GAAAh0E,EAAA4xE,SACA,SAAAv+F,WAAA,eAEAZ,MAAAmF,IAAAooB,EAAApoB,IACAnF,KAAAwhG,YAAAj0E,EAAAi0E,YACAnE,EAAA9e,UACAv+E,KAAAu+E,QAAA,GAAAygB,GAAAzxE,EAAAgxD,UAEAv+E,KAAAq/E,OAAA9xD,EAAA8xD,OACAr/E,KAAAgrB,KAAAuC,EAAAvC,KACAk0E,GAAA,MAAA3xE,EAAA6yE,YACAlB,EAAA3xE,EAAA6yE,UACA7yE,EAAA4xE,UAAA,OAGAn/F,MAAAmF,IAAA22F,OAAAvuE,EAWA,IARAvtB,KAAAwhG,YAAAnE,EAAAmE,aAAAxhG,KAAAwhG,aAAA,QACAnE,EAAA9e,SAAAv+E,KAAAu+E,UACAv+E,KAAAu+E,QAAA,GAAAygB,GAAA3B,EAAA9e,UAEAv+E,KAAAq/E,OAAAgiB,EAAAhE,EAAAhe,QAAAr/E,KAAAq/E,QAAA,OACAr/E,KAAAgrB,KAAAqyE,EAAAryE,MAAAhrB,KAAAgrB,MAAA,KACAhrB,KAAAyhG,SAAA,MAEA,QAAAzhG,KAAAq/E,QAAA,SAAAr/E,KAAAq/E,SAAA6f,EACA,SAAAt+F,WAAA,4CAEAZ,MAAAmgG,UAAAjB,GAOA,QAAAkC,GAAAlC,GACA,GAAAwC,GAAA,GAAAhB,SASA,OARAxB,GAAAjwF,OAAAC,MAAA,KAAA0gB,QAAA,SAAA+xE,GACA,GAAAA,EAAA,CACA,GAAAzyF,GAAAyyF,EAAAzyF,MAAA,KACAhK,EAAAgK,EAAAogC,QAAA2P,QAAA,WACAv8C,EAAAwM,EAAA8Q,KAAA,KAAAi/B,QAAA,UACAyiD,GAAAp5F,OAAAs5F,mBAAA18F,GAAA08F,mBAAAl/F,OAGAg/F,EAGA,QAAAG,GAAAC,GACA,GAAAvjB,GAAA,GAAAygB,EASA,OARA8C,GAAA5yF,MAAA,SAAA0gB,QAAA,SAAAjnB,GACA,GAAAo5F,GAAAp5F,EAAAuG,MAAA,KACAxJ,EAAAq8F,EAAAzyD,QAAArgC,MACA,IAAAvJ,EAAA,CACA,GAAAhD,GAAAq/F,EAAA/hF,KAAA,KAAA/Q,MACAsvE,GAAAj2E,OAAA5C,EAAAhD,MAGA67E,EAKA,QAAAyjB,GAAAC,EAAA5E,GACAA,IACAA,MAGAr9F,KAAAmP,KAAA,UACAnP,KAAAq+E,OAAA,UAAAgf,KAAAhf,OAAA,IACAr+E,KAAAkiG,GAAAliG,KAAAq+E,QAAA,KAAAr+E,KAAAq+E,OAAA,IACAr+E,KAAAmiG,WAAA,cAAA9E,KAAA8E,WAAA,KACAniG,KAAAu+E,QAAA,GAAAygB,GAAA3B,EAAA9e,SACAv+E,KAAAmF,IAAAk4F,EAAAl4F,KAAA,GACAnF,KAAAmgG,UAAA8B,GA1XA,IAAA9gG,EAAAihG,MAAA,CAIA,GAAAvD,IACA+B,aAAA,mBAAAz/F,GACA29F,SAAA,UAAA39F,IAAA,YAAA49F,QACAQ,KAAA,cAAAp+F,IAAA,QAAAA,IAAA,WACA,IAEA,MADA,IAAAm/F,OACA,EACO,MAAAxhF,GACP,aAGA2hF,SAAA,YAAAt/F,GACA2/F,YAAA,eAAA3/F,GAGA,IAAA09F,EAAAiC,YACA,GAAAuB,IACA,qBACA,sBACA,6BACA,sBACA,uBACA,sBACA,uBACA,wBACA,yBAGAtB,EAAA,SAAA3gG,GACA,MAAAA,IAAAkiG,SAAA/iG,UAAAghG,cAAAngG,IAGA8gG,EAAAD,YAAAsB,QAAA,SAAAniG,GACA,MAAAA,IAAAiiG,EAAAt5F,QAAAzJ,OAAAC,UAAA8Q,SAAApR,KAAAmB,KAAA,EAsDA4+F,GAAAz/F,UAAA+I,OAAA,SAAApD,EAAAxC,GACAwC,EAAAs5F,EAAAt5F,GACAxC,EAAA+7F,EAAA/7F,EACA,IAAA8/F,GAAAxiG,KAAAkI,IAAAhD,EACAlF,MAAAkI,IAAAhD,GAAAs9F,IAAA,IAAA9/F,KAGAs8F,EAAAz/F,UAAA,gBAAA2F,SACAlF,MAAAkI,IAAAs2F,EAAAt5F,KAGA85F,EAAAz/F,UAAA6P,IAAA,SAAAlK,GAEA,MADAA,GAAAs5F,EAAAt5F,GACAlF,KAAA4yC,IAAA1tC,GAAAlF,KAAAkI,IAAAhD,GAAA,MAGA85F,EAAAz/F,UAAAqzC,IAAA,SAAA1tC,GACA,MAAAlF,MAAAkI,IAAA1I,eAAAg/F,EAAAt5F,KAGA85F,EAAAz/F,UAAA8P,IAAA,SAAAnK,EAAAxC,GACA1C,KAAAkI,IAAAs2F,EAAAt5F,IAAAu5F,EAAA/7F,IAGAs8F,EAAAz/F,UAAAqwB,QAAA,SAAA/rB,EAAA4+F,GACA,OAAAv9F,KAAAlF,MAAAkI,IACAlI,KAAAkI,IAAA1I,eAAA0F,IACArB,EAAA5E,KAAAwjG,EAAAziG,KAAAkI,IAAAhD,KAAAlF,OAKAg/F,EAAAz/F,UAAAyI,KAAA,WACA,GAAA22F,KAEA,OADA3+F,MAAA4vB,QAAA,SAAAltB,EAAAwC,GAAwCy5F,EAAA78F,KAAAoD,KACxCw5F,EAAAC,IAGAK,EAAAz/F,UAAA+M,OAAA,WACA,GAAAqyF,KAEA,OADA3+F,MAAA4vB,QAAA,SAAAltB,GAAkCi8F,EAAA78F,KAAAY,KAClCg8F,EAAAC,IAGAK,EAAAz/F,UAAAwqE,QAAA,WACA,GAAA40B,KAEA,OADA3+F,MAAA4vB,QAAA,SAAAltB,EAAAwC,GAAwCy5F,EAAA78F,MAAAoD,EAAAxC,MACxCg8F,EAAAC,IAGAE,EAAAC,WACAE,EAAAz/F,UAAAw/F,OAAAH,UAAAI,EAAAz/F,UAAAwqE,QAqJA,IAAA3lC,IAAA,6CA4CAm9D,GAAAhiG,UAAAmjG,MAAA,WACA,UAAAnB,GAAAvhG,MAA8Bk/F,KAAAl/F,KAAAogG,aA6B9BF,EAAAjhG,KAAAsiG,EAAAhiG,WAgBA2gG,EAAAjhG,KAAA+iG,EAAAziG,WAEAyiG,EAAAziG,UAAAmjG,MAAA,WACA,UAAAV,GAAAhiG,KAAAogG,WACA/hB,OAAAr+E,KAAAq+E,OACA8jB,WAAAniG,KAAAmiG,WACA5jB,QAAA,GAAAygB,GAAAh/F,KAAAu+E,SACAp5E,IAAAnF,KAAAmF,OAIA68F,EAAA12F,MAAA,WACA,GAAA8mC,GAAA,GAAA4vD,GAAA,MAAuC3jB,OAAA,EAAA8jB,WAAA,IAEvC,OADA/vD,GAAAjjC,KAAA,QACAijC,EAGA,IAAAuwD,IAAA,oBAEAX,GAAAY,SAAA,SAAAz9F,EAAAk5E,GACA,GAAAskB,EAAA55F,QAAAs1E,MAAA,EACA,SAAAkgB,YAAA,sBAGA,WAAAyD,GAAA,MAA+B3jB,SAAAE,SAA0BqN,SAAAzmF,MAGzDhE,EAAA69F,UACA79F,EAAAogG,UACApgG,EAAA6gG,WAEA7gG,EAAAihG,MAAA,SAAA70E,EAAAhL,GACA,UAAA5hB,SAAA,SAAAY,EAAAC,GACA,GAAA28E,GAAA,GAAAojB,GAAAh0E,EAAAhL,GACA0vB,EAAA,GAAAusC,eAEAvsC,GAAA2sC,OAAA,WACA,GAAAye,IACAhf,OAAApsC,EAAAosC,OACA8jB,WAAAlwD,EAAAkwD,WACA5jB,QAAAsjB,EAAA5vD,EAAA4wD,yBAAA,IAEAxF,GAAAl4F,IAAA,eAAA8sC,KAAA6wD,YAAAzF,EAAA9e,QAAAnvE,IAAA,gBACA,IAAA8vF,GAAA,YAAAjtD,KAAAG,SAAAH,EAAAI,YACA9wC,GAAA,GAAAygG,GAAA9C,EAAA7B,KAGAprD,EAAA4sC,QAAA,WACAr9E,EAAA,GAAAZ,WAAA,4BAGAqxC,EAAA6sC,UAAA,WACAt9E,EAAA,GAAAZ,WAAA,4BAGAqxC,EAAAqtC,KAAAnB,EAAAkB,OAAAlB,EAAAh5E,KAAA,GAEA,YAAAg5E,EAAAqjB,cACAvvD,EAAA8wD,iBAAA,GAGA,gBAAA9wD,IAAA4sD,EAAAU,OACAttD,EAAAE,aAAA,QAGAgsC,EAAAI,QAAA3uD,QAAA,SAAAltB,EAAAwC,GACA+sC,EAAAstC,iBAAAr6E,EAAAxC,KAGAuvC,EAAAktC,KAAA,mBAAAhB,GAAAiiB,UAAA,KAAAjiB,EAAAiiB,cAGAj/F,EAAAihG,MAAAY,UAAA,IACC,mBAAA7hG,WAAAnB","file":"static/js/main.bb419bbf.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/Font-Weight-Distributions/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ((function(modules) {\n\t// Check all modules for deduplicated modules\n\tfor(var i in modules) {\n\t\tif(Object.prototype.hasOwnProperty.call(modules, i)) {\n\t\t\tswitch(typeof modules[i]) {\n\t\t\tcase \"function\": break;\n\t\t\tcase \"object\":\n\t\t\t\t// Module can be created from a template\n\t\t\t\tmodules[i] = (function(_m) {\n\t\t\t\t\tvar args = _m.slice(1), fn = modules[_m[0]];\n\t\t\t\t\treturn function (a,b,c) {\n\t\t\t\t\t\tfn.apply(this, [a,b,c].concat(args));\n\t\t\t\t\t};\n\t\t\t\t}(modules[i]));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Module is a copy of another module\n\t\t\t\tmodules[i] = modules[modules[i]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn modules;\n}([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(2);\n\tmodule.exports = __webpack_require__(5);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar asap = __webpack_require__(3);\n\t\n\tfunction noop() {}\n\t\n\t// States:\n\t//\n\t// 0 - pending\n\t// 1 - fulfilled with _value\n\t// 2 - rejected with _value\n\t// 3 - adopted the state of another promise, _value\n\t//\n\t// once the state is no longer pending (0) it is immutable\n\t\n\t// All `_` prefixed properties will be reduced to `_{random number}`\n\t// at build time to obfuscate them and discourage their use.\n\t// We don't use symbols or Object.defineProperty to fully hide them\n\t// because the performance isn't good enough.\n\t\n\t\n\t// to avoid using try/catch inside critical functions, we\n\t// extract them to here.\n\tvar LAST_ERROR = null;\n\tvar IS_ERROR = {};\n\tfunction getThen(obj) {\n\t  try {\n\t    return obj.then;\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tfunction tryCallOne(fn, a) {\n\t  try {\n\t    return fn(a);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\tfunction tryCallTwo(fn, a, b) {\n\t  try {\n\t    fn(a, b);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tmodule.exports = Promise;\n\t\n\tfunction Promise(fn) {\n\t  if (typeof this !== 'object') {\n\t    throw new TypeError('Promises must be constructed via new');\n\t  }\n\t  if (typeof fn !== 'function') {\n\t    throw new TypeError('not a function');\n\t  }\n\t  this._45 = 0;\n\t  this._81 = 0;\n\t  this._65 = null;\n\t  this._54 = null;\n\t  if (fn === noop) return;\n\t  doResolve(fn, this);\n\t}\n\tPromise._10 = null;\n\tPromise._97 = null;\n\tPromise._61 = noop;\n\t\n\tPromise.prototype.then = function(onFulfilled, onRejected) {\n\t  if (this.constructor !== Promise) {\n\t    return safeThen(this, onFulfilled, onRejected);\n\t  }\n\t  var res = new Promise(noop);\n\t  handle(this, new Handler(onFulfilled, onRejected, res));\n\t  return res;\n\t};\n\t\n\tfunction safeThen(self, onFulfilled, onRejected) {\n\t  return new self.constructor(function (resolve, reject) {\n\t    var res = new Promise(noop);\n\t    res.then(resolve, reject);\n\t    handle(self, new Handler(onFulfilled, onRejected, res));\n\t  });\n\t};\n\tfunction handle(self, deferred) {\n\t  while (self._81 === 3) {\n\t    self = self._65;\n\t  }\n\t  if (Promise._10) {\n\t    Promise._10(self);\n\t  }\n\t  if (self._81 === 0) {\n\t    if (self._45 === 0) {\n\t      self._45 = 1;\n\t      self._54 = deferred;\n\t      return;\n\t    }\n\t    if (self._45 === 1) {\n\t      self._45 = 2;\n\t      self._54 = [self._54, deferred];\n\t      return;\n\t    }\n\t    self._54.push(deferred);\n\t    return;\n\t  }\n\t  handleResolved(self, deferred);\n\t}\n\t\n\tfunction handleResolved(self, deferred) {\n\t  asap(function() {\n\t    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t    if (cb === null) {\n\t      if (self._81 === 1) {\n\t        resolve(deferred.promise, self._65);\n\t      } else {\n\t        reject(deferred.promise, self._65);\n\t      }\n\t      return;\n\t    }\n\t    var ret = tryCallOne(cb, self._65);\n\t    if (ret === IS_ERROR) {\n\t      reject(deferred.promise, LAST_ERROR);\n\t    } else {\n\t      resolve(deferred.promise, ret);\n\t    }\n\t  });\n\t}\n\tfunction resolve(self, newValue) {\n\t  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t  if (newValue === self) {\n\t    return reject(\n\t      self,\n\t      new TypeError('A promise cannot be resolved with itself.')\n\t    );\n\t  }\n\t  if (\n\t    newValue &&\n\t    (typeof newValue === 'object' || typeof newValue === 'function')\n\t  ) {\n\t    var then = getThen(newValue);\n\t    if (then === IS_ERROR) {\n\t      return reject(self, LAST_ERROR);\n\t    }\n\t    if (\n\t      then === self.then &&\n\t      newValue instanceof Promise\n\t    ) {\n\t      self._81 = 3;\n\t      self._65 = newValue;\n\t      finale(self);\n\t      return;\n\t    } else if (typeof then === 'function') {\n\t      doResolve(then.bind(newValue), self);\n\t      return;\n\t    }\n\t  }\n\t  self._81 = 1;\n\t  self._65 = newValue;\n\t  finale(self);\n\t}\n\t\n\tfunction reject(self, newValue) {\n\t  self._81 = 2;\n\t  self._65 = newValue;\n\t  if (Promise._97) {\n\t    Promise._97(self, newValue);\n\t  }\n\t  finale(self);\n\t}\n\tfunction finale(self) {\n\t  if (self._45 === 1) {\n\t    handle(self, self._54);\n\t    self._54 = null;\n\t  }\n\t  if (self._45 === 2) {\n\t    for (var i = 0; i < self._54.length; i++) {\n\t      handle(self, self._54[i]);\n\t    }\n\t    self._54 = null;\n\t  }\n\t}\n\t\n\tfunction Handler(onFulfilled, onRejected, promise){\n\t  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t  this.promise = promise;\n\t}\n\t\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, promise) {\n\t  var done = false;\n\t  var res = tryCallTwo(fn, function (value) {\n\t    if (done) return;\n\t    done = true;\n\t    resolve(promise, value);\n\t  }, function (reason) {\n\t    if (done) return;\n\t    done = true;\n\t    reject(promise, reason);\n\t  })\n\t  if (!done && res === IS_ERROR) {\n\t    done = true;\n\t    reject(promise, LAST_ERROR);\n\t  }\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tif (typeof Promise === 'undefined') {\n\t  // Rejection tracking prevents a common issue where React gets into an\n\t  // inconsistent state due to an error, but it gets swallowed by a Promise,\n\t  // and the user has no idea what causes React's erratic future behavior.\n\t  __webpack_require__(11).enable();\n\t  window.Promise = __webpack_require__(10);\n\t}\n\t\n\t// fetch() polyfill for making API calls.\n\t__webpack_require__(12);\n\t\n\t// Object.assign() is commonly used with React.\n\t// It will use the native implementation if it's present and isn't buggy.\n\tObject.assign = __webpack_require__(9);\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tmodule.exports = rawAsap;\n\tfunction rawAsap(task) {\n\t    if (!queue.length) {\n\t        requestFlush();\n\t        flushing = true;\n\t    }\n\t    // Equivalent to push, but avoids a function call.\n\t    queue[queue.length] = task;\n\t}\n\t\n\tvar queue = [];\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\tvar flushing = false;\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tvar requestFlush;\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tvar index = 0;\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tvar capacity = 1024;\n\t\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tfunction flush() {\n\t    while (index < queue.length) {\n\t        var currentIndex = index;\n\t        // Advance the index before calling the task. This ensures that we will\n\t        // begin flushing on the next task the task throws an error.\n\t        index = index + 1;\n\t        queue[currentIndex].call();\n\t        // Prevent leaking memory for long chains of recursive calls to `asap`.\n\t        // If we call `asap` within tasks scheduled by `asap`, the queue will\n\t        // grow, but to avoid an O(n) walk for every task we execute, we don't\n\t        // shift tasks off the queue after they have been executed.\n\t        // Instead, we periodically shift 1024 tasks off the queue.\n\t        if (index > capacity) {\n\t            // Manually shift all values starting at the index back to the\n\t            // beginning of the queue.\n\t            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n\t                queue[scan] = queue[scan + index];\n\t            }\n\t            queue.length -= index;\n\t            index = 0;\n\t        }\n\t    }\n\t    queue.length = 0;\n\t    index = 0;\n\t    flushing = false;\n\t}\n\t\n\t// `requestFlush` is implemented using a strategy based on data collected from\n\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\n\t// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n\t// have WebKitMutationObserver but not un-prefixed MutationObserver.\n\t// Must use `global` or `self` instead of `window` to work in both frames and web\n\t// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\t\n\t/* globals self */\n\tvar scope = typeof global !== \"undefined\" ? global : self;\n\tvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\t\n\t// MutationObservers are desirable because they have high priority and work\n\t// reliably everywhere they are implemented.\n\t// They are implemented in all modern browsers.\n\t//\n\t// - Android 4-4.3\n\t// - Chrome 26-34\n\t// - Firefox 14-29\n\t// - Internet Explorer 11\n\t// - iPad Safari 6-7.1\n\t// - iPhone Safari 7-7.1\n\t// - Safari 6-7\n\tif (typeof BrowserMutationObserver === \"function\") {\n\t    requestFlush = makeRequestCallFromMutationObserver(flush);\n\t\n\t// MessageChannels are desirable because they give direct access to the HTML\n\t// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t// 11-12, and in web workers in many engines.\n\t// Although message channels yield to any queued rendering and IO tasks, they\n\t// would be better than imposing the 4ms delay of timers.\n\t// However, they do not work reliably in Internet Explorer or Safari.\n\t\n\t// Internet Explorer 10 is the only browser that has setImmediate but does\n\t// not have MutationObservers.\n\t// Although setImmediate yields to the browser's renderer, it would be\n\t// preferrable to falling back to setTimeout since it does not have\n\t// the minimum 4ms penalty.\n\t// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t// Desktop to a lesser extent) that renders both setImmediate and\n\t// MessageChannel useless for the purposes of ASAP.\n\t// https://github.com/kriskowal/q/issues/396\n\t\n\t// Timers are implemented universally.\n\t// We fall back to timers in workers in most engines, and in foreground\n\t// contexts in the following browsers.\n\t// However, note that even this simple case requires nuances to operate in a\n\t// broad spectrum of browsers.\n\t//\n\t// - Firefox 3-13\n\t// - Internet Explorer 6-9\n\t// - iPad Safari 4.3\n\t// - Lynx 2.8.7\n\t} else {\n\t    requestFlush = makeRequestCallFromTimer(flush);\n\t}\n\t\n\t// `requestFlush` requests that the high priority event queue be flushed as\n\t// soon as possible.\n\t// This is useful to prevent an error thrown in a task from stalling the event\n\t// queue if the exception handled by Node.js’s\n\t// `process.on(\"uncaughtException\")` or by a domain.\n\trawAsap.requestFlush = requestFlush;\n\t\n\t// To request a high priority event, we induce a mutation observer by toggling\n\t// the text of a text node between \"1\" and \"-1\".\n\tfunction makeRequestCallFromMutationObserver(callback) {\n\t    var toggle = 1;\n\t    var observer = new BrowserMutationObserver(callback);\n\t    var node = document.createTextNode(\"\");\n\t    observer.observe(node, {characterData: true});\n\t    return function requestCall() {\n\t        toggle = -toggle;\n\t        node.data = toggle;\n\t    };\n\t}\n\t\n\t// The message channel technique was discovered by Malte Ubl and was the\n\t// original foundation for this library.\n\t// http://www.nonblocking.io/2011/06/windownexttick.html\n\t\n\t// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n\t// page's first load. Thankfully, this version of Safari supports\n\t// MutationObservers, so we don't need to fall back in that case.\n\t\n\t// function makeRequestCallFromMessageChannel(callback) {\n\t//     var channel = new MessageChannel();\n\t//     channel.port1.onmessage = callback;\n\t//     return function requestCall() {\n\t//         channel.port2.postMessage(0);\n\t//     };\n\t// }\n\t\n\t// For reasons explained above, we are also unable to use `setImmediate`\n\t// under any circumstances.\n\t// Even if we were, there is another bug in Internet Explorer 10.\n\t// It is not sufficient to assign `setImmediate` to `requestFlush` because\n\t// `setImmediate` must be called *by name* and therefore must be wrapped in a\n\t// closure.\n\t// Never forget.\n\t\n\t// function makeRequestCallFromSetImmediate(callback) {\n\t//     return function requestCall() {\n\t//         setImmediate(callback);\n\t//     };\n\t// }\n\t\n\t// Safari 6.0 has a problem where timers will get lost while the user is\n\t// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n\t// mutation observers, so that implementation is used instead.\n\t// However, if we ever elect to use timers in Safari, the prevalent work-around\n\t// is to add a scroll event listener that calls for a flush.\n\t\n\t// `setTimeout` does not call the passed callback if the delay is less than\n\t// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n\t// even then.\n\t\n\tfunction makeRequestCallFromTimer(callback) {\n\t    return function requestCall() {\n\t        // We dispatch a timeout with a specified delay of 0 for engines that\n\t        // can reliably accommodate that request. This will usually be snapped\n\t        // to a 4 milisecond delay, but once we're flushing, there's no delay\n\t        // between events.\n\t        var timeoutHandle = setTimeout(handleTimer, 0);\n\t        // However, since this timer gets frequently dropped in Firefox\n\t        // workers, we enlist an interval handle that will try to fire\n\t        // an event 20 times per second until it succeeds.\n\t        var intervalHandle = setInterval(handleTimer, 50);\n\t\n\t        function handleTimer() {\n\t            // Whichever timer succeeds will cancel both timers and\n\t            // execute the callback.\n\t            clearTimeout(timeoutHandle);\n\t            clearInterval(intervalHandle);\n\t            callback();\n\t        }\n\t    };\n\t}\n\t\n\t// This is for `asap.js` only.\n\t// Its name will be periodically randomized to break any code that depends on\n\t// its existence.\n\trawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\t\n\t// ASAP was originally a nextTick shim included in Q. This was factored out\n\t// into this ASAP package. It was later adapted to RSVP which made further\n\t// amendments. These decisions, particularly to marginalize MessageChannel and\n\t// to capture the MutationObserver implementation in a closure, were integrated\n\t// back into ASAP proper.\n\t// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = [{\n\t\t\"name\": \"Mada\",\n\t\t\"url\": \"https://github.com/alif-type/mada\",\n\t\t\"interpolations\": [{\n\t\t\t\"style\": \"Regular\",\n\t\t\t\"weight\": 368\n\t\t}, {\n\t\t\t\"style\": \"SemiBold\",\n\t\t\t\"weight\": 600\n\t\t}, {\n\t\t\t\"style\": \"Bold\",\n\t\t\t\"weight\": 824\n\t\t}]\n\t}, {\n\t\t\"name\": \"Source Serif Pro\",\n\t\t\"url\": \"https://github.com/adobe-fonts/source-serif-pro\",\n\t\t\"interpolations\": [{\n\t\t\t\"style\": \"ExtraLight\",\n\t\t\t\"weight\": 0\n\t\t}, {\n\t\t\t\"style\": \"Light\",\n\t\t\t\"weight\": 408\n\t\t}, {\n\t\t\t\"style\": \"Regular\",\n\t\t\t\"weight\": 1041\n\t\t}, {\n\t\t\t\"style\": \"Semibold\",\n\t\t\t\"weight\": 1367\n\t\t}, {\n\t\t\t\"style\": \"Bold\",\n\t\t\t\"weight\": 1722\n\t\t}, {\n\t\t\t\"style\": \"Black\",\n\t\t\t\"weight\": 2000\n\t\t}]\n\t}, {\n\t\t\"name\": \"Source Code Pro\",\n\t\t\"url\": \"https://github.com/rezerbit/.dotfiles\",\n\t\t\"interpolations\": [{\n\t\t\t\"style\": \"ExtraLight\",\n\t\t\t\"weight\": 0\n\t\t}, {\n\t\t\t\"style\": \"Light\",\n\t\t\t\"weight\": 100\n\t\t}, {\n\t\t\t\"style\": \"Regular\",\n\t\t\t\"weight\": 368\n\t\t}, {\n\t\t\t\"style\": \"Medium\",\n\t\t\t\"weight\": 486\n\t\t}, {\n\t\t\t\"style\": \"Semibold\",\n\t\t\t\"weight\": 600\n\t\t}, {\n\t\t\t\"style\": \"Bold\",\n\t\t\t\"weight\": 824\n\t\t}, {\n\t\t\t\"style\": \"Black\",\n\t\t\t\"weight\": 1000\n\t\t}]\n\t}, {\n\t\t\"name\": \"Adobe VF Prototype\",\n\t\t\"url\": \"https://github.com/adobe-fonts/adobe-variable-font-prototype\",\n\t\t\"interpolations\": [{\n\t\t\t\"style\": \"ExtraLight\",\n\t\t\t\"weight\": 0\n\t\t}, {\n\t\t\t\"style\": \"Light\",\n\t\t\t\"weight\": 150\n\t\t}, {\n\t\t\t\"style\": \"Regular\",\n\t\t\t\"weight\": 394\n\t\t}, {\n\t\t\t\"style\": \"Semibold\",\n\t\t\t\"weight\": 600\n\t\t}, {\n\t\t\t\"style\": \"Bold\",\n\t\t\t\"weight\": 824\n\t\t}, {\n\t\t\t\"style\": \"Black\",\n\t\t\t\"weight\": 1000\n\t\t}, {\n\t\t\t\"style\": \"Black Medium Contrast\",\n\t\t\t\"weight\": 1000\n\t\t}, {\n\t\t\t\"style\": \"Black High Contrast\",\n\t\t\t\"weight\": 1000\n\t\t}]\n\t}, {\n\t\t\"name\": \"Source Hebrew Sans\",\n\t\t\"url\": \"https://github.com/adobe-fonts/source-hebrew-sans\",\n\t\t\"interpolations\": [{\n\t\t\t\"style\": \"ExtraLight\",\n\t\t\t\"weight\": 0\n\t\t}, {\n\t\t\t\"style\": \"Light\",\n\t\t\t\"weight\": 100\n\t\t}, {\n\t\t\t\"style\": \"Regular\",\n\t\t\t\"weight\": 368\n\t\t}, {\n\t\t\t\"style\": \"Semibold\",\n\t\t\t\"weight\": 600\n\t\t}, {\n\t\t\t\"style\": \"Bold\",\n\t\t\t\"weight\": 824\n\t\t}, {\n\t\t\t\"style\": \"Black\",\n\t\t\t\"weight\": 1000\n\t\t}]\n\t}, {\n\t\t\"name\": \"Atithi\",\n\t\t\"url\": \"https://github.com/jonpinhorn/atithi\",\n\t\t\"interpolations\": [{\n\t\t\t\"style\": \"ExtraLight\",\n\t\t\t\"weight\": 0\n\t\t}, {\n\t\t\t\"style\": \"Light\",\n\t\t\t\"weight\": 20\n\t\t}, {\n\t\t\t\"style\": \"Regular\",\n\t\t\t\"weight\": 40\n\t\t}, {\n\t\t\t\"style\": \"Medium\",\n\t\t\t\"weight\": 60\n\t\t}, {\n\t\t\t\"style\": \"SemiBold\",\n\t\t\t\"weight\": 80\n\t\t}, {\n\t\t\t\"style\": \"Bold\",\n\t\t\t\"weight\": 100\n\t\t}]\n\t}, {\n\t\t\"name\": \"Riter medium\",\n\t\t\"url\": \"https://github.com/shannpersand/cooper-type\",\n\t\t\"interpolations\": [{\n\t\t\t\"style\": \"x184.72\",\n\t\t\t\"weight\": 165.966835\n\t\t}, {\n\t\t\t\"style\": \"x1429.26\",\n\t\t\t\"weight\": 429.260254\n\t\t}, {\n\t\t\t\"style\": \"x1697.73\",\n\t\t\t\"weight\": 697.72678\n\t\t}]\n\t}, {\n\t\t\"name\": \"Source Sans Pro\",\n\t\t\"url\": \"https://github.com/adobe-fonts/source-sans-pro\",\n\t\t\"interpolations\": [{\n\t\t\t\"style\": \"ExtraLight Italic\",\n\t\t\t\"weight\": 0\n\t\t}, {\n\t\t\t\"style\": \"Light Italic\",\n\t\t\t\"weight\": 100\n\t\t}, {\n\t\t\t\"style\": \"Italic\",\n\t\t\t\"weight\": 368\n\t\t}, {\n\t\t\t\"style\": \"Semibold Italic\",\n\t\t\t\"weight\": 600\n\t\t}, {\n\t\t\t\"style\": \"Bold Italic\",\n\t\t\t\"weight\": 824\n\t\t}, {\n\t\t\t\"style\": \"Black Italic\",\n\t\t\t\"weight\": 1000\n\t\t}]\n\t}];\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(8);\n\t\n\t__webpack_require__(7);\n\t\n\tvar _fonts = __webpack_require__(4);\n\t\n\tvar _fonts2 = _interopRequireDefault(_fonts);\n\t\n\tvar _d = __webpack_require__(6);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tvar myFonts = [{\n\t    name: \"Alloca Mono\",\n\t    interpolations: [{ style: 'Thin', weight: 10 }, { style: 'Extra Light', weight: 24 }, { style: 'Light', weight: 42 }, { style: 'Book', weight: 64 }, { style: 'Regular', weight: 90 }, { style: 'Medium', weight: 122 }, { style: 'Bold', weight: 160 }, { style: 'Black', weight: 200 }]\n\t}];\n\t\n\tvar data = [].concat(_toConsumableArray(_fonts2.default), myFonts);\n\t\n\tvar getColor = function getColor(i, arr, value) {\n\t    var hue = Math.floor(i / arr.length * 255);\n\t    var sat = Math.min(value + 50, 100);\n\t    var hsl = 'hsl(' + hue + ', ' + sat + '%, ' + value + '%)';\n\t    return hsl;\n\t};\n\t\n\t// set the dimensions and margins of the graph\n\tvar margin = { top: 20, right: 0, bottom: 50, left: 60 },\n\t    width = 480 - margin.left - margin.right,\n\t    height = 240 - margin.top - margin.bottom;\n\t\n\t// parse the date / time\n\tvar parseTime = d3.timeParse(\"%d-%b-%y\");\n\t\n\t// set the ranges\n\tvar x = d3.scaleLinear().domain([].concat(_toConsumableArray(Array(9).keys()))).range([].concat(_toConsumableArray(Array(9).keys())).map(function (el, i, arr) {\n\t    return width / arr.length * i;\n\t}));\n\tvar y = d3.scaleLinear().domain([0, 2000]).range([height, 0]);\n\t\n\t// append the svg obgect to the body of the page\n\t// appends a 'group' element to 'svg'\n\t// moves the 'group' element to the top left margin\n\tvar lineChart = d3.select(\".chart--line\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).attr(\"viewBox\", '0 0 ' + (width + margin.left + margin.right) + ' ' + (height + margin.top + margin.bottom)).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\n\tvar table = d3.select(\".table table\");\n\t\n\tvar drawGraph = function drawGraph(data) {\n\t    data.map(function (el, i, arr) {\n\t        // define the line\n\t        var valueline = d3.line().curve(d3.curveCatmullRom).x(function (d) {\n\t            return x(el.interpolations.indexOf(d));\n\t        }).y(function (d) {\n\t            return y(d.weight);\n\t        });\n\t        // Add the valueline path.\n\t        lineChart.append(\"path\").data([el.interpolations]).attr(\"d\", valueline).attr(\"class\", \"line\").attr(\"stroke\", getColor(i, arr, 70));\n\t        el.interpolations.filter(function (d) {\n\t            return d;\n\t        }).map(function (interpolation, interpolationIndex) {\n\t            lineChart.selectAll(\"dot\").data([interpolation]).enter().append(\"circle\").attr(\"class\", \"dot\").attr(\"stroke\", getColor(i, arr, 70)).attr(\"cx\", valueline.x()).attr(\"cy\", valueline.y()).attr(\"r\", 2).exit();\n\t        });\n\t\n\t        var row = table.append(\"tr\");\n\t        row.data(el);\n\t\n\t        var pieChart = row.append(\"td\").append(\"svg\").attr(\"class\", \"pie\").attr(\"width\", 128).attr(\"height\", 128).attr(\"viewBox\", '0 0 128 128');\n\t        var arcs = d3.pie()([].concat(_toConsumableArray(el.interpolations)).map(function (interpolation) {\n\t            return interpolation.weight;\n\t        }));\n\t        arcs.map(function (arc, arcIndex) {\n\t            var arcRendered = d3.arc().innerRadius(48).outerRadius(64).cornerRadius(2).padAngle(.03).startAngle(arc.startAngle).endAngle(arc.endAngle);\n\t            pieChart.append(\"path\").attr(\"d\", arcRendered).attr(\"class\", \"arc\").attr(\"transform\", \"translate(64, 64)\").attr(\"fill\", getColor(i, arcs, 90 - arcIndex * 40 / arcs.length));\n\t        });\n\t        row.append(\"td\").text(el.name);\n\t        el.interpolations.map(function (interpolation) {\n\t            row.append(\"td\").text(interpolation.weight);\n\t        });\n\t    });\n\t};\n\t\n\t// gridlines in x axis function\n\tfunction make_x_gridlines() {\n\t    return d3.axisBottom(x).ticks(5);\n\t}\n\t\n\t// gridlines in y axis function\n\tfunction make_y_gridlines() {\n\t    return d3.axisLeft(y).ticks(5);\n\t}\n\t\n\t// add the X gridlines\n\tlineChart.append(\"g\").attr(\"class\", \"grid\").attr(\"transform\", \"translate(0,\" + height + \")\").call(make_x_gridlines().tickSize(-height).tickFormat(\"\"));\n\t\n\t// add the Y gridlines\n\tlineChart.append(\"g\").attr(\"class\", \"grid\").call(make_y_gridlines().tickSize(-width).tickFormat(\"\"));\n\t\n\t// Add the X Axis\n\tlineChart.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x).ticks(5).tickSize(8));\n\tlineChart.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x).ticks(10).tickSize(4).tickFormat(\"\"));\n\tlineChart.append(\"text\").text(\"Steps\").style(\"text-anchor\", \"middle\").attr(\"font-size\", \"10\").attr(\"transform\", \"translate(\" + width / 2 + \",\" + (height + margin.top + 10) + \")\");\n\t\n\t// Add the Y Axis\n\tlineChart.append(\"g\").call(d3.axisLeft(y).ticks(5).tickSize(8));\n\tlineChart.append(\"g\").call(d3.axisLeft(y).ticks(15).tickSize(4).tickFormat(\"\"));\n\t\n\t//drawGraph\n\tdrawGraph(data);\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.7.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.7.0\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(a, b, f) {\n\t  var na = a.length, nb = b.length, c = new Array(na * nb), ia, ib, ic, va;\n\t  if (f == null) f = pair;\n\t  for (ia = ic = 0; ia < na; ++ia) for (va = a[ia], ib = 0; ib < nb; ++ib, ++ic) c[ic] = f(va, b[ib]);\n\t  return c;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(array, f) {\n\t  var n = array.length,\n\t      m = 0,\n\t      a,\n\t      d,\n\t      s = 0,\n\t      i = -1,\n\t      j = 0;\n\t\n\t  if (f == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(array[i]))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(f(array[i], i, array)))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (j > 1) return s / (j - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b,\n\t      c;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  return [a, c];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar sequence = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var step = tickStep(start, stop, count);\n\t  return sequence(\n\t    Math.ceil(start / step) * step,\n\t    Math.floor(stop / step) * step + step / 2, // inclusive\n\t    step\n\t  );\n\t};\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] >= x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(array, p, f) {\n\t  if (f == null) f = number;\n\t  if (!(n = array.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n\t  if (p >= 1) return +f(array[n - 1], n - 1, array);\n\t  var n,\n\t      h = (n - 1) * p,\n\t      i = Math.floor(h),\n\t      a = +f(array[i], i, array),\n\t      b = +f(array[i + 1], i + 1, array);\n\t  return a + (b - a) * (h - i);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar mean = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1,\n\t      j = n;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n\t  }\n\t\n\t  if (j) return s / j;\n\t};\n\t\n\tvar median = function(array, f) {\n\t  var numbers = [],\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(array, compare) {\n\t  if (!(n = array.length)) return;\n\t  var i = 0,\n\t      n,\n\t      j = 0,\n\t      xi,\n\t      xj = array[j];\n\t\n\t  if (!compare) compare = ascending;\n\t\n\t  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n\t  }\n\t\n\t  return s;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar slice$1 = Array.prototype.slice;\n\t\n\tvar identity$1 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon = 1e-6;\n\t\n\tfunction translateX(x) {\n\t  return \"translate(\" + x + \",0)\";\n\t}\n\t\n\tfunction translateY(y) {\n\t  return \"translate(0,\" + y + \")\";\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = scale.bandwidth() / 2;\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3,\n\t      k = orient === top || orient === left ? -1 : 1,\n\t      x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\"),\n\t      transform = orient === top || orient === bottom ? translateX : translateY;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        range = scale.range(),\n\t        range0 = range[0] + 0.5,\n\t        range1 = range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner)\n\t        .attr(y + \"1\", 0.5)\n\t        .attr(y + \"2\", 0.5));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(y, 0.5)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position(d)); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$1.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tvar noop = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local$1() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local$1.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point(node, event);\n\t};\n\t\n\tfunction none() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty$1() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty$1 : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$1(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$1;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$1(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar window = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  var node;\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : window(node = this.node())\n\t          .getComputedStyle(node, null)\n\t          .getPropertyValue(name);\n\t};\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window$$1 = window(node),\n\t      event = window$$1.CustomEvent;\n\t\n\t  if (event) {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window$$1.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection$$1.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter$1,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousemoving,\n\t      touchending;\n\t\n\t  function drag(selection$$1) {\n\t    selection$$1\n\t        .on(\"mousedown.drag\", mousedowned)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    mousemoving = true;\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches$$1 = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$1 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = ((function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t}))(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$1);\n\tvar rgbBasisClosed = rgbSpline(basisClosed);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar reinterpolate = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolateValue(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: reinterpolate(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolateValue = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? reinterpolate\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : isNaN(b) ? object\n\t      : reinterpolate)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow;\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, delay);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule.state > STARTING && schedule.state < ENDING;\n\t    schedule.state = ENDED;\n\t    schedule.timer.stop();\n\t    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule = set$1(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule = set$1(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule = set$1(this, id);\n\t    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate$$1 = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? reinterpolate\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$1(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$1(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$1(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition) {\n\t  if (transition._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start(name) ? init : set$1;\n\t  return function() {\n\t    var schedule = sit(this, id),\n\t        on = schedule.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$2) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$2, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$2(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$2, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tfunction linear$1(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local$$1(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent,\n\t      filter = defaultFilter,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local$$1(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection$$1) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n\t                i = interpolateValue(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection$$1 = local$$1(this).selection;\n\t\n\t    if (selection$$1) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection$$1[0][0])\n\t          .attr(\"y\", selection$$1[0][1])\n\t          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n\t          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local$$1(that),\n\t        extent = state.extent,\n\t        selection$$1 = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection$$1 = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection$$1[0][0];\n\t      n0 = selection$$1[0][1];\n\t      e0 = selection$$1[1][0];\n\t      s0 = selection$$1[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$1();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$1();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n\t      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\t\n\t      if (selection$$1[0][0] !== w1\n\t          || selection$$1[0][1] !== n1\n\t          || selection$$1[1][0] !== e1\n\t          || selection$$1[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$1();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n\t      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$1 = Math.PI;\n\tvar halfPi$1 = pi$1 / 2;\n\tvar tau$1 = pi$1 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = sequence(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(sequence(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$1 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$1 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar pi$2 = Math.PI;\n\tvar tau$2 = 2 * pi$2;\n\tvar epsilon$1 = 1e-6;\n\tvar tauEpsilon = tau$2 - epsilon$1;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon$1)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon$1) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      if (da < 0) da = da % tau$2 + tau$2;\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$2.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$1,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$1,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$1,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) return rollup != null\n\t        ? rollup(array) : (sortValues != null\n\t        ? array.sort(sortValues)\n\t        : array);\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set$2.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set$2(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n\t      delimiterCode = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var EOL = {}, // sentinel value for end-of-line\n\t        EOF = {}, // sentinel value for end-of-file\n\t        rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // the current line number\n\t        t, // the current token\n\t        eol; // is the current token followed by EOL?\n\t\n\t    function token() {\n\t      if (I >= N) return EOF; // special case: end of file\n\t      if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t      // special case: quotes\n\t      var j = I, c;\n\t      if (text.charCodeAt(j) === 34) {\n\t        var i = j;\n\t        while (i++ < N) {\n\t          if (text.charCodeAt(i) === 34) {\n\t            if (text.charCodeAt(i + 1) !== 34) break;\n\t            ++i;\n\t          }\n\t        }\n\t        I = i + 2;\n\t        c = text.charCodeAt(i + 1);\n\t        if (c === 13) {\n\t          eol = true;\n\t          if (text.charCodeAt(i + 2) === 10) ++I;\n\t        } else if (c === 10) {\n\t          eol = true;\n\t        }\n\t        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // common case: find next delimiter or newline\n\t      while (I < N) {\n\t        var k = 1;\n\t        c = text.charCodeAt(I++);\n\t        if (c === 10) eol = true; // \\n\n\t        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t        else if (c !== delimiterCode) continue;\n\t        return text.slice(j, I - k);\n\t      }\n\t\n\t      // special case: last token before EOF\n\t      return text.slice(j);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var a = [];\n\t      while (t !== EOL && t !== EOF) {\n\t        a.push(t);\n\t        t = token();\n\t      }\n\t      if (f && (a = f(a, n++)) == null) continue;\n\t      rows.push(a);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tfunction x(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x, y).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[node.index], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > node.index) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index(d) {\n\t  return d.index;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$6(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      count[link.source.index] = (count[link.source.index] || 0) + 1;\n\t      count[link.target.index] = (count[link.target.index] || 0) + 1;\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$6(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, x$$1, y$$1, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = q.value)) {\n\t          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x$$1 / strength;\n\t      quad.y = y$$1 / strength;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x$$1 = quad.x - node.x,\n\t        y$$1 = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x$$1 * x$$1 + y$$1 * y$$1;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x$$1 * quad.value * alpha / l;\n\t        node.vy += y$$1 * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x$$1 * w;\n\t      node.vy += y$$1 * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$2 = function(x) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$2 = function(y) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatNumerals = function(numerals) {\n\t  return function(value) {\n\t    return value.replace(/[0-9]/g, function(i) {\n\t      return numerals[+i];\n\t    });\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tfunction formatSpecifier(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t}\n\t\n\tformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar identity$3 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal,\n\t      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3;\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Perform the initial formatting.\n\t        var valueNegative = value < 0;\n\t        value = formatType(Math.abs(value), precision);\n\t\n\t        // If a negative value rounds to zero during formatting, treat as positive.\n\t        if (valueNegative && +value === 0) valueNegative = false;\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n\t        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n\t        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n\t        default: value = padding + valuePrefix + value + valueSuffix; break;\n\t      }\n\t\n\t      return numerals(value);\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.format = locale$1.format;\n\t  exports.formatPrefix = locale$1.formatPrefix;\n\t  return locale$1;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$2 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar quarterPi = pi$3 / 4;\n\tvar tau$3 = pi$3 * 2;\n\t\n\tvar degrees$1 = 180 / pi$3;\n\tvar radians = pi$3 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log = Math.log;\n\tvar pow = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(object, stream) {\n\t    streamGeometry(object.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$1;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$3);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$2) phi1 = 90;\n\t    else if (deltaSum < -epsilon$2) phi0 = -90;\n\t    range[0] = lambda0$1, range[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  }\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$1,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt(cx * cx + cy * cy + cz * cz),\n\t      w = asin(m), // line weight = angle\n\t      v = m && -w / m; // area weight multiplier\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$1) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$1) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$3;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n\t}\n\t\n\tvar circle = function() {\n\t  var center = constant$7([0, 0]),\n\t      radius = constant$7(90),\n\t      precision = constant$7(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$1,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipExtent(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar sum$1 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$1.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$3,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$1,\n\t  point: noop$1,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$1;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$1 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$1(object$1);\n\t};\n\t\n\tvar containsObjectType = {\n\t  Feature: function(object, point) {\n\t    return containsGeometry(object.geometry, point);\n\t  },\n\t  FeatureCollection: function(object, point) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tvar containsGeometryType = {\n\t  Sphere: function() {\n\t    return true;\n\t  },\n\t  Point: function(object, point) {\n\t    return containsPoint(object.coordinates, point);\n\t  },\n\t  MultiPoint: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  LineString: function(object, point) {\n\t    return containsLine(object.coordinates, point);\n\t  },\n\t  MultiLineString: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  Polygon: function(object, point) {\n\t    return containsPolygon(object.coordinates, point);\n\t  },\n\t  MultiPolygon: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  GeometryCollection: function(object, point) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tfunction containsGeometry(geometry, point) {\n\t  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n\t      ? containsGeometryType[geometry.type](geometry, point)\n\t      : false;\n\t}\n\t\n\tfunction containsPoint(coordinates, point) {\n\t  return distance(coordinates, point) === 0;\n\t}\n\t\n\tfunction containsLine(coordinates, point) {\n\t  var ab = distance(coordinates[0], coordinates[1]),\n\t      ao = distance(coordinates[0], point),\n\t      ob = distance(point, coordinates[1]);\n\t  return ao + ob <= ab + epsilon$2;\n\t}\n\t\n\tfunction containsPolygon(coordinates, point) {\n\t  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n\t}\n\t\n\tfunction ringRadians(ring) {\n\t  return ring = ring.map(pointRadians), ring.pop(), ring;\n\t}\n\t\n\tfunction pointRadians(point) {\n\t  return [point[0] * radians, point[1] * radians];\n\t}\n\t\n\tvar contains = function(object, point) {\n\t  return (object && containsObjectType.hasOwnProperty(object.type)\n\t      ? containsObjectType[object.type]\n\t      : containsGeometry)(object, point);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n\t        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n\t      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$4 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$3);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$1\n\t};\n\t\n\tvar lengthSum$1 = adder();\n\tvar lengthRing;\n\tvar x00$2;\n\tvar y00$2;\n\tvar x0$4;\n\tvar y0$4;\n\t\n\tvar lengthStream$1 = {\n\t  point: noop$1,\n\t  lineStart: function() {\n\t    lengthStream$1.point = lengthPointFirst$1;\n\t  },\n\t  lineEnd: function() {\n\t    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n\t    lengthStream$1.point = noop$1;\n\t  },\n\t  polygonStart: function() {\n\t    lengthRing = true;\n\t  },\n\t  polygonEnd: function() {\n\t    lengthRing = null;\n\t  },\n\t  result: function() {\n\t    var length = +lengthSum$1;\n\t    lengthSum$1.reset();\n\t    return length;\n\t  }\n\t};\n\t\n\tfunction lengthPointFirst$1(x, y) {\n\t  lengthStream$1.point = lengthPoint$1;\n\t  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n\t}\n\t\n\tfunction lengthPoint$1(x, y) {\n\t  x0$4 -= x, y0$4 -= y;\n\t  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n\t  x0$4 = x, y0$4 = y;\n\t}\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _circle: circle$1(4.5),\n\t  pointRadius: function(_) {\n\t    return this._circle = circle$1(_), this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$1(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$1 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.measure = function(object) {\n\t    geoStream(object, projectionStream(lengthStream$1));\n\t    return lengthStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(rotate, sink) {\n\t    var line = clipLine(sink),\n\t        rotatedStart = rotate.invert(start[0], start[1]),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, rotatedStart);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      line.point(point[0], point[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      var point = rotate(lambda, phi);\n\t      ringSink.point(point[0], point[1]);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$3, -halfPi$2]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$2\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$2;\n\t    stream.point(-pi$3, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$3, phi);\n\t    stream.point(pi$3, 0);\n\t    stream.point(pi$3, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$3, -phi);\n\t    stream.point(-pi$3, 0);\n\t    stream.point(-pi$3, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$2) {\n\t    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius, delta) {\n\t  var cr = cos$1(radius),\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$2;\n\t            point1[1] += epsilon$2;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$3) < epsilon$2,\n\t        meridian = polar || delta < epsilon$2;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$3 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n\t};\n\t\n\tvar transform = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt(a * a + b * b + c * c),\n\t          phi2 = asin(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$3 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$2];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$3);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      clipAuto;\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    if (!arguments.length) return clipAuto ? null : clipExtent();\n\t    if (clipAuto = _ == null) {\n\t      var k = pi$3 * scale(),\n\t          t = translate();\n\t      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n\t    }\n\t    clipExtent(_);\n\t    return m;\n\t  };\n\t\n\t  return m.clipExtent(null);\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$2 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n\t      f = cy0 * pow(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n\t    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n\t    var r = f / pow(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$2) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$5 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$2);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$2];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tfunction count(node) {\n\t  var sum = 0,\n\t      children = node.children,\n\t      i = children && children.length;\n\t  if (!i) sum = 1;\n\t  else while (--i >= 0) sum += children[i].value;\n\t  node.value = sum;\n\t}\n\t\n\tvar node_count = function() {\n\t  return this.eachAfter(count);\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  count: node_count,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tfunction Node$2(value) {\n\t  this._ = value;\n\t  this.next = null;\n\t}\n\t\n\tvar shuffle$1 = function(array) {\n\t  var i,\n\t      n = (array = array.slice()).length,\n\t      head = null,\n\t      node = head;\n\t\n\t  while (n) {\n\t    var next = new Node$2(array[n - 1]);\n\t    if (node) node = node.next = next;\n\t    else node = head = next;\n\t    array[i] = array[--n];\n\t  }\n\t\n\t  return {\n\t    head: head,\n\t    tail: node\n\t  };\n\t};\n\t\n\tvar enclose = function(circles) {\n\t  return encloseN(shuffle$1(circles), []);\n\t};\n\t\n\tfunction encloses(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r - b.r;\n\t  return dr * dr + 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\t// Returns the smallest circle that contains circles L and intersects circles B.\n\tfunction encloseN(L, B) {\n\t  var circle,\n\t      l0 = null,\n\t      l1 = L.head,\n\t      l2,\n\t      p1;\n\t\n\t  switch (B.length) {\n\t    case 1: circle = enclose1(B[0]); break;\n\t    case 2: circle = enclose2(B[0], B[1]); break;\n\t    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n\t  }\n\t\n\t  while (l1) {\n\t    p1 = l1._, l2 = l1.next;\n\t    if (!circle || !encloses(circle, p1)) {\n\t\n\t      // Temporarily truncate L before l1.\n\t      if (l0) L.tail = l0, l0.next = null;\n\t      else L.head = L.tail = null;\n\t\n\t      B.push(p1);\n\t      circle = encloseN(L, B); // Note: reorders L!\n\t      B.pop();\n\t\n\t      // Move l1 to the front of L and reconnect the truncated list L.\n\t      if (L.head) l1.next = L.head, L.head = l1;\n\t      else l1.next = null, L.head = L.tail = l1;\n\t      l0 = L.tail, l0.next = l2;\n\t\n\t    } else {\n\t      l0 = l1;\n\t    }\n\t    l1 = l2;\n\t  }\n\t\n\t  L.tail = l0;\n\t  return circle;\n\t}\n\t\n\tfunction enclose1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction enclose2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction enclose3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = 2 * (x1 - x2),\n\t      b2 = 2 * (y1 - y2),\n\t      c2 = 2 * (r2 - r1),\n\t      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      a3 = 2 * (x1 - x3),\n\t      b3 = 2 * (y1 - y3),\n\t      c3 = 2 * (r3 - r1),\n\t      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / ab - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / ab - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (xa * xb + ya * yb + r1),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n\t  return {\n\t    x: xa + xb * r + x1,\n\t    y: ya + yb * r + y1,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr - 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\tfunction distance1(a, b) {\n\t  var l = a._.r;\n\t  while (a !== b) l += 2 * (a = a.next)._.r;\n\t  return l - b._.r;\n\t}\n\t\n\tfunction distance2(node, x, y) {\n\t  var a = node._,\n\t      b = node.next._,\n\t      ab = a.r + b.r,\n\t      dx = (a.x * b.r + b.x * a.r) / ab - x,\n\t      dy = (a.y * b.r + b.y * a.r) / ab - y;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the weighted centroid.\n\t  var aa = a.r * a.r,\n\t      ba = b.r * b.r,\n\t      ca = c.r * c.r,\n\t      oa = aa + ba + ca,\n\t      ox = aa * a.x + ba * b.x + ca * c.x,\n\t      oy = aa * a.y + ba * b.y + ca * c.y,\n\t      cx, cy, i, j, k, sj, sk;\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    // “Closeness” is determined by linear distance along the front-chain.\n\t    // “Ahead” or “behind” is likewise determined by linear distance.\n\t    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n\t    do {\n\t      if (sj <= sk) {\n\t        if (intersects(j._, c._)) {\n\t          if (sj + a._.r + b._.r > distance1(j, b)) a = j; else b = j;\n\t          a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sj += j._.r, j = j.next;\n\t      } else {\n\t        if (intersects(k._, c._)) {\n\t          if (distance1(a, k) > sk + a._.r + b._.r) a = k; else b = k;\n\t          a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sk += k._.r, k = k.previous;\n\t      }\n\t    } while (j !== k.next);\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Update the weighted centroid.\n\t    oa += ca = c._.r * c._.r;\n\t    ox += ca * c._.x;\n\t    oy += ca * c._.y;\n\t\n\t    // Compute the new closest circle pair to the centroid.\n\t    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = distance2(c, cx, cy)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius$1(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index$2 = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius$1))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1 = 0,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t\n\t    // Find the next non-empty node.\n\t    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n\t    minValue = maxValue = sumValue;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = ((function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t}))(phi);\n\t\n\tvar index$3 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((y1 - y0) > (x1 - x0)) {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    } else {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = ((function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t}))(phi);\n\t\n\tvar area$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross$1 = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains$1 = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$2 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar slice$3 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  if (!(size >= 1)) throw new Error;\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    if (this._error != null) return this;\n\t    var t = slice$3.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke$1(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke$1(q) {\n\t  if (!q._start) {\n\t    try { start$1(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start$1(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke$1(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  return new Queue(arguments.length ? +concurrency : Infinity);\n\t}\n\t\n\tvar uniform = function(min, max) {\n\t  min = min == null ? 0 : +min;\n\t  max = max == null ? 1 : +max;\n\t  if (arguments.length === 1) max = min, min = 0;\n\t  else max -= min;\n\t  return function() {\n\t    return Math.random() * max + min;\n\t  };\n\t};\n\t\n\tvar normal = function(mu, sigma) {\n\t  var x, r;\n\t  mu = mu == null ? 0 : +mu;\n\t  sigma = sigma == null ? 1 : +sigma;\n\t  return function() {\n\t    var y;\n\t\n\t    // If available, use the second previously-generated uniform random.\n\t    if (x != null) y = x, x = null;\n\t\n\t    // Otherwise, generate a new x and y.\n\t    else do {\n\t      x = Math.random() * 2 - 1;\n\t      y = Math.random() * 2 - 1;\n\t      r = x * x + y * y;\n\t    } while (!r || r > 1);\n\t\n\t    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t  };\n\t};\n\t\n\tvar logNormal = function() {\n\t  var randomNormal = normal.apply(this, arguments);\n\t  return function() {\n\t    return Math.exp(randomNormal());\n\t  };\n\t};\n\t\n\tvar irwinHall = function(n) {\n\t  return function() {\n\t    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n\t    return sum;\n\t  };\n\t};\n\t\n\tvar bates = function(n) {\n\t  var randomIrwinHall = irwinHall(n);\n\t  return function() {\n\t    return randomIrwinHall() / n;\n\t  };\n\t};\n\t\n\tvar exponential$1 = function(lambda) {\n\t  return function() {\n\t    return -Math.log(1 - Math.random()) / lambda;\n\t  };\n\t};\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type$1 = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type$1(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type$1(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type$1(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type$1(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$4 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$4.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = sequence(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$1() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$1 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = interpolateValue,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    var d = domain(),\n\t        i = d.length - 1,\n\t        n = count == null ? 10 : count,\n\t        start = d[0],\n\t        stop = d[i],\n\t        step = tickStep(start, stop, n);\n\t\n\t    if (step) {\n\t      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n\t      d[0] = Math.floor(start / step) * step;\n\t      d[i] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$6() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$6().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction reinterpolate$1(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log$1() {\n\t  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log$1().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise$1(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow$1() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n\t        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n\t        : constant$9(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n\t    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow$1().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt$1() {\n\t  return pow$1().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond$1 = 1e3;\n\tvar durationMinute$1 = 6e4;\n\tvar durationHour$1 = 36e5;\n\tvar durationDay$1 = 864e5;\n\tvar durationWeek$1 = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond$1;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n\t  if (offset < 0) offset += durationHour$1;\n\t  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay$1;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$2;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$2 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$2.format;\n\t  exports.timeParse = locale$2.parse;\n\t  exports.utcFormat = locale$2.utcFormat;\n\t  exports.utcParse = locale$2.utcParse;\n\t  return locale$2;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar durationSecond = 1000;\n\tvar durationMinute = durationSecond * 60;\n\tvar durationHour = durationMinute * 60;\n\tvar durationDay = durationHour * 24;\n\tvar durationWeek = durationDay * 7;\n\tvar durationMonth = durationDay * 30;\n\tvar durationYear = durationDay * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$2(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond],\n\t    [second$$1,  5,  5 * durationSecond],\n\t    [second$$1, 15, 15 * durationSecond],\n\t    [second$$1, 30, 30 * durationSecond],\n\t    [minute$$1,  1,      durationMinute],\n\t    [minute$$1,  5,  5 * durationMinute],\n\t    [minute$$1, 15, 15 * durationMinute],\n\t    [minute$$1, 30, 30 * durationMinute],\n\t    [  hour$$1,  1,      durationHour  ],\n\t    [  hour$$1,  3,  3 * durationHour  ],\n\t    [  hour$$1,  6,  6 * durationHour  ],\n\t    [  hour$$1, 12, 12 * durationHour  ],\n\t    [   day$$1,  1,      durationDay   ],\n\t    [   day$$1,  2,  2 * durationDay   ],\n\t    [  week,  1,      durationWeek  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar constant$10 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar abs$1 = Math.abs;\n\tvar atan2$1 = Math.atan2;\n\tvar cos$2 = Math.cos;\n\tvar max$2 = Math.max;\n\tvar min$1 = Math.min;\n\tvar sin$2 = Math.sin;\n\tvar sqrt$2 = Math.sqrt;\n\t\n\tvar epsilon$3 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar tau$4 = 2 * pi$4;\n\t\n\tfunction acos$1(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$10(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$3,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$3,\n\t        da = abs$1(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$4 - epsilon$3) {\n\t      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$3) {\n\t        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n\t          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$3) {\n\t        var p0 = asin$1(rp / r0 * sin$2(ap)),\n\t            p1 = asin$1(rp / r1 * sin$2(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * cos$2(a01),\n\t          y01 = r1 * sin$2(a01),\n\t          x10 = r0 * cos$2(a10),\n\t          y10 = r0 * sin$2(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$3) {\n\t        var x11 = r1 * cos$2(a11),\n\t            y11 = r1 * sin$2(a11),\n\t            x00 = r0 * cos$2(a00),\n\t            y00 = r0 * sin$2(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$4) {\n\t          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n\t              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$3) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$3) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n\t    return [cos$2(a) * r, sin$2(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x$3(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y$3(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$2 = function() {\n\t  var x0 = x$3,\n\t      x1 = null,\n\t      y0 = constant$10(0),\n\t      y1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$7 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$7,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$10(0),\n\t      endAngle = constant$10(tau$4),\n\t      padAngle = constant$10(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction radialLine(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar radialLine$1 = function() {\n\t  return radialLine(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar radialArea = function() {\n\t  var a = area$2().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar circle$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$4);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$4);\n\t  }\n\t};\n\t\n\tvar cross$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\n\tvar kx = Math.sin(tau$4 / 10) * kr;\n\tvar ky = -Math.cos(tau$4 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$4 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle$2,\n\t  cross$2,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$10(circle$2),\n\t      size = constant$10(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop$2 = function() {};\n\t\n\tfunction point$2(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point$2(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis$2 = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed$1 = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = ((function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t}))(0.85);\n\t\n\tfunction point$3(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$3(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction point$4(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$3) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$3) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign$1(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$5(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar slice$5 = Array.prototype.slice;\n\t\n\tvar none$1 = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (var j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$2 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$10([]),\n\t      order = none$2,\n\t      offset = none$1,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none$1(series, order);\n\t};\n\t\n\tvar ascending$2 = function(series) {\n\t  var sums = series.map(sum$2);\n\t  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$2(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$2(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$2),\n\t      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$2(series).reverse();\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$2) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$4\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$4\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$4) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$4) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$4) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$4) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      if (!(m = (halfedges = cell.halfedges).length)) return;\n\t      var site = cell.site,\n\t          halfedges,\n\t          j = -1,\n\t          m,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\t\n\t    // Use the previously-found cell, or start with an arbitrary one.\n\t    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n\t    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\t\n\t    // Traverse the half-edges to find a closer cell, if any.\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$8 = new Transform(1, 0, 0);\n\t\n\ttransform$1.prototype = Transform.prototype;\n\t\n\tfunction transform$1(node) {\n\t  return node.__zoom || identity$8;\n\t}\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$8;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$2,\n\t      extent = defaultExtent$1,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      interpolate$$1 = interpolateZoom,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150;\n\t\n\t  function zoom(selection$$1) {\n\t    selection$$1\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .property(\"__zoom\", defaultTransform);\n\t  }\n\t\n\t  zoom.transform = function(collection, transform) {\n\t    var selection$$1 = collection.selection ? collection.selection() : collection;\n\t    selection$$1.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection$$1) {\n\t      schedule(collection, transform);\n\t    } else {\n\t      selection$$1.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection$$1, k) {\n\t    zoom.scaleTo(selection$$1, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection$$1, k) {\n\t    zoom.transform(selection$$1, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection$$1, x, y) {\n\t    zoom.transform(selection$$1, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  function scale(transform, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n\t  }\n\t\n\t  function translate(transform, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n\t    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n\t  }\n\t\n\t  function constrain(transform, extent) {\n\t    var dx0 = transform.invertX(extent[0][0]) - x0,\n\t        dx1 = transform.invertX(extent[1][0]) - x1,\n\t        dy0 = transform.invertY(extent[0][1]) - y0,\n\t        dy1 = transform.invertY(extent[1][1]) - y1;\n\t    return transform.translate(\n\t      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n\t      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n\t    );\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition$$1, transform, center) {\n\t    transition$$1\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n\t              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n\t      this.that.__zoom = transform;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$2();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this);\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$2();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$2();\n\t      g.moved = true;\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$2();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$2();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        started,\n\t        n = touches$$1.length, i, t, p;\n\t\n\t    nopropagation$2();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p, started = true;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t\n\t    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) {\n\t        g.end();\n\t        p = select(this).on(\"dblclick.zoom\");\n\t        if (p) p.apply(this, arguments);\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (started) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p, l;\n\t\n\t    noevent$2();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t;\n\t\n\t    nopropagation$2();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (!g.touch0) g.end();\n\t  }\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = sequence;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.nest = nest;\n\texports.set = set$2;\n\texports.map = map$1;\n\texports.keys = keys;\n\texports.values = values;\n\texports.entries = entries;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.dispatch = dispatch;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.easeLinear = linear$1;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$2;\n\texports.forceY = y$2;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatLocale = formatLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.geoArea = area;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid;\n\texports.geoCircle = circle;\n\texports.geoClipExtent = extent$1;\n\texports.geoContains = contains;\n\texports.geoDistance = distance;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoInterpolate = interpolate$1;\n\texports.geoLength = length$1;\n\texports.geoPath = index$1;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoIdentity = identity$5;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\texports.geoRotation = rotation;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index$2;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$3;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.interpolate = interpolateValue;\n\texports.interpolateArray = array$1;\n\texports.interpolateBasis = basis$1;\n\texports.interpolateBasisClosed = basisClosed;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = reinterpolate;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.quantize = quantize;\n\texports.path = path;\n\texports.polygonArea = area$1;\n\texports.polygonCentroid = centroid$1;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains$1;\n\texports.polygonLength = length$2;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential$1;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$1;\n\texports.scaleIdentity = identity$6;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log$1;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow$1;\n\texports.scaleSqrt = sqrt$1;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.scaleSequential = sequential;\n\texports.creator = creator;\n\texports.local = local$1;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = window;\n\texports.customEvent = customEvent;\n\texports.arc = arc;\n\texports.area = area$2;\n\texports.line = line;\n\texports.pie = pie;\n\texports.radialArea = radialArea;\n\texports.radialLine = radialLine$1;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle$2;\n\texports.symbolCross = cross$2;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed$1;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis$2;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetNone = none$1;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$2;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$2;\n\texports.stackOrderReverse = reverse;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.transition = transition;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomTransform = transform$1;\n\texports.zoomIdentity = identity$8;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 8 */\n7,\n/* 9 */\n/***/ function(module, exports) {\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t//This file contains the ES6 extensions to the core Promises/A+ API\n\t\n\tvar Promise = __webpack_require__(1);\n\t\n\tmodule.exports = Promise;\n\t\n\t/* Static Functions */\n\t\n\tvar TRUE = valuePromise(true);\n\tvar FALSE = valuePromise(false);\n\tvar NULL = valuePromise(null);\n\tvar UNDEFINED = valuePromise(undefined);\n\tvar ZERO = valuePromise(0);\n\tvar EMPTYSTRING = valuePromise('');\n\t\n\tfunction valuePromise(value) {\n\t  var p = new Promise(Promise._61);\n\t  p._81 = 1;\n\t  p._65 = value;\n\t  return p;\n\t}\n\tPromise.resolve = function (value) {\n\t  if (value instanceof Promise) return value;\n\t\n\t  if (value === null) return NULL;\n\t  if (value === undefined) return UNDEFINED;\n\t  if (value === true) return TRUE;\n\t  if (value === false) return FALSE;\n\t  if (value === 0) return ZERO;\n\t  if (value === '') return EMPTYSTRING;\n\t\n\t  if (typeof value === 'object' || typeof value === 'function') {\n\t    try {\n\t      var then = value.then;\n\t      if (typeof then === 'function') {\n\t        return new Promise(then.bind(value));\n\t      }\n\t    } catch (ex) {\n\t      return new Promise(function (resolve, reject) {\n\t        reject(ex);\n\t      });\n\t    }\n\t  }\n\t  return valuePromise(value);\n\t};\n\t\n\tPromise.all = function (arr) {\n\t  var args = Array.prototype.slice.call(arr);\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    if (args.length === 0) return resolve([]);\n\t    var remaining = args.length;\n\t    function res(i, val) {\n\t      if (val && (typeof val === 'object' || typeof val === 'function')) {\n\t        if (val instanceof Promise && val.then === Promise.prototype.then) {\n\t          while (val._81 === 3) {\n\t            val = val._65;\n\t          }\n\t          if (val._81 === 1) return res(i, val._65);\n\t          if (val._81 === 2) reject(val._65);\n\t          val.then(function (val) {\n\t            res(i, val);\n\t          }, reject);\n\t          return;\n\t        } else {\n\t          var then = val.then;\n\t          if (typeof then === 'function') {\n\t            var p = new Promise(then.bind(val));\n\t            p.then(function (val) {\n\t              res(i, val);\n\t            }, reject);\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      args[i] = val;\n\t      if (--remaining === 0) {\n\t        resolve(args);\n\t      }\n\t    }\n\t    for (var i = 0; i < args.length; i++) {\n\t      res(i, args[i]);\n\t    }\n\t  });\n\t};\n\t\n\tPromise.reject = function (value) {\n\t  return new Promise(function (resolve, reject) {\n\t    reject(value);\n\t  });\n\t};\n\t\n\tPromise.race = function (values) {\n\t  return new Promise(function (resolve, reject) {\n\t    values.forEach(function(value){\n\t      Promise.resolve(value).then(resolve, reject);\n\t    });\n\t  });\n\t};\n\t\n\t/* Prototype Methods */\n\t\n\tPromise.prototype['catch'] = function (onRejected) {\n\t  return this.then(null, onRejected);\n\t};\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\t\n\tvar DEFAULT_WHITELIST = [\n\t  ReferenceError,\n\t  TypeError,\n\t  RangeError\n\t];\n\t\n\tvar enabled = false;\n\texports.disable = disable;\n\tfunction disable() {\n\t  enabled = false;\n\t  Promise._10 = null;\n\t  Promise._97 = null;\n\t}\n\t\n\texports.enable = enable;\n\tfunction enable(options) {\n\t  options = options || {};\n\t  if (enabled) disable();\n\t  enabled = true;\n\t  var id = 0;\n\t  var displayId = 0;\n\t  var rejections = {};\n\t  Promise._10 = function (promise) {\n\t    if (\n\t      promise._81 === 2 && // IS REJECTED\n\t      rejections[promise._72]\n\t    ) {\n\t      if (rejections[promise._72].logged) {\n\t        onHandled(promise._72);\n\t      } else {\n\t        clearTimeout(rejections[promise._72].timeout);\n\t      }\n\t      delete rejections[promise._72];\n\t    }\n\t  };\n\t  Promise._97 = function (promise, err) {\n\t    if (promise._45 === 0) { // not yet handled\n\t      promise._72 = id++;\n\t      rejections[promise._72] = {\n\t        displayId: null,\n\t        error: err,\n\t        timeout: setTimeout(\n\t          onUnhandled.bind(null, promise._72),\n\t          // For reference errors and type errors, this almost always\n\t          // means the programmer made a mistake, so log them after just\n\t          // 100ms\n\t          // otherwise, wait 2 seconds to see if they get handled\n\t          matchWhitelist(err, DEFAULT_WHITELIST)\n\t            ? 100\n\t            : 2000\n\t        ),\n\t        logged: false\n\t      };\n\t    }\n\t  };\n\t  function onUnhandled(id) {\n\t    if (\n\t      options.allRejections ||\n\t      matchWhitelist(\n\t        rejections[id].error,\n\t        options.whitelist || DEFAULT_WHITELIST\n\t      )\n\t    ) {\n\t      rejections[id].displayId = displayId++;\n\t      if (options.onUnhandled) {\n\t        rejections[id].logged = true;\n\t        options.onUnhandled(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      } else {\n\t        rejections[id].logged = true;\n\t        logError(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      }\n\t    }\n\t  }\n\t  function onHandled(id) {\n\t    if (rejections[id].logged) {\n\t      if (options.onHandled) {\n\t        options.onHandled(rejections[id].displayId, rejections[id].error);\n\t      } else if (!rejections[id].onUnhandled) {\n\t        console.warn(\n\t          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n\t        );\n\t        console.warn(\n\t          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n\t          rejections[id].displayId + '.'\n\t        );\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction logError(id, error) {\n\t  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n\t  var errStr = (error && (error.stack || error)) + '';\n\t  errStr.split('\\n').forEach(function (line) {\n\t    console.warn('  ' + line);\n\t  });\n\t}\n\t\n\tfunction matchWhitelist(error, list) {\n\t  return list.some(function (cls) {\n\t    return error instanceof cls;\n\t  });\n\t}\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t      '[object Int8Array]',\n\t      '[object Uint8Array]',\n\t      '[object Uint8ClampedArray]',\n\t      '[object Int16Array]',\n\t      '[object Uint16Array]',\n\t      '[object Int32Array]',\n\t      '[object Uint32Array]',\n\t      '[object Float32Array]',\n\t      '[object Float64Array]'\n\t    ]\n\t\n\t    var isDataView = function(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj)\n\t    }\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n\t    }\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var oldValue = this.map[name]\n\t    this.map[name] = oldValue ? oldValue+','+value : value\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    name = normalizeName(name)\n\t    return this.has(name) ? this.map[name] : null\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value)\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this)\n\t      }\n\t    }\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsArrayBuffer(blob)\n\t    return promise\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsText(blob)\n\t    return promise\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf)\n\t    var chars = new Array(view.length)\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i])\n\t    }\n\t    return chars.join('')\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0)\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength)\n\t      view.set(new Uint8Array(buf))\n\t      return view.buffer\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (!body) {\n\t        this._bodyText = ''\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer)\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer])\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body)\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer)\n\t        }\n\t      }\n\t    }\n\t\n\t    this.text = function() {\n\t      var rejected = consumed(this)\n\t      if (rejected) {\n\t        return rejected\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob)\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text')\n\t      } else {\n\t        return Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t\n\t    if (input instanceof Request) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = String(input)\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this, { body: this._bodyInit })\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers()\n\t    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n\t      var parts = line.split(':')\n\t      var key = parts.shift().trim()\n\t      if (key) {\n\t        var value = parts.join(':').trim()\n\t        headers.append(key, value)\n\t      }\n\t    })\n\t    return headers\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = 'status' in options ? options.status : 200\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n\t    this.headers = new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request = new Request(input, init)\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        }\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }\n/******/ ])));\n\n\n// WEBPACK FOOTER //\n// static/js/main.bb419bbf.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Font-Weight-Distributions/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b7b9b8433b7e3f20bbc7","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/core.js\n// module id = 1\n// module chunks = 0","if (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/polyfills.js\n// module id = 2\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/asap/browser-raw.js\n// module id = 3\n// module chunks = 0","module.exports = [\n\t{\n\t\t\"name\": \"Mada\",\n\t\t\"url\": \"https://github.com/alif-type/mada\",\n\t\t\"interpolations\": [\n\t\t\t{\n\t\t\t\t\"style\": \"Regular\",\n\t\t\t\t\"weight\": 368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"SemiBold\",\n\t\t\t\t\"weight\": 600\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Bold\",\n\t\t\t\t\"weight\": 824\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"name\": \"Source Serif Pro\",\n\t\t\"url\": \"https://github.com/adobe-fonts/source-serif-pro\",\n\t\t\"interpolations\": [\n\t\t\t{\n\t\t\t\t\"style\": \"ExtraLight\",\n\t\t\t\t\"weight\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Light\",\n\t\t\t\t\"weight\": 408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Regular\",\n\t\t\t\t\"weight\": 1041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Semibold\",\n\t\t\t\t\"weight\": 1367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Bold\",\n\t\t\t\t\"weight\": 1722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Black\",\n\t\t\t\t\"weight\": 2000\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"name\": \"Source Code Pro\",\n\t\t\"url\": \"https://github.com/rezerbit/.dotfiles\",\n\t\t\"interpolations\": [\n\t\t\t{\n\t\t\t\t\"style\": \"ExtraLight\",\n\t\t\t\t\"weight\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Light\",\n\t\t\t\t\"weight\": 100\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Regular\",\n\t\t\t\t\"weight\": 368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Medium\",\n\t\t\t\t\"weight\": 486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Semibold\",\n\t\t\t\t\"weight\": 600\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Bold\",\n\t\t\t\t\"weight\": 824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Black\",\n\t\t\t\t\"weight\": 1000\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"name\": \"Adobe VF Prototype\",\n\t\t\"url\": \"https://github.com/adobe-fonts/adobe-variable-font-prototype\",\n\t\t\"interpolations\": [\n\t\t\t{\n\t\t\t\t\"style\": \"ExtraLight\",\n\t\t\t\t\"weight\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Light\",\n\t\t\t\t\"weight\": 150\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Regular\",\n\t\t\t\t\"weight\": 394\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Semibold\",\n\t\t\t\t\"weight\": 600\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Bold\",\n\t\t\t\t\"weight\": 824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Black\",\n\t\t\t\t\"weight\": 1000\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Black Medium Contrast\",\n\t\t\t\t\"weight\": 1000\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Black High Contrast\",\n\t\t\t\t\"weight\": 1000\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"name\": \"Source Hebrew Sans\",\n\t\t\"url\": \"https://github.com/adobe-fonts/source-hebrew-sans\",\n\t\t\"interpolations\": [\n\t\t\t{\n\t\t\t\t\"style\": \"ExtraLight\",\n\t\t\t\t\"weight\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Light\",\n\t\t\t\t\"weight\": 100\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Regular\",\n\t\t\t\t\"weight\": 368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Semibold\",\n\t\t\t\t\"weight\": 600\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Bold\",\n\t\t\t\t\"weight\": 824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Black\",\n\t\t\t\t\"weight\": 1000\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"name\": \"Atithi\",\n\t\t\"url\": \"https://github.com/jonpinhorn/atithi\",\n\t\t\"interpolations\": [\n\t\t\t{\n\t\t\t\t\"style\": \"ExtraLight\",\n\t\t\t\t\"weight\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Light\",\n\t\t\t\t\"weight\": 20\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Regular\",\n\t\t\t\t\"weight\": 40\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Medium\",\n\t\t\t\t\"weight\": 60\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"SemiBold\",\n\t\t\t\t\"weight\": 80\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Bold\",\n\t\t\t\t\"weight\": 100\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"name\": \"Riter medium\",\n\t\t\"url\": \"https://github.com/shannpersand/cooper-type\",\n\t\t\"interpolations\": [\n\t\t\t{\n\t\t\t\t\"style\": \"x184.72\",\n\t\t\t\t\"weight\": 165.966835\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"x1429.26\",\n\t\t\t\t\"weight\": 429.260254\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"x1697.73\",\n\t\t\t\t\"weight\": 697.72678\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"name\": \"Source Sans Pro\",\n\t\t\"url\": \"https://github.com/adobe-fonts/source-sans-pro\",\n\t\t\"interpolations\": [\n\t\t\t{\n\t\t\t\t\"style\": \"ExtraLight Italic\",\n\t\t\t\t\"weight\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Light Italic\",\n\t\t\t\t\"weight\": 100\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Italic\",\n\t\t\t\t\"weight\": 368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Semibold Italic\",\n\t\t\t\t\"weight\": 600\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Bold Italic\",\n\t\t\t\t\"weight\": 824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"style\": \"Black Italic\",\n\t\t\t\t\"weight\": 1000\n\t\t\t}\n\t\t]\n\t}\n]\n\n\n// WEBPACK FOOTER //\n// ./src/data/fonts.js","import './index.css'\nimport './App.css'\nimport fontData from './data/fonts.js'\nimport * as d3 from \"d3\"\n\nconst myFonts = [\n  {\n    name: \"Alloca Mono\",\n    interpolations: [\n      { style: 'Thin',        weight:  10 },\n      { style: 'Extra Light', weight:  24 },\n      { style: 'Light',       weight:  42 },\n      { style: 'Book',        weight:  64 },\n      { style: 'Regular',     weight:  90 },\n      { style: 'Medium',      weight: 122 },\n      { style: 'Bold',        weight: 160 },\n      { style: 'Black',       weight: 200 }\n    ]\n  }\n]\n\nconst data = [...fontData, ...myFonts]\n\nconst getColor = (i, arr, value) => {\n  const hue = Math.floor(i / arr.length * 255)\n  const sat = Math.min(value + 50, 100)\n  const hsl = `hsl(${hue}, ${sat}%, ${value}%)`\n  return hsl\n}\n\n// set the dimensions and margins of the graph\nvar margin = {top: 20, right: 0, bottom: 50, left: 60},\n    width = 480 - margin.left - margin.right,\n    height = 240 - margin.top - margin.bottom\n\n// parse the date / time\nvar parseTime = d3.timeParse(\"%d-%b-%y\");\n\n// set the ranges\nvar x = d3.scaleLinear()\n        .domain([...Array(9).keys()])\n        .range([...Array(9).keys()].map((el, i, arr) => width / arr.length * i))\nvar y = d3.scaleLinear()\n        .domain([0, 2000])\n        .range([height, 0])\n\n// append the svg obgect to the body of the page\n// appends a 'group' element to 'svg'\n// moves the 'group' element to the top left margin\nconst lineChart = d3.select(\".chart--line\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .attr(\"viewBox\", `0 0 ${width + margin.left + margin.right} ${height + margin.top + margin.bottom}`)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nconst table = d3.select(\".table table\")\n\nconst drawGraph = (data) => {\n  data.map((el, i, arr) => {\n    // define the line\n    const valueline = d3.line()\n        .curve(d3.curveCatmullRom)\n        .x((d) => {\n          return x(el.interpolations.indexOf(d))\n        })\n        .y((d) => {\n          return y(d.weight)\n        })\n    // Add the valueline path.\n    lineChart.append(\"path\")\n        .data([el.interpolations])\n        .attr(\"d\", valueline)\n        .attr(\"class\", \"line\")\n        .attr(\"stroke\", getColor(i, arr, 70))\n        el.interpolations.filter(function(d) { return d; })\n          .map((interpolation, interpolationIndex) => {\n            lineChart.selectAll(\"dot\")\n                .data([interpolation])\n              .enter().append(\"circle\")\n                .attr(\"class\", \"dot\")\n                .attr(\"stroke\", getColor(i, arr, 70))\n                .attr(\"cx\", valueline.x())\n                .attr(\"cy\", valueline.y())\n                .attr(\"r\", 2)\n                .exit()\n          })\n\n    const row = table.append(\"tr\")\n    row.data(el)\n\n    const pieChart = row.append(\"td\").append(\"svg\")\n        .attr(\"class\", \"pie\")\n        .attr(\"width\", 128)\n        .attr(\"height\", 128)\n        .attr(\"viewBox\", `0 0 128 128`)\n    const arcs =  d3.pie()([...el.interpolations].map(interpolation => interpolation.weight))\n    arcs.map((arc, arcIndex) => {\n      const arcRendered = d3.arc()\n        .innerRadius(48)\n        .outerRadius(64)\n        .cornerRadius(2)\n        .padAngle(.03)\n        .startAngle(arc.startAngle)\n        .endAngle(arc.endAngle);\n      pieChart.append(\"path\")\n          .attr(\"d\", arcRendered)\n          .attr(\"class\", \"arc\")\n          .attr(\"transform\", \"translate(64, 64)\")\n          .attr(\"fill\", getColor(i, arcs, 90 - arcIndex * 40 / arcs.length))\n    })\n    row.append(\"td\")\n      .text(el.name)\n    el.interpolations.map(interpolation => {\n      row.append(\"td\")\n        .text(interpolation.weight)\n    })\n\n  })\n}\n\n// gridlines in x axis function\nfunction make_x_gridlines() {\n  return d3.axisBottom(x)\n    .ticks(5)\n}\n\n// gridlines in y axis function\nfunction make_y_gridlines() {\n  return d3.axisLeft(y)\n    .ticks(5)\n}\n\n// add the X gridlines\nlineChart.append(\"g\")\n    .attr(\"class\", \"grid\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(make_x_gridlines()\n        .tickSize(-height)\n        .tickFormat(\"\")\n    )\n\n// add the Y gridlines\nlineChart.append(\"g\")\n    .attr(\"class\", \"grid\")\n    .call(make_y_gridlines()\n        .tickSize(-width)\n        .tickFormat(\"\")\n    )\n\n// Add the X Axis\nlineChart.append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x).ticks(5).tickSize(8))\nlineChart.append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x).ticks(10).tickSize(4).tickFormat(\"\"))\nlineChart.append(\"text\")\n    .text(\"Steps\")\n    .style(\"text-anchor\", \"middle\")\n    .attr(\"font-size\", \"10\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + (height + margin.top + 10) + \")\")\n\n\n// Add the Y Axis\nlineChart.append(\"g\")\n    .call(d3.axisLeft(y).ticks(5).tickSize(8));\nlineChart.append(\"g\")\n    .call(d3.axisLeft(y).ticks(15).tickSize(4).tickFormat(\"\"));\n\n//drawGraph\ndrawGraph(data);\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","// https://d3js.org Version 4.7.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.7.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(a, b, f) {\n  var na = a.length, nb = b.length, c = new Array(na * nb), ia, ib, ic, va;\n  if (f == null) f = pair;\n  for (ia = ic = 0; ia < na; ++ia) for (va = a[ia], ib = 0; ib < nb; ++ib, ++ic) c[ic] = f(va, b[ib]);\n  return c;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return sequence(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\"),\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau$2 + tau$2;\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$1(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      clipAuto;\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    if (!arguments.length) return clipAuto ? null : clipExtent();\n    if (clipAuto = _ == null) {\n      var k = pi$3 * scale(),\n          t = translate();\n      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n    }\n    clipExtent(_);\n    return m;\n  };\n\n  return m.clipExtent(null);\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance1(a, b) {\n  var l = a._.r;\n  while (a !== b) l += 2 * (a = a.next)._.r;\n  return l - b._.r;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          if (sj + a._.r + b._.r > distance1(j, b)) a = j; else b = j;\n          a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          if (distance1(a, k) > sk + a._.r + b._.r) a = k; else b = k;\n          a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential$1 = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 6\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 9\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/es6-extensions.js\n// module id = 10\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/rejection-tracking.js\n// module id = 11\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 12\n// module chunks = 0"],"sourceRoot":""}